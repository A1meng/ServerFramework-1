// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol.Common.proto

#ifndef PROTOBUF_GameProtocol_2eCommon_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_2eCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

class ZoneInfo;
class ZoneList;
class RoleID;
class LogoutServer_Request;
class LogoutServer_Response;
class AddNewName_Request;
class AddNewName_Response;
class DeleteName_Request;
class DeleteName_Response;

enum ChatChannelType {
  CHAT_CHANNEL_INVALID = 0,
  CHAT_CHANNEL_WORLD = 1,
  CHAT_CHANNEL_PRIVATE = 2,
  CHAT_CHANNEL_SYSTEM = 3
};
bool ChatChannelType_IsValid(int value);
const ChatChannelType ChatChannelType_MIN = CHAT_CHANNEL_INVALID;
const ChatChannelType ChatChannelType_MAX = CHAT_CHANNEL_SYSTEM;
const int ChatChannelType_ARRAYSIZE = ChatChannelType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatChannelType_descriptor();
inline const ::std::string& ChatChannelType_Name(ChatChannelType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatChannelType_descriptor(), value);
}
inline bool ChatChannelType_Parse(
    const ::std::string& name, ChatChannelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatChannelType>(
    ChatChannelType_descriptor(), name, value);
}
enum enNameType {
  EN_NAME_TYPE_INVALID = 0,
  EN_NAME_TYPE_ROLE = 1,
  EN_NAME_TYPE_MAX = 2
};
bool enNameType_IsValid(int value);
const enNameType enNameType_MIN = EN_NAME_TYPE_INVALID;
const enNameType enNameType_MAX = EN_NAME_TYPE_MAX;
const int enNameType_ARRAYSIZE = enNameType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enNameType_descriptor();
inline const ::std::string& enNameType_Name(enNameType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enNameType_descriptor(), value);
}
inline bool enNameType_Parse(
    const ::std::string& name, enNameType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enNameType>(
    enNameType_descriptor(), name, value);
}
// ===================================================================

class ZoneInfo : public ::google::protobuf::Message {
 public:
  ZoneInfo();
  virtual ~ZoneInfo();

  ZoneInfo(const ZoneInfo& from);

  inline ZoneInfo& operator=(const ZoneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneInfo& default_instance();

  void Swap(ZoneInfo* other);

  // implements Message ----------------------------------------------

  ZoneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneInfo& from);
  void MergeFrom(const ZoneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uZoneID = 1;
  inline bool has_uzoneid() const;
  inline void clear_uzoneid();
  static const int kUZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 uzoneid() const;
  inline void set_uzoneid(::google::protobuf::uint32 value);

  // optional string strZoneName = 2;
  inline bool has_strzonename() const;
  inline void clear_strzonename();
  static const int kStrZoneNameFieldNumber = 2;
  inline const ::std::string& strzonename() const;
  inline void set_strzonename(const ::std::string& value);
  inline void set_strzonename(const char* value);
  inline void set_strzonename(const char* value, size_t size);
  inline ::std::string* mutable_strzonename();
  inline ::std::string* release_strzonename();
  inline void set_allocated_strzonename(::std::string* strzonename);

  // optional uint32 uZoneState = 3;
  inline bool has_uzonestate() const;
  inline void clear_uzonestate();
  static const int kUZoneStateFieldNumber = 3;
  inline ::google::protobuf::uint32 uzonestate() const;
  inline void set_uzonestate(::google::protobuf::uint32 value);

  // optional string strZoneIP = 4;
  inline bool has_strzoneip() const;
  inline void clear_strzoneip();
  static const int kStrZoneIPFieldNumber = 4;
  inline const ::std::string& strzoneip() const;
  inline void set_strzoneip(const ::std::string& value);
  inline void set_strzoneip(const char* value);
  inline void set_strzoneip(const char* value, size_t size);
  inline ::std::string* mutable_strzoneip();
  inline ::std::string* release_strzoneip();
  inline void set_allocated_strzoneip(::std::string* strzoneip);

  // optional uint32 uZonePort = 5;
  inline bool has_uzoneport() const;
  inline void clear_uzoneport();
  static const int kUZonePortFieldNumber = 5;
  inline ::google::protobuf::uint32 uzoneport() const;
  inline void set_uzoneport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ZoneInfo)
 private:
  inline void set_has_uzoneid();
  inline void clear_has_uzoneid();
  inline void set_has_strzonename();
  inline void clear_has_strzonename();
  inline void set_has_uzonestate();
  inline void clear_has_uzonestate();
  inline void set_has_strzoneip();
  inline void clear_has_strzoneip();
  inline void set_has_uzoneport();
  inline void clear_has_uzoneport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strzonename_;
  ::google::protobuf::uint32 uzoneid_;
  ::google::protobuf::uint32 uzonestate_;
  ::std::string* strzoneip_;
  ::google::protobuf::uint32 uzoneport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static ZoneInfo* default_instance_;
};
// -------------------------------------------------------------------

class ZoneList : public ::google::protobuf::Message {
 public:
  ZoneList();
  virtual ~ZoneList();

  ZoneList(const ZoneList& from);

  inline ZoneList& operator=(const ZoneList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneList& default_instance();

  void Swap(ZoneList* other);

  // implements Message ----------------------------------------------

  ZoneList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneList& from);
  void MergeFrom(const ZoneList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZoneInfo stZoneInfos = 1;
  inline int stzoneinfos_size() const;
  inline void clear_stzoneinfos();
  static const int kStZoneInfosFieldNumber = 1;
  inline const ::ZoneInfo& stzoneinfos(int index) const;
  inline ::ZoneInfo* mutable_stzoneinfos(int index);
  inline ::ZoneInfo* add_stzoneinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::ZoneInfo >&
      stzoneinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ZoneInfo >*
      mutable_stzoneinfos();

  // @@protoc_insertion_point(class_scope:ZoneList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ZoneInfo > stzoneinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static ZoneList* default_instance_;
};
// -------------------------------------------------------------------

class RoleID : public ::google::protobuf::Message {
 public:
  RoleID();
  virtual ~RoleID();

  RoleID(const RoleID& from);

  inline RoleID& operator=(const RoleID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleID& default_instance();

  void Swap(RoleID* other);

  // implements Message ----------------------------------------------

  RoleID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleID& from);
  void MergeFrom(const RoleID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uiSeq = 2;
  inline bool has_uiseq() const;
  inline void clear_uiseq();
  static const int kUiSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 uiseq() const;
  inline void set_uiseq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleID)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_uiseq();
  inline void clear_has_uiseq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 uiseq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static RoleID* default_instance_;
};
// -------------------------------------------------------------------

class LogoutServer_Request : public ::google::protobuf::Message {
 public:
  LogoutServer_Request();
  virtual ~LogoutServer_Request();

  LogoutServer_Request(const LogoutServer_Request& from);

  inline LogoutServer_Request& operator=(const LogoutServer_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutServer_Request& default_instance();

  void Swap(LogoutServer_Request* other);

  // implements Message ----------------------------------------------

  LogoutServer_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutServer_Request& from);
  void MergeFrom(const LogoutServer_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 uReason = 2;
  inline bool has_ureason() const;
  inline void clear_ureason();
  static const int kUReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 ureason() const;
  inline void set_ureason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LogoutServer_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_ureason();
  inline void clear_has_ureason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 ureason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static LogoutServer_Request* default_instance_;
};
// -------------------------------------------------------------------

class LogoutServer_Response : public ::google::protobuf::Message {
 public:
  LogoutServer_Response();
  virtual ~LogoutServer_Response();

  LogoutServer_Response(const LogoutServer_Response& from);

  inline LogoutServer_Response& operator=(const LogoutServer_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutServer_Response& default_instance();

  void Swap(LogoutServer_Response* other);

  // implements Message ----------------------------------------------

  LogoutServer_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutServer_Response& from);
  void MergeFrom(const LogoutServer_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LogoutServer_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static LogoutServer_Response* default_instance_;
};
// -------------------------------------------------------------------

class AddNewName_Request : public ::google::protobuf::Message {
 public:
  AddNewName_Request();
  virtual ~AddNewName_Request();

  AddNewName_Request(const AddNewName_Request& from);

  inline AddNewName_Request& operator=(const AddNewName_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddNewName_Request& default_instance();

  void Swap(AddNewName_Request* other);

  // implements Message ----------------------------------------------

  AddNewName_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddNewName_Request& from);
  void MergeFrom(const AddNewName_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional uint32 name_id = 3;
  inline bool has_name_id() const;
  inline void clear_name_id();
  static const int kNameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 name_id() const;
  inline void set_name_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AddNewName_Request)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_name_id();
  inline void clear_has_name_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 itype_;
  ::google::protobuf::uint32 name_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static AddNewName_Request* default_instance_;
};
// -------------------------------------------------------------------

class AddNewName_Response : public ::google::protobuf::Message {
 public:
  AddNewName_Response();
  virtual ~AddNewName_Response();

  AddNewName_Response(const AddNewName_Response& from);

  inline AddNewName_Response& operator=(const AddNewName_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddNewName_Response& default_instance();

  void Swap(AddNewName_Response* other);

  // implements Message ----------------------------------------------

  AddNewName_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddNewName_Response& from);
  void MergeFrom(const AddNewName_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // optional uint32 name_id = 3;
  inline bool has_name_id() const;
  inline void clear_name_id();
  static const int kNameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 name_id() const;
  inline void set_name_id(::google::protobuf::uint32 value);

  // optional string strName = 4;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 4;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // @@protoc_insertion_point(class_scope:AddNewName_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_itype();
  inline void clear_has_itype();
  inline void set_has_name_id();
  inline void clear_has_name_id();
  inline void set_has_strname();
  inline void clear_has_strname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 itype_;
  ::std::string* strname_;
  ::google::protobuf::uint32 name_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static AddNewName_Response* default_instance_;
};
// -------------------------------------------------------------------

class DeleteName_Request : public ::google::protobuf::Message {
 public:
  DeleteName_Request();
  virtual ~DeleteName_Request();

  DeleteName_Request(const DeleteName_Request& from);

  inline DeleteName_Request& operator=(const DeleteName_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteName_Request& default_instance();

  void Swap(DeleteName_Request* other);

  // implements Message ----------------------------------------------

  DeleteName_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteName_Request& from);
  void MergeFrom(const DeleteName_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DeleteName_Request)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_itype();
  inline void clear_has_itype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 itype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static DeleteName_Request* default_instance_;
};
// -------------------------------------------------------------------

class DeleteName_Response : public ::google::protobuf::Message {
 public:
  DeleteName_Response();
  virtual ~DeleteName_Response();

  DeleteName_Response(const DeleteName_Response& from);

  inline DeleteName_Response& operator=(const DeleteName_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteName_Response& default_instance();

  void Swap(DeleteName_Response* other);

  // implements Message ----------------------------------------------

  DeleteName_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteName_Response& from);
  void MergeFrom(const DeleteName_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DeleteName_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eCommon_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eCommon_2eproto();

  void InitAsDefaultInstance();
  static DeleteName_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// ZoneInfo

// optional uint32 uZoneID = 1;
inline bool ZoneInfo::has_uzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneInfo::set_has_uzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneInfo::clear_has_uzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneInfo::clear_uzoneid() {
  uzoneid_ = 0u;
  clear_has_uzoneid();
}
inline ::google::protobuf::uint32 ZoneInfo::uzoneid() const {
  return uzoneid_;
}
inline void ZoneInfo::set_uzoneid(::google::protobuf::uint32 value) {
  set_has_uzoneid();
  uzoneid_ = value;
}

// optional string strZoneName = 2;
inline bool ZoneInfo::has_strzonename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneInfo::set_has_strzonename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneInfo::clear_has_strzonename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneInfo::clear_strzonename() {
  if (strzonename_ != &::google::protobuf::internal::kEmptyString) {
    strzonename_->clear();
  }
  clear_has_strzonename();
}
inline const ::std::string& ZoneInfo::strzonename() const {
  return *strzonename_;
}
inline void ZoneInfo::set_strzonename(const ::std::string& value) {
  set_has_strzonename();
  if (strzonename_ == &::google::protobuf::internal::kEmptyString) {
    strzonename_ = new ::std::string;
  }
  strzonename_->assign(value);
}
inline void ZoneInfo::set_strzonename(const char* value) {
  set_has_strzonename();
  if (strzonename_ == &::google::protobuf::internal::kEmptyString) {
    strzonename_ = new ::std::string;
  }
  strzonename_->assign(value);
}
inline void ZoneInfo::set_strzonename(const char* value, size_t size) {
  set_has_strzonename();
  if (strzonename_ == &::google::protobuf::internal::kEmptyString) {
    strzonename_ = new ::std::string;
  }
  strzonename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ZoneInfo::mutable_strzonename() {
  set_has_strzonename();
  if (strzonename_ == &::google::protobuf::internal::kEmptyString) {
    strzonename_ = new ::std::string;
  }
  return strzonename_;
}
inline ::std::string* ZoneInfo::release_strzonename() {
  clear_has_strzonename();
  if (strzonename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strzonename_;
    strzonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ZoneInfo::set_allocated_strzonename(::std::string* strzonename) {
  if (strzonename_ != &::google::protobuf::internal::kEmptyString) {
    delete strzonename_;
  }
  if (strzonename) {
    set_has_strzonename();
    strzonename_ = strzonename;
  } else {
    clear_has_strzonename();
    strzonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 uZoneState = 3;
inline bool ZoneInfo::has_uzonestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZoneInfo::set_has_uzonestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZoneInfo::clear_has_uzonestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZoneInfo::clear_uzonestate() {
  uzonestate_ = 0u;
  clear_has_uzonestate();
}
inline ::google::protobuf::uint32 ZoneInfo::uzonestate() const {
  return uzonestate_;
}
inline void ZoneInfo::set_uzonestate(::google::protobuf::uint32 value) {
  set_has_uzonestate();
  uzonestate_ = value;
}

// optional string strZoneIP = 4;
inline bool ZoneInfo::has_strzoneip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ZoneInfo::set_has_strzoneip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ZoneInfo::clear_has_strzoneip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ZoneInfo::clear_strzoneip() {
  if (strzoneip_ != &::google::protobuf::internal::kEmptyString) {
    strzoneip_->clear();
  }
  clear_has_strzoneip();
}
inline const ::std::string& ZoneInfo::strzoneip() const {
  return *strzoneip_;
}
inline void ZoneInfo::set_strzoneip(const ::std::string& value) {
  set_has_strzoneip();
  if (strzoneip_ == &::google::protobuf::internal::kEmptyString) {
    strzoneip_ = new ::std::string;
  }
  strzoneip_->assign(value);
}
inline void ZoneInfo::set_strzoneip(const char* value) {
  set_has_strzoneip();
  if (strzoneip_ == &::google::protobuf::internal::kEmptyString) {
    strzoneip_ = new ::std::string;
  }
  strzoneip_->assign(value);
}
inline void ZoneInfo::set_strzoneip(const char* value, size_t size) {
  set_has_strzoneip();
  if (strzoneip_ == &::google::protobuf::internal::kEmptyString) {
    strzoneip_ = new ::std::string;
  }
  strzoneip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ZoneInfo::mutable_strzoneip() {
  set_has_strzoneip();
  if (strzoneip_ == &::google::protobuf::internal::kEmptyString) {
    strzoneip_ = new ::std::string;
  }
  return strzoneip_;
}
inline ::std::string* ZoneInfo::release_strzoneip() {
  clear_has_strzoneip();
  if (strzoneip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strzoneip_;
    strzoneip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ZoneInfo::set_allocated_strzoneip(::std::string* strzoneip) {
  if (strzoneip_ != &::google::protobuf::internal::kEmptyString) {
    delete strzoneip_;
  }
  if (strzoneip) {
    set_has_strzoneip();
    strzoneip_ = strzoneip;
  } else {
    clear_has_strzoneip();
    strzoneip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 uZonePort = 5;
inline bool ZoneInfo::has_uzoneport() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ZoneInfo::set_has_uzoneport() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ZoneInfo::clear_has_uzoneport() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ZoneInfo::clear_uzoneport() {
  uzoneport_ = 0u;
  clear_has_uzoneport();
}
inline ::google::protobuf::uint32 ZoneInfo::uzoneport() const {
  return uzoneport_;
}
inline void ZoneInfo::set_uzoneport(::google::protobuf::uint32 value) {
  set_has_uzoneport();
  uzoneport_ = value;
}

// -------------------------------------------------------------------

// ZoneList

// repeated .ZoneInfo stZoneInfos = 1;
inline int ZoneList::stzoneinfos_size() const {
  return stzoneinfos_.size();
}
inline void ZoneList::clear_stzoneinfos() {
  stzoneinfos_.Clear();
}
inline const ::ZoneInfo& ZoneList::stzoneinfos(int index) const {
  return stzoneinfos_.Get(index);
}
inline ::ZoneInfo* ZoneList::mutable_stzoneinfos(int index) {
  return stzoneinfos_.Mutable(index);
}
inline ::ZoneInfo* ZoneList::add_stzoneinfos() {
  return stzoneinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ZoneInfo >&
ZoneList::stzoneinfos() const {
  return stzoneinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ZoneInfo >*
ZoneList::mutable_stzoneinfos() {
  return &stzoneinfos_;
}

// -------------------------------------------------------------------

// RoleID

// optional uint32 uin = 1;
inline bool RoleID::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleID::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleID::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleID::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 RoleID::uin() const {
  return uin_;
}
inline void RoleID::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uiSeq = 2;
inline bool RoleID::has_uiseq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleID::set_has_uiseq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleID::clear_has_uiseq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleID::clear_uiseq() {
  uiseq_ = 0u;
  clear_has_uiseq();
}
inline ::google::protobuf::uint32 RoleID::uiseq() const {
  return uiseq_;
}
inline void RoleID::set_uiseq(::google::protobuf::uint32 value) {
  set_has_uiseq();
  uiseq_ = value;
}

// -------------------------------------------------------------------

// LogoutServer_Request

// optional uint32 uin = 1;
inline bool LogoutServer_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutServer_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutServer_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutServer_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 LogoutServer_Request::uin() const {
  return uin_;
}
inline void LogoutServer_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 uReason = 2;
inline bool LogoutServer_Request::has_ureason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutServer_Request::set_has_ureason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutServer_Request::clear_has_ureason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutServer_Request::clear_ureason() {
  ureason_ = 0u;
  clear_has_ureason();
}
inline ::google::protobuf::uint32 LogoutServer_Request::ureason() const {
  return ureason_;
}
inline void LogoutServer_Request::set_ureason(::google::protobuf::uint32 value) {
  set_has_ureason();
  ureason_ = value;
}

// -------------------------------------------------------------------

// LogoutServer_Response

// optional int32 iResult = 1;
inline bool LogoutServer_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutServer_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutServer_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutServer_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 LogoutServer_Response::iresult() const {
  return iresult_;
}
inline void LogoutServer_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// AddNewName_Request

// optional string strName = 1;
inline bool AddNewName_Request::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddNewName_Request::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddNewName_Request::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddNewName_Request::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& AddNewName_Request::strname() const {
  return *strname_;
}
inline void AddNewName_Request::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void AddNewName_Request::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void AddNewName_Request::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddNewName_Request::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* AddNewName_Request::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddNewName_Request::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iType = 2;
inline bool AddNewName_Request::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddNewName_Request::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddNewName_Request::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddNewName_Request::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 AddNewName_Request::itype() const {
  return itype_;
}
inline void AddNewName_Request::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional uint32 name_id = 3;
inline bool AddNewName_Request::has_name_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddNewName_Request::set_has_name_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddNewName_Request::clear_has_name_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddNewName_Request::clear_name_id() {
  name_id_ = 0u;
  clear_has_name_id();
}
inline ::google::protobuf::uint32 AddNewName_Request::name_id() const {
  return name_id_;
}
inline void AddNewName_Request::set_name_id(::google::protobuf::uint32 value) {
  set_has_name_id();
  name_id_ = value;
}

// -------------------------------------------------------------------

// AddNewName_Response

// optional int32 iResult = 1;
inline bool AddNewName_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddNewName_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddNewName_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddNewName_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 AddNewName_Response::iresult() const {
  return iresult_;
}
inline void AddNewName_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iType = 2;
inline bool AddNewName_Response::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddNewName_Response::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddNewName_Response::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddNewName_Response::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 AddNewName_Response::itype() const {
  return itype_;
}
inline void AddNewName_Response::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// optional uint32 name_id = 3;
inline bool AddNewName_Response::has_name_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddNewName_Response::set_has_name_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddNewName_Response::clear_has_name_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddNewName_Response::clear_name_id() {
  name_id_ = 0u;
  clear_has_name_id();
}
inline ::google::protobuf::uint32 AddNewName_Response::name_id() const {
  return name_id_;
}
inline void AddNewName_Response::set_name_id(::google::protobuf::uint32 value) {
  set_has_name_id();
  name_id_ = value;
}

// optional string strName = 4;
inline bool AddNewName_Response::has_strname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddNewName_Response::set_has_strname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddNewName_Response::clear_has_strname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddNewName_Response::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& AddNewName_Response::strname() const {
  return *strname_;
}
inline void AddNewName_Response::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void AddNewName_Response::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void AddNewName_Response::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddNewName_Response::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* AddNewName_Response::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddNewName_Response::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DeleteName_Request

// optional string strName = 1;
inline bool DeleteName_Request::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteName_Request::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteName_Request::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteName_Request::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& DeleteName_Request::strname() const {
  return *strname_;
}
inline void DeleteName_Request::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void DeleteName_Request::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void DeleteName_Request::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteName_Request::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* DeleteName_Request::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeleteName_Request::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iType = 2;
inline bool DeleteName_Request::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteName_Request::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteName_Request::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteName_Request::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 DeleteName_Request::itype() const {
  return itype_;
}
inline void DeleteName_Request::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// -------------------------------------------------------------------

// DeleteName_Response

// optional int32 iResult = 1;
inline bool DeleteName_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteName_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteName_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteName_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 DeleteName_Response::iresult() const {
  return iresult_;
}
inline void DeleteName_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ChatChannelType>() {
  return ::ChatChannelType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enNameType>() {
  return ::enNameType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_2eCommon_2eproto__INCLUDED
