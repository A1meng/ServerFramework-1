// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol.Fight.proto

#ifndef PROTOBUF_GameProtocol_2eFight_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_2eFight_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol.Common.pb.h"
#include "GameProtocol.USERDB.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

class UnitPosition;
class UnitPath;
class Zone_DoCombat_Request;
class Zone_DoCombat_Response;
class CombatUnit;
class CombatCamp;
class Zone_Battlefield_Notify;
class Zone_CombatMove_Request;
class Zone_CombatMove_Response;
class Zone_CombatAction_Request;
class Zone_CombatAction_Response;
class Zone_CombatMove_Notify;
class ActionTarget;
class Zone_CombatAction_Notify;
class OneRewardInfo;
class CombatReward;
class Zone_FinCombat_Notify;
class Zone_UnitDirective_Notify;
class Zone_UpdatePartnerAI_Request;
class Zone_UpdatePartnerAI_Response;
class BuffEffect;
class RemoveOneBuffEffect;
class RemoveBuffEffect;
class AddBuffInfo;
class OneAddBuff;
class Zone_CombatAddBuff_Notify;
class Zone_DoBuffEffect_Notify;
class Zone_RemoveBuff_Notify;
class Zone_AddCombatUnit_Notify;
class Zone_KillCombatUnit_Notify;
class Zone_AddCombatTrap_Notify;
class Zone_TriggerCombatTrap_Notify;
class Zone_DeleteCombatTrap_Notify;
class Zone_UnitAttrChange_Notify;
class Zone_StartPVPCombat_Request;
class Zone_StartPVPCombat_Response;
class Zone_StartPVPCombat_Notify;
class Zone_AcceptPVPCombat_Request;
class Zone_AcceptPVPCombat_Response;
class Zone_RejectPVPCombat_Notify;
class Zone_ChangeFightState_Notify;
class OneCombatUnitInfo;
class CombatForm;
class Zone_SetCombatForm_Request;
class Zone_SetCombatForm_Response;
class Zone_SetCombatForm_Notify;
class Zone_DecreaseUnitBuff_Notify;
class OneActionInfo;
class Zone_ActionUnitInfo_Notify;
class SkillCDInfo;
class Zone_SkillCDRound_Notify;

enum CombatType {
  COMBAT_TYPE_INVALID = 0,
  COMBAT_TYPE_PVE = 1,
  COMBAT_TYPE_PVP = 2
};
bool CombatType_IsValid(int value);
const CombatType CombatType_MIN = COMBAT_TYPE_INVALID;
const CombatType CombatType_MAX = COMBAT_TYPE_PVP;
const int CombatType_ARRAYSIZE = CombatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatType_descriptor();
inline const ::std::string& CombatType_Name(CombatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatType_descriptor(), value);
}
inline bool CombatType_Parse(
    const ::std::string& name, CombatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatType>(
    CombatType_descriptor(), name, value);
}
enum CombatUnitType {
  COMBAT_UNIT_TYPE_INVALID = 0,
  COMBAT_UNIT_TYPE_ROLE = 1,
  COMBAT_UNIT_TYPE_PARTNER = 2,
  COMBAT_UNIT_TYPE_MONSTER = 3
};
bool CombatUnitType_IsValid(int value);
const CombatUnitType CombatUnitType_MIN = COMBAT_UNIT_TYPE_INVALID;
const CombatUnitType CombatUnitType_MAX = COMBAT_UNIT_TYPE_MONSTER;
const int CombatUnitType_ARRAYSIZE = CombatUnitType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatUnitType_descriptor();
inline const ::std::string& CombatUnitType_Name(CombatUnitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatUnitType_descriptor(), value);
}
inline bool CombatUnitType_Parse(
    const ::std::string& name, CombatUnitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatUnitType>(
    CombatUnitType_descriptor(), name, value);
}
enum UnitDirectiveType {
  UNIT_DIRECTIVE_INVALID = 0,
  UNIT_DIRECTIVE_PARTNERAI = 1,
  UNIT_DIRECTIVE_MOVE = 2,
  UNIT_DIRECTIVE_ACTION = 3,
  UNIT_DIRECTIVE_SETFORM = 4
};
bool UnitDirectiveType_IsValid(int value);
const UnitDirectiveType UnitDirectiveType_MIN = UNIT_DIRECTIVE_INVALID;
const UnitDirectiveType UnitDirectiveType_MAX = UNIT_DIRECTIVE_SETFORM;
const int UnitDirectiveType_ARRAYSIZE = UnitDirectiveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnitDirectiveType_descriptor();
inline const ::std::string& UnitDirectiveType_Name(UnitDirectiveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitDirectiveType_descriptor(), value);
}
inline bool UnitDirectiveType_Parse(
    const ::std::string& name, UnitDirectiveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitDirectiveType>(
    UnitDirectiveType_descriptor(), name, value);
}
enum ActionType {
  COMBAT_ACTION_INVALID = 0,
  COMBAT_ACTION_CASTSKILL = 1,
  COMBAT_ACTION_USEITEM = 2,
  COMBAT_ACTION_IDLE = 3,
  COMBAT_ACTION_TRIGGER_TRAP = 4,
  COMBAT_ACTION_ATTACK_TRAP = 5
};
bool ActionType_IsValid(int value);
const ActionType ActionType_MIN = COMBAT_ACTION_INVALID;
const ActionType ActionType_MAX = COMBAT_ACTION_ATTACK_TRAP;
const int ActionType_ARRAYSIZE = ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionType_descriptor();
inline const ::std::string& ActionType_Name(ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionType_descriptor(), value);
}
inline bool ActionType_Parse(
    const ::std::string& name, ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionType>(
    ActionType_descriptor(), name, value);
}
enum ActionEffectStatus {
  ACTION_EFFECT_STATUS_MINZHONG = 0,
  ACTION_EFFECT_STATUS_GEDANG = 1,
  ACTION_EFFECT_STATUS_BAOJI = 2,
  ACTION_EFFECT_STATUS_SHANBI = 3,
  ACTION_EFFECT_STATUS_MAX = 4
};
bool ActionEffectStatus_IsValid(int value);
const ActionEffectStatus ActionEffectStatus_MIN = ACTION_EFFECT_STATUS_MINZHONG;
const ActionEffectStatus ActionEffectStatus_MAX = ACTION_EFFECT_STATUS_MAX;
const int ActionEffectStatus_ARRAYSIZE = ActionEffectStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionEffectStatus_descriptor();
inline const ::std::string& ActionEffectStatus_Name(ActionEffectStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionEffectStatus_descriptor(), value);
}
inline bool ActionEffectStatus_Parse(
    const ::std::string& name, ActionEffectStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionEffectStatus>(
    ActionEffectStatus_descriptor(), name, value);
}
enum COMBATUNITSTATUS {
  COMBAT_UNIT_STATUS_NOTMOVE = 1,
  COMBAT_UNIT_STATUS_NOTACTION = 2,
  COMBAT_UNIT_STATUS_NOTROUND = 3,
  COMBAT_UNIT_STATUS_IGNOREJOINT = 4,
  COMBAT_UNIT_STATUS_UNBENDING = 5
};
bool COMBATUNITSTATUS_IsValid(int value);
const COMBATUNITSTATUS COMBATUNITSTATUS_MIN = COMBAT_UNIT_STATUS_NOTMOVE;
const COMBATUNITSTATUS COMBATUNITSTATUS_MAX = COMBAT_UNIT_STATUS_UNBENDING;
const int COMBATUNITSTATUS_ARRAYSIZE = COMBATUNITSTATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* COMBATUNITSTATUS_descriptor();
inline const ::std::string& COMBATUNITSTATUS_Name(COMBATUNITSTATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    COMBATUNITSTATUS_descriptor(), value);
}
inline bool COMBATUNITSTATUS_Parse(
    const ::std::string& name, COMBATUNITSTATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<COMBATUNITSTATUS>(
    COMBATUNITSTATUS_descriptor(), name, value);
}
enum CombatMoveType {
  COMBAT_MOVE_INVALID = 0,
  COMBAT_MOVE_NORMAL = 1,
  COMBAT_MOVE_TELEPORT = 2,
  COMBAT_MOVE_JUMP = 3,
  COMBAT_MOVE_RUSH = 4
};
bool CombatMoveType_IsValid(int value);
const CombatMoveType CombatMoveType_MIN = COMBAT_MOVE_INVALID;
const CombatMoveType CombatMoveType_MAX = COMBAT_MOVE_RUSH;
const int CombatMoveType_ARRAYSIZE = CombatMoveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatMoveType_descriptor();
inline const ::std::string& CombatMoveType_Name(CombatMoveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatMoveType_descriptor(), value);
}
inline bool CombatMoveType_Parse(
    const ::std::string& name, CombatMoveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatMoveType>(
    CombatMoveType_descriptor(), name, value);
}
// ===================================================================

class UnitPosition : public ::google::protobuf::Message {
 public:
  UnitPosition();
  virtual ~UnitPosition();

  UnitPosition(const UnitPosition& from);

  inline UnitPosition& operator=(const UnitPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitPosition& default_instance();

  void Swap(UnitPosition* other);

  // implements Message ----------------------------------------------

  UnitPosition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitPosition& from);
  void MergeFrom(const UnitPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iPosX = 1;
  inline bool has_iposx() const;
  inline void clear_iposx();
  static const int kIPosXFieldNumber = 1;
  inline ::google::protobuf::int32 iposx() const;
  inline void set_iposx(::google::protobuf::int32 value);

  // optional int32 iPosY = 2;
  inline bool has_iposy() const;
  inline void clear_iposy();
  static const int kIPosYFieldNumber = 2;
  inline ::google::protobuf::int32 iposy() const;
  inline void set_iposy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnitPosition)
 private:
  inline void set_has_iposx();
  inline void clear_has_iposx();
  inline void set_has_iposy();
  inline void clear_has_iposy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iposx_;
  ::google::protobuf::int32 iposy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static UnitPosition* default_instance_;
};
// -------------------------------------------------------------------

class UnitPath : public ::google::protobuf::Message {
 public:
  UnitPath();
  virtual ~UnitPath();

  UnitPath(const UnitPath& from);

  inline UnitPath& operator=(const UnitPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitPath& default_instance();

  void Swap(UnitPath* other);

  // implements Message ----------------------------------------------

  UnitPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitPath& from);
  void MergeFrom(const UnitPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UnitPosition stPoses = 1;
  inline int stposes_size() const;
  inline void clear_stposes();
  static const int kStPosesFieldNumber = 1;
  inline const ::UnitPosition& stposes(int index) const;
  inline ::UnitPosition* mutable_stposes(int index);
  inline ::UnitPosition* add_stposes();
  inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
      stposes() const;
  inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
      mutable_stposes();

  // @@protoc_insertion_point(class_scope:UnitPath)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UnitPosition > stposes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static UnitPath* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DoCombat_Request : public ::google::protobuf::Message {
 public:
  Zone_DoCombat_Request();
  virtual ~Zone_DoCombat_Request();

  Zone_DoCombat_Request(const Zone_DoCombat_Request& from);

  inline Zone_DoCombat_Request& operator=(const Zone_DoCombat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DoCombat_Request& default_instance();

  void Swap(Zone_DoCombat_Request* other);

  // implements Message ----------------------------------------------

  Zone_DoCombat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DoCombat_Request& from);
  void MergeFrom(const Zone_DoCombat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CombatType eType = 1 [default = COMBAT_TYPE_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 1;
  inline ::CombatType etype() const;
  inline void set_etype(::CombatType value);

  // optional int32 iLevelID = 2;
  inline bool has_ilevelid() const;
  inline void clear_ilevelid();
  static const int kILevelIDFieldNumber = 2;
  inline ::google::protobuf::int32 ilevelid() const;
  inline void set_ilevelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DoCombat_Request)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_ilevelid();
  inline void clear_has_ilevelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int etype_;
  ::google::protobuf::int32 ilevelid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_DoCombat_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DoCombat_Response : public ::google::protobuf::Message {
 public:
  Zone_DoCombat_Response();
  virtual ~Zone_DoCombat_Response();

  Zone_DoCombat_Response(const Zone_DoCombat_Response& from);

  inline Zone_DoCombat_Response& operator=(const Zone_DoCombat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DoCombat_Response& default_instance();

  void Swap(Zone_DoCombat_Response* other);

  // implements Message ----------------------------------------------

  Zone_DoCombat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DoCombat_Response& from);
  void MergeFrom(const Zone_DoCombat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DoCombat_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_DoCombat_Response* default_instance_;
};
// -------------------------------------------------------------------

class CombatUnit : public ::google::protobuf::Message {
 public:
  CombatUnit();
  virtual ~CombatUnit();

  CombatUnit(const CombatUnit& from);

  inline CombatUnit& operator=(const CombatUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatUnit& default_instance();

  void Swap(CombatUnit* other);

  // implements Message ----------------------------------------------

  CombatUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatUnit& from);
  void MergeFrom(const CombatUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CombatUnitType eType = 1;
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 1;
  inline ::CombatUnitType etype() const;
  inline void set_etype(::CombatUnitType value);

  // optional int32 iUnitID = 2;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 2;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional int32 iConfigID = 3;
  inline bool has_iconfigid() const;
  inline void clear_iconfigid();
  static const int kIConfigIDFieldNumber = 3;
  inline ::google::protobuf::int32 iconfigid() const;
  inline void set_iconfigid(::google::protobuf::int32 value);

  // optional .UnitPosition stPos = 4;
  inline bool has_stpos() const;
  inline void clear_stpos();
  static const int kStPosFieldNumber = 4;
  inline const ::UnitPosition& stpos() const;
  inline ::UnitPosition* mutable_stpos();
  inline ::UnitPosition* release_stpos();
  inline void set_allocated_stpos(::UnitPosition* stpos);

  // optional int32 iDirection = 5;
  inline bool has_idirection() const;
  inline void clear_idirection();
  static const int kIDirectionFieldNumber = 5;
  inline ::google::protobuf::int32 idirection() const;
  inline void set_idirection(::google::protobuf::int32 value);

  // repeated int32 iAttributes = 6;
  inline int iattributes_size() const;
  inline void clear_iattributes();
  static const int kIAttributesFieldNumber = 6;
  inline ::google::protobuf::int32 iattributes(int index) const;
  inline void set_iattributes(int index, ::google::protobuf::int32 value);
  inline void add_iattributes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      iattributes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_iattributes();

  // optional int32 iNormalSkill = 7;
  inline bool has_inormalskill() const;
  inline void clear_inormalskill();
  static const int kINormalSkillFieldNumber = 7;
  inline ::google::protobuf::int32 inormalskill() const;
  inline void set_inormalskill(::google::protobuf::int32 value);

  // repeated .OneSlotInfo stItems = 8;
  inline int stitems_size() const;
  inline void clear_stitems();
  static const int kStItemsFieldNumber = 8;
  inline const ::OneSlotInfo& stitems(int index) const;
  inline ::OneSlotInfo* mutable_stitems(int index);
  inline ::OneSlotInfo* add_stitems();
  inline const ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >&
      stitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >*
      mutable_stitems();

  // optional int32 iUnitAIID = 9;
  inline bool has_iunitaiid() const;
  inline void clear_iunitaiid();
  static const int kIUnitAIIDFieldNumber = 9;
  inline ::google::protobuf::int32 iunitaiid() const;
  inline void set_iunitaiid(::google::protobuf::int32 value);

  // optional int32 iCamp = 10;
  inline bool has_icamp() const;
  inline void clear_icamp();
  static const int kICampFieldNumber = 10;
  inline ::google::protobuf::int32 icamp() const;
  inline void set_icamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CombatUnit)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_iconfigid();
  inline void clear_has_iconfigid();
  inline void set_has_stpos();
  inline void clear_has_stpos();
  inline void set_has_idirection();
  inline void clear_has_idirection();
  inline void set_has_inormalskill();
  inline void clear_has_inormalskill();
  inline void set_has_iunitaiid();
  inline void clear_has_iunitaiid();
  inline void set_has_icamp();
  inline void clear_has_icamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int etype_;
  ::google::protobuf::int32 iunitid_;
  ::UnitPosition* stpos_;
  ::google::protobuf::int32 iconfigid_;
  ::google::protobuf::int32 idirection_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > iattributes_;
  ::google::protobuf::RepeatedPtrField< ::OneSlotInfo > stitems_;
  ::google::protobuf::int32 inormalskill_;
  ::google::protobuf::int32 iunitaiid_;
  ::google::protobuf::int32 icamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static CombatUnit* default_instance_;
};
// -------------------------------------------------------------------

class CombatCamp : public ::google::protobuf::Message {
 public:
  CombatCamp();
  virtual ~CombatCamp();

  CombatCamp(const CombatCamp& from);

  inline CombatCamp& operator=(const CombatCamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatCamp& default_instance();

  void Swap(CombatCamp* other);

  // implements Message ----------------------------------------------

  CombatCamp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatCamp& from);
  void MergeFrom(const CombatCamp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiUin = 1;
  inline bool has_uiuin() const;
  inline void clear_uiuin();
  static const int kUiUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uiuin() const;
  inline void set_uiuin(::google::protobuf::uint32 value);

  // optional string strNickName = 3;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 3;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const char* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // repeated .CombatUnit stUnits = 2;
  inline int stunits_size() const;
  inline void clear_stunits();
  static const int kStUnitsFieldNumber = 2;
  inline const ::CombatUnit& stunits(int index) const;
  inline ::CombatUnit* mutable_stunits(int index);
  inline ::CombatUnit* add_stunits();
  inline const ::google::protobuf::RepeatedPtrField< ::CombatUnit >&
      stunits() const;
  inline ::google::protobuf::RepeatedPtrField< ::CombatUnit >*
      mutable_stunits();

  // @@protoc_insertion_point(class_scope:CombatCamp)
 private:
  inline void set_has_uiuin();
  inline void clear_has_uiuin();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strnickname_;
  ::google::protobuf::RepeatedPtrField< ::CombatUnit > stunits_;
  ::google::protobuf::uint32 uiuin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static CombatCamp* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Battlefield_Notify : public ::google::protobuf::Message {
 public:
  Zone_Battlefield_Notify();
  virtual ~Zone_Battlefield_Notify();

  Zone_Battlefield_Notify(const Zone_Battlefield_Notify& from);

  inline Zone_Battlefield_Notify& operator=(const Zone_Battlefield_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Battlefield_Notify& default_instance();

  void Swap(Zone_Battlefield_Notify* other);

  // implements Message ----------------------------------------------

  Zone_Battlefield_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Battlefield_Notify& from);
  void MergeFrom(const Zone_Battlefield_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iCrossID = 1;
  inline bool has_icrossid() const;
  inline void clear_icrossid();
  static const int kICrossIDFieldNumber = 1;
  inline ::google::protobuf::int32 icrossid() const;
  inline void set_icrossid(::google::protobuf::int32 value);

  // optional .CombatCamp stCampActive = 2;
  inline bool has_stcampactive() const;
  inline void clear_stcampactive();
  static const int kStCampActiveFieldNumber = 2;
  inline const ::CombatCamp& stcampactive() const;
  inline ::CombatCamp* mutable_stcampactive();
  inline ::CombatCamp* release_stcampactive();
  inline void set_allocated_stcampactive(::CombatCamp* stcampactive);

  // optional .CombatCamp stCampPassive = 3;
  inline bool has_stcamppassive() const;
  inline void clear_stcamppassive();
  static const int kStCampPassiveFieldNumber = 3;
  inline const ::CombatCamp& stcamppassive() const;
  inline ::CombatCamp* mutable_stcamppassive();
  inline ::CombatCamp* release_stcamppassive();
  inline void set_allocated_stcamppassive(::CombatCamp* stcamppassive);

  // repeated .UnitPosition stActiveposes = 5;
  inline int stactiveposes_size() const;
  inline void clear_stactiveposes();
  static const int kStActiveposesFieldNumber = 5;
  inline const ::UnitPosition& stactiveposes(int index) const;
  inline ::UnitPosition* mutable_stactiveposes(int index);
  inline ::UnitPosition* add_stactiveposes();
  inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
      stactiveposes() const;
  inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
      mutable_stactiveposes();

  // repeated .UnitPosition stPassivePoses = 6;
  inline int stpassiveposes_size() const;
  inline void clear_stpassiveposes();
  static const int kStPassivePosesFieldNumber = 6;
  inline const ::UnitPosition& stpassiveposes(int index) const;
  inline ::UnitPosition* mutable_stpassiveposes(int index);
  inline ::UnitPosition* add_stpassiveposes();
  inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
      stpassiveposes() const;
  inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
      mutable_stpassiveposes();

  // @@protoc_insertion_point(class_scope:Zone_Battlefield_Notify)
 private:
  inline void set_has_icrossid();
  inline void clear_has_icrossid();
  inline void set_has_stcampactive();
  inline void clear_has_stcampactive();
  inline void set_has_stcamppassive();
  inline void clear_has_stcamppassive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CombatCamp* stcampactive_;
  ::CombatCamp* stcamppassive_;
  ::google::protobuf::RepeatedPtrField< ::UnitPosition > stactiveposes_;
  ::google::protobuf::RepeatedPtrField< ::UnitPosition > stpassiveposes_;
  ::google::protobuf::int32 icrossid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_Battlefield_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatMove_Request : public ::google::protobuf::Message {
 public:
  Zone_CombatMove_Request();
  virtual ~Zone_CombatMove_Request();

  Zone_CombatMove_Request(const Zone_CombatMove_Request& from);

  inline Zone_CombatMove_Request& operator=(const Zone_CombatMove_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatMove_Request& default_instance();

  void Swap(Zone_CombatMove_Request* other);

  // implements Message ----------------------------------------------

  Zone_CombatMove_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatMove_Request& from);
  void MergeFrom(const Zone_CombatMove_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UnitPath stPath = 1;
  inline bool has_stpath() const;
  inline void clear_stpath();
  static const int kStPathFieldNumber = 1;
  inline const ::UnitPath& stpath() const;
  inline ::UnitPath* mutable_stpath();
  inline ::UnitPath* release_stpath();
  inline void set_allocated_stpath(::UnitPath* stpath);

  // @@protoc_insertion_point(class_scope:Zone_CombatMove_Request)
 private:
  inline void set_has_stpath();
  inline void clear_has_stpath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UnitPath* stpath_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatMove_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatMove_Response : public ::google::protobuf::Message {
 public:
  Zone_CombatMove_Response();
  virtual ~Zone_CombatMove_Response();

  Zone_CombatMove_Response(const Zone_CombatMove_Response& from);

  inline Zone_CombatMove_Response& operator=(const Zone_CombatMove_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatMove_Response& default_instance();

  void Swap(Zone_CombatMove_Response* other);

  // implements Message ----------------------------------------------

  Zone_CombatMove_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatMove_Response& from);
  void MergeFrom(const Zone_CombatMove_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_CombatMove_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatMove_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatAction_Request : public ::google::protobuf::Message {
 public:
  Zone_CombatAction_Request();
  virtual ~Zone_CombatAction_Request();

  Zone_CombatAction_Request(const Zone_CombatAction_Request& from);

  inline Zone_CombatAction_Request& operator=(const Zone_CombatAction_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatAction_Request& default_instance();

  void Swap(Zone_CombatAction_Request* other);

  // implements Message ----------------------------------------------

  Zone_CombatAction_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatAction_Request& from);
  void MergeFrom(const Zone_CombatAction_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActionType eType = 1 [default = COMBAT_ACTION_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 1;
  inline ::ActionType etype() const;
  inline void set_etype(::ActionType value);

  // optional int32 iCastSkillID = 2;
  inline bool has_icastskillid() const;
  inline void clear_icastskillid();
  static const int kICastSkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 icastskillid() const;
  inline void set_icastskillid(::google::protobuf::int32 value);

  // optional int32 iItemID = 3;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional .UnitPosition stPos = 4;
  inline bool has_stpos() const;
  inline void clear_stpos();
  static const int kStPosFieldNumber = 4;
  inline const ::UnitPosition& stpos() const;
  inline ::UnitPosition* mutable_stpos();
  inline ::UnitPosition* release_stpos();
  inline void set_allocated_stpos(::UnitPosition* stpos);

  // optional int32 iDirection = 5;
  inline bool has_idirection() const;
  inline void clear_idirection();
  static const int kIDirectionFieldNumber = 5;
  inline ::google::protobuf::int32 idirection() const;
  inline void set_idirection(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_CombatAction_Request)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_icastskillid();
  inline void clear_has_icastskillid();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_stpos();
  inline void clear_has_stpos();
  inline void set_has_idirection();
  inline void clear_has_idirection();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int etype_;
  ::google::protobuf::int32 icastskillid_;
  ::UnitPosition* stpos_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 idirection_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatAction_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatAction_Response : public ::google::protobuf::Message {
 public:
  Zone_CombatAction_Response();
  virtual ~Zone_CombatAction_Response();

  Zone_CombatAction_Response(const Zone_CombatAction_Response& from);

  inline Zone_CombatAction_Response& operator=(const Zone_CombatAction_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatAction_Response& default_instance();

  void Swap(Zone_CombatAction_Response* other);

  // implements Message ----------------------------------------------

  Zone_CombatAction_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatAction_Response& from);
  void MergeFrom(const Zone_CombatAction_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .ActionType eType = 2 [default = COMBAT_ACTION_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 2;
  inline ::ActionType etype() const;
  inline void set_etype(::ActionType value);

  // @@protoc_insertion_point(class_scope:Zone_CombatAction_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  int etype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatAction_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatMove_Notify : public ::google::protobuf::Message {
 public:
  Zone_CombatMove_Notify();
  virtual ~Zone_CombatMove_Notify();

  Zone_CombatMove_Notify(const Zone_CombatMove_Notify& from);

  inline Zone_CombatMove_Notify& operator=(const Zone_CombatMove_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatMove_Notify& default_instance();

  void Swap(Zone_CombatMove_Notify* other);

  // implements Message ----------------------------------------------

  Zone_CombatMove_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatMove_Notify& from);
  void MergeFrom(const Zone_CombatMove_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional .UnitPath stPath = 2;
  inline bool has_stpath() const;
  inline void clear_stpath();
  static const int kStPathFieldNumber = 2;
  inline const ::UnitPath& stpath() const;
  inline ::UnitPath* mutable_stpath();
  inline ::UnitPath* release_stpath();
  inline void set_allocated_stpath(::UnitPath* stpath);

  // optional int32 iDirection = 3;
  inline bool has_idirection() const;
  inline void clear_idirection();
  static const int kIDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 idirection() const;
  inline void set_idirection(::google::protobuf::int32 value);

  // optional int32 iMoveType = 4;
  inline bool has_imovetype() const;
  inline void clear_imovetype();
  static const int kIMoveTypeFieldNumber = 4;
  inline ::google::protobuf::int32 imovetype() const;
  inline void set_imovetype(::google::protobuf::int32 value);

  // optional int32 iAnimType = 5;
  inline bool has_ianimtype() const;
  inline void clear_ianimtype();
  static const int kIAnimTypeFieldNumber = 5;
  inline ::google::protobuf::int32 ianimtype() const;
  inline void set_ianimtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_CombatMove_Notify)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_stpath();
  inline void clear_has_stpath();
  inline void set_has_idirection();
  inline void clear_has_idirection();
  inline void set_has_imovetype();
  inline void clear_has_imovetype();
  inline void set_has_ianimtype();
  inline void clear_has_ianimtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UnitPath* stpath_;
  ::google::protobuf::int32 iunitid_;
  ::google::protobuf::int32 idirection_;
  ::google::protobuf::int32 imovetype_;
  ::google::protobuf::int32 ianimtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatMove_Notify* default_instance_;
};
// -------------------------------------------------------------------

class ActionTarget : public ::google::protobuf::Message {
 public:
  ActionTarget();
  virtual ~ActionTarget();

  ActionTarget(const ActionTarget& from);

  inline ActionTarget& operator=(const ActionTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTarget& default_instance();

  void Swap(ActionTarget* other);

  // implements Message ----------------------------------------------

  ActionTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionTarget& from);
  void MergeFrom(const ActionTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTargetUnitID = 1;
  inline bool has_itargetunitid() const;
  inline void clear_itargetunitid();
  static const int kITargetUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 itargetunitid() const;
  inline void set_itargetunitid(::google::protobuf::int32 value);

  // repeated bool bIsStatSet = 2;
  inline int bisstatset_size() const;
  inline void clear_bisstatset();
  static const int kBIsStatSetFieldNumber = 2;
  inline bool bisstatset(int index) const;
  inline void set_bisstatset(int index, bool value);
  inline void add_bisstatset(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      bisstatset() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_bisstatset();

  // repeated int32 iCastAttrEffect = 5;
  inline int icastattreffect_size() const;
  inline void clear_icastattreffect();
  static const int kICastAttrEffectFieldNumber = 5;
  inline ::google::protobuf::int32 icastattreffect(int index) const;
  inline void set_icastattreffect(int index, ::google::protobuf::int32 value);
  inline void add_icastattreffect(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      icastattreffect() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_icastattreffect();

  // repeated int32 iAttrEffect = 3;
  inline int iattreffect_size() const;
  inline void clear_iattreffect();
  static const int kIAttrEffectFieldNumber = 3;
  inline ::google::protobuf::int32 iattreffect(int index) const;
  inline void set_iattreffect(int index, ::google::protobuf::int32 value);
  inline void add_iattreffect(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      iattreffect() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_iattreffect();

  // optional .UnitPosition stCastPos = 4;
  inline bool has_stcastpos() const;
  inline void clear_stcastpos();
  static const int kStCastPosFieldNumber = 4;
  inline const ::UnitPosition& stcastpos() const;
  inline ::UnitPosition* mutable_stcastpos();
  inline ::UnitPosition* release_stcastpos();
  inline void set_allocated_stcastpos(::UnitPosition* stcastpos);

  // optional .UnitPosition stTargetPos = 6;
  inline bool has_sttargetpos() const;
  inline void clear_sttargetpos();
  static const int kStTargetPosFieldNumber = 6;
  inline const ::UnitPosition& sttargetpos() const;
  inline ::UnitPosition* mutable_sttargetpos();
  inline ::UnitPosition* release_sttargetpos();
  inline void set_allocated_sttargetpos(::UnitPosition* sttargetpos);

  // optional int32 iSpecialFuncType = 7;
  inline bool has_ispecialfunctype() const;
  inline void clear_ispecialfunctype();
  static const int kISpecialFuncTypeFieldNumber = 7;
  inline ::google::protobuf::int32 ispecialfunctype() const;
  inline void set_ispecialfunctype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActionTarget)
 private:
  inline void set_has_itargetunitid();
  inline void clear_has_itargetunitid();
  inline void set_has_stcastpos();
  inline void clear_has_stcastpos();
  inline void set_has_sttargetpos();
  inline void clear_has_sttargetpos();
  inline void set_has_ispecialfunctype();
  inline void clear_has_ispecialfunctype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > bisstatset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > icastattreffect_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > iattreffect_;
  ::google::protobuf::int32 itargetunitid_;
  ::google::protobuf::int32 ispecialfunctype_;
  ::UnitPosition* stcastpos_;
  ::UnitPosition* sttargetpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static ActionTarget* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatAction_Notify : public ::google::protobuf::Message {
 public:
  Zone_CombatAction_Notify();
  virtual ~Zone_CombatAction_Notify();

  Zone_CombatAction_Notify(const Zone_CombatAction_Notify& from);

  inline Zone_CombatAction_Notify& operator=(const Zone_CombatAction_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatAction_Notify& default_instance();

  void Swap(Zone_CombatAction_Notify* other);

  // implements Message ----------------------------------------------

  Zone_CombatAction_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatAction_Notify& from);
  void MergeFrom(const Zone_CombatAction_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iActionUnitID = 1;
  inline bool has_iactionunitid() const;
  inline void clear_iactionunitid();
  static const int kIActionUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iactionunitid() const;
  inline void set_iactionunitid(::google::protobuf::int32 value);

  // optional .UnitPosition stTargetPos = 9;
  inline bool has_sttargetpos() const;
  inline void clear_sttargetpos();
  static const int kStTargetPosFieldNumber = 9;
  inline const ::UnitPosition& sttargetpos() const;
  inline ::UnitPosition* mutable_sttargetpos();
  inline ::UnitPosition* release_sttargetpos();
  inline void set_allocated_sttargetpos(::UnitPosition* sttargetpos);

  // optional .ActionType eType = 2 [default = COMBAT_ACTION_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 2;
  inline ::ActionType etype() const;
  inline void set_etype(::ActionType value);

  // optional int32 iUseSkillType = 8;
  inline bool has_iuseskilltype() const;
  inline void clear_iuseskilltype();
  static const int kIUseSkillTypeFieldNumber = 8;
  inline ::google::protobuf::int32 iuseskilltype() const;
  inline void set_iuseskilltype(::google::protobuf::int32 value);

  // optional int32 iCostType = 6;
  inline bool has_icosttype() const;
  inline void clear_icosttype();
  static const int kICostTypeFieldNumber = 6;
  inline ::google::protobuf::int32 icosttype() const;
  inline void set_icosttype(::google::protobuf::int32 value);

  // optional int32 iCostNum = 7;
  inline bool has_icostnum() const;
  inline void clear_icostnum();
  static const int kICostNumFieldNumber = 7;
  inline ::google::protobuf::int32 icostnum() const;
  inline void set_icostnum(::google::protobuf::int32 value);

  // optional int32 iCastSkillID = 3;
  inline bool has_icastskillid() const;
  inline void clear_icastskillid();
  static const int kICastSkillIDFieldNumber = 3;
  inline ::google::protobuf::int32 icastskillid() const;
  inline void set_icastskillid(::google::protobuf::int32 value);

  // optional int32 iItemID = 4;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 4;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // repeated .ActionTarget stTargets = 5;
  inline int sttargets_size() const;
  inline void clear_sttargets();
  static const int kStTargetsFieldNumber = 5;
  inline const ::ActionTarget& sttargets(int index) const;
  inline ::ActionTarget* mutable_sttargets(int index);
  inline ::ActionTarget* add_sttargets();
  inline const ::google::protobuf::RepeatedPtrField< ::ActionTarget >&
      sttargets() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActionTarget >*
      mutable_sttargets();

  // optional int32 iNewTrapHP = 10;
  inline bool has_inewtraphp() const;
  inline void clear_inewtraphp();
  static const int kINewTrapHPFieldNumber = 10;
  inline ::google::protobuf::int32 inewtraphp() const;
  inline void set_inewtraphp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_CombatAction_Notify)
 private:
  inline void set_has_iactionunitid();
  inline void clear_has_iactionunitid();
  inline void set_has_sttargetpos();
  inline void clear_has_sttargetpos();
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_iuseskilltype();
  inline void clear_has_iuseskilltype();
  inline void set_has_icosttype();
  inline void clear_has_icosttype();
  inline void set_has_icostnum();
  inline void clear_has_icostnum();
  inline void set_has_icastskillid();
  inline void clear_has_icastskillid();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_inewtraphp();
  inline void clear_has_inewtraphp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UnitPosition* sttargetpos_;
  ::google::protobuf::int32 iactionunitid_;
  int etype_;
  ::google::protobuf::int32 iuseskilltype_;
  ::google::protobuf::int32 icosttype_;
  ::google::protobuf::int32 icostnum_;
  ::google::protobuf::int32 icastskillid_;
  ::google::protobuf::RepeatedPtrField< ::ActionTarget > sttargets_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 inewtraphp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatAction_Notify* default_instance_;
};
// -------------------------------------------------------------------

class OneRewardInfo : public ::google::protobuf::Message {
 public:
  OneRewardInfo();
  virtual ~OneRewardInfo();

  OneRewardInfo(const OneRewardInfo& from);

  inline OneRewardInfo& operator=(const OneRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneRewardInfo& default_instance();

  void Swap(OneRewardInfo* other);

  // implements Message ----------------------------------------------

  OneRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneRewardInfo& from);
  void MergeFrom(const OneRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRewardType = 1;
  inline bool has_irewardtype() const;
  inline void clear_irewardtype();
  static const int kIRewardTypeFieldNumber = 1;
  inline ::google::protobuf::int32 irewardtype() const;
  inline void set_irewardtype(::google::protobuf::int32 value);

  // optional int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // optional int32 iResType = 3;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 3;
  inline ::google::protobuf::int32 irestype() const;
  inline void set_irestype(::google::protobuf::int32 value);

  // optional int32 iDropNum = 4;
  inline bool has_idropnum() const;
  inline void clear_idropnum();
  static const int kIDropNumFieldNumber = 4;
  inline ::google::protobuf::int32 idropnum() const;
  inline void set_idropnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OneRewardInfo)
 private:
  inline void set_has_irewardtype();
  inline void clear_has_irewardtype();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_irestype();
  inline void clear_has_irestype();
  inline void set_has_idropnum();
  inline void clear_has_idropnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irewardtype_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 irestype_;
  ::google::protobuf::int32 idropnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static OneRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CombatReward : public ::google::protobuf::Message {
 public:
  CombatReward();
  virtual ~CombatReward();

  CombatReward(const CombatReward& from);

  inline CombatReward& operator=(const CombatReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatReward& default_instance();

  void Swap(CombatReward* other);

  // implements Message ----------------------------------------------

  CombatReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatReward& from);
  void MergeFrom(const CombatReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneRewardInfo stRewardInfo = 1;
  inline int strewardinfo_size() const;
  inline void clear_strewardinfo();
  static const int kStRewardInfoFieldNumber = 1;
  inline const ::OneRewardInfo& strewardinfo(int index) const;
  inline ::OneRewardInfo* mutable_strewardinfo(int index);
  inline ::OneRewardInfo* add_strewardinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::OneRewardInfo >&
      strewardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneRewardInfo >*
      mutable_strewardinfo();

  // @@protoc_insertion_point(class_scope:CombatReward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneRewardInfo > strewardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static CombatReward* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FinCombat_Notify : public ::google::protobuf::Message {
 public:
  Zone_FinCombat_Notify();
  virtual ~Zone_FinCombat_Notify();

  Zone_FinCombat_Notify(const Zone_FinCombat_Notify& from);

  inline Zone_FinCombat_Notify& operator=(const Zone_FinCombat_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FinCombat_Notify& default_instance();

  void Swap(Zone_FinCombat_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FinCombat_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FinCombat_Notify& from);
  void MergeFrom(const Zone_FinCombat_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsActiveWin = 1;
  inline bool has_bisactivewin() const;
  inline void clear_bisactivewin();
  static const int kBIsActiveWinFieldNumber = 1;
  inline bool bisactivewin() const;
  inline void set_bisactivewin(bool value);

  // optional .CombatReward stReward = 2;
  inline bool has_streward() const;
  inline void clear_streward();
  static const int kStRewardFieldNumber = 2;
  inline const ::CombatReward& streward() const;
  inline ::CombatReward* mutable_streward();
  inline ::CombatReward* release_streward();
  inline void set_allocated_streward(::CombatReward* streward);

  // @@protoc_insertion_point(class_scope:Zone_FinCombat_Notify)
 private:
  inline void set_has_bisactivewin();
  inline void clear_has_bisactivewin();
  inline void set_has_streward();
  inline void clear_has_streward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CombatReward* streward_;
  bool bisactivewin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_FinCombat_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UnitDirective_Notify : public ::google::protobuf::Message {
 public:
  Zone_UnitDirective_Notify();
  virtual ~Zone_UnitDirective_Notify();

  Zone_UnitDirective_Notify(const Zone_UnitDirective_Notify& from);

  inline Zone_UnitDirective_Notify& operator=(const Zone_UnitDirective_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UnitDirective_Notify& default_instance();

  void Swap(Zone_UnitDirective_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UnitDirective_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UnitDirective_Notify& from);
  void MergeFrom(const Zone_UnitDirective_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UnitDirectiveType iDirective = 1;
  inline bool has_idirective() const;
  inline void clear_idirective();
  static const int kIDirectiveFieldNumber = 1;
  inline ::UnitDirectiveType idirective() const;
  inline void set_idirective(::UnitDirectiveType value);

  // optional int32 iCombatUnitID = 2;
  inline bool has_icombatunitid() const;
  inline void clear_icombatunitid();
  static const int kICombatUnitIDFieldNumber = 2;
  inline ::google::protobuf::int32 icombatunitid() const;
  inline void set_icombatunitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UnitDirective_Notify)
 private:
  inline void set_has_idirective();
  inline void clear_has_idirective();
  inline void set_has_icombatunitid();
  inline void clear_has_icombatunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int idirective_;
  ::google::protobuf::int32 icombatunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_UnitDirective_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdatePartnerAI_Request : public ::google::protobuf::Message {
 public:
  Zone_UpdatePartnerAI_Request();
  virtual ~Zone_UpdatePartnerAI_Request();

  Zone_UpdatePartnerAI_Request(const Zone_UpdatePartnerAI_Request& from);

  inline Zone_UpdatePartnerAI_Request& operator=(const Zone_UpdatePartnerAI_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdatePartnerAI_Request& default_instance();

  void Swap(Zone_UpdatePartnerAI_Request* other);

  // implements Message ----------------------------------------------

  Zone_UpdatePartnerAI_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdatePartnerAI_Request& from);
  void MergeFrom(const Zone_UpdatePartnerAI_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iPartnerAIID = 1;
  inline bool has_ipartneraiid() const;
  inline void clear_ipartneraiid();
  static const int kIPartnerAIIDFieldNumber = 1;
  inline ::google::protobuf::int32 ipartneraiid() const;
  inline void set_ipartneraiid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UpdatePartnerAI_Request)
 private:
  inline void set_has_ipartneraiid();
  inline void clear_has_ipartneraiid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipartneraiid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdatePartnerAI_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UpdatePartnerAI_Response : public ::google::protobuf::Message {
 public:
  Zone_UpdatePartnerAI_Response();
  virtual ~Zone_UpdatePartnerAI_Response();

  Zone_UpdatePartnerAI_Response(const Zone_UpdatePartnerAI_Response& from);

  inline Zone_UpdatePartnerAI_Response& operator=(const Zone_UpdatePartnerAI_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UpdatePartnerAI_Response& default_instance();

  void Swap(Zone_UpdatePartnerAI_Response* other);

  // implements Message ----------------------------------------------

  Zone_UpdatePartnerAI_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UpdatePartnerAI_Response& from);
  void MergeFrom(const Zone_UpdatePartnerAI_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UpdatePartnerAI_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_UpdatePartnerAI_Response* default_instance_;
};
// -------------------------------------------------------------------

class BuffEffect : public ::google::protobuf::Message {
 public:
  BuffEffect();
  virtual ~BuffEffect();

  BuffEffect(const BuffEffect& from);

  inline BuffEffect& operator=(const BuffEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffEffect& default_instance();

  void Swap(BuffEffect* other);

  // implements Message ----------------------------------------------

  BuffEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffEffect& from);
  void MergeFrom(const BuffEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iBuffID = 1;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // optional int32 iTargetUnitID = 4;
  inline bool has_itargetunitid() const;
  inline void clear_itargetunitid();
  static const int kITargetUnitIDFieldNumber = 4;
  inline ::google::protobuf::int32 itargetunitid() const;
  inline void set_itargetunitid(::google::protobuf::int32 value);

  // optional int32 iAttrType = 2;
  inline bool has_iattrtype() const;
  inline void clear_iattrtype();
  static const int kIAttrTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iattrtype() const;
  inline void set_iattrtype(::google::protobuf::int32 value);

  // optional int32 iAttrChange = 3;
  inline bool has_iattrchange() const;
  inline void clear_iattrchange();
  static const int kIAttrChangeFieldNumber = 3;
  inline ::google::protobuf::int32 iattrchange() const;
  inline void set_iattrchange(::google::protobuf::int32 value);

  // optional .Zone_CombatAddBuff_Notify stAddBuff = 5;
  inline bool has_staddbuff() const;
  inline void clear_staddbuff();
  static const int kStAddBuffFieldNumber = 5;
  inline const ::Zone_CombatAddBuff_Notify& staddbuff() const;
  inline ::Zone_CombatAddBuff_Notify* mutable_staddbuff();
  inline ::Zone_CombatAddBuff_Notify* release_staddbuff();
  inline void set_allocated_staddbuff(::Zone_CombatAddBuff_Notify* staddbuff);

  // @@protoc_insertion_point(class_scope:BuffEffect)
 private:
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();
  inline void set_has_itargetunitid();
  inline void clear_has_itargetunitid();
  inline void set_has_iattrtype();
  inline void clear_has_iattrtype();
  inline void set_has_iattrchange();
  inline void clear_has_iattrchange();
  inline void set_has_staddbuff();
  inline void clear_has_staddbuff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibuffid_;
  ::google::protobuf::int32 itargetunitid_;
  ::google::protobuf::int32 iattrtype_;
  ::google::protobuf::int32 iattrchange_;
  ::Zone_CombatAddBuff_Notify* staddbuff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static BuffEffect* default_instance_;
};
// -------------------------------------------------------------------

class RemoveOneBuffEffect : public ::google::protobuf::Message {
 public:
  RemoveOneBuffEffect();
  virtual ~RemoveOneBuffEffect();

  RemoveOneBuffEffect(const RemoveOneBuffEffect& from);

  inline RemoveOneBuffEffect& operator=(const RemoveOneBuffEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveOneBuffEffect& default_instance();

  void Swap(RemoveOneBuffEffect* other);

  // implements Message ----------------------------------------------

  RemoveOneBuffEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveOneBuffEffect& from);
  void MergeFrom(const RemoveOneBuffEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iBuffID = 1;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // optional int32 iAttrType = 2;
  inline bool has_iattrtype() const;
  inline void clear_iattrtype();
  static const int kIAttrTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iattrtype() const;
  inline void set_iattrtype(::google::protobuf::int32 value);

  // optional int32 iAttrChange = 3;
  inline bool has_iattrchange() const;
  inline void clear_iattrchange();
  static const int kIAttrChangeFieldNumber = 3;
  inline ::google::protobuf::int32 iattrchange() const;
  inline void set_iattrchange(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RemoveOneBuffEffect)
 private:
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();
  inline void set_has_iattrtype();
  inline void clear_has_iattrtype();
  inline void set_has_iattrchange();
  inline void clear_has_iattrchange();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibuffid_;
  ::google::protobuf::int32 iattrtype_;
  ::google::protobuf::int32 iattrchange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static RemoveOneBuffEffect* default_instance_;
};
// -------------------------------------------------------------------

class RemoveBuffEffect : public ::google::protobuf::Message {
 public:
  RemoveBuffEffect();
  virtual ~RemoveBuffEffect();

  RemoveBuffEffect(const RemoveBuffEffect& from);

  inline RemoveBuffEffect& operator=(const RemoveBuffEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBuffEffect& default_instance();

  void Swap(RemoveBuffEffect* other);

  // implements Message ----------------------------------------------

  RemoveBuffEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveBuffEffect& from);
  void MergeFrom(const RemoveBuffEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RemoveOneBuffEffect stRemoveOnes = 1;
  inline int stremoveones_size() const;
  inline void clear_stremoveones();
  static const int kStRemoveOnesFieldNumber = 1;
  inline const ::RemoveOneBuffEffect& stremoveones(int index) const;
  inline ::RemoveOneBuffEffect* mutable_stremoveones(int index);
  inline ::RemoveOneBuffEffect* add_stremoveones();
  inline const ::google::protobuf::RepeatedPtrField< ::RemoveOneBuffEffect >&
      stremoveones() const;
  inline ::google::protobuf::RepeatedPtrField< ::RemoveOneBuffEffect >*
      mutable_stremoveones();

  // @@protoc_insertion_point(class_scope:RemoveBuffEffect)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RemoveOneBuffEffect > stremoveones_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static RemoveBuffEffect* default_instance_;
};
// -------------------------------------------------------------------

class AddBuffInfo : public ::google::protobuf::Message {
 public:
  AddBuffInfo();
  virtual ~AddBuffInfo();

  AddBuffInfo(const AddBuffInfo& from);

  inline AddBuffInfo& operator=(const AddBuffInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBuffInfo& default_instance();

  void Swap(AddBuffInfo* other);

  // implements Message ----------------------------------------------

  AddBuffInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBuffInfo& from);
  void MergeFrom(const AddBuffInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iBuffID = 1;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // optional .RemoveBuffEffect stRemoveBuff = 2;
  inline bool has_stremovebuff() const;
  inline void clear_stremovebuff();
  static const int kStRemoveBuffFieldNumber = 2;
  inline const ::RemoveBuffEffect& stremovebuff() const;
  inline ::RemoveBuffEffect* mutable_stremovebuff();
  inline ::RemoveBuffEffect* release_stremovebuff();
  inline void set_allocated_stremovebuff(::RemoveBuffEffect* stremovebuff);

  // optional .BuffEffect stEffects = 3;
  inline bool has_steffects() const;
  inline void clear_steffects();
  static const int kStEffectsFieldNumber = 3;
  inline const ::BuffEffect& steffects() const;
  inline ::BuffEffect* mutable_steffects();
  inline ::BuffEffect* release_steffects();
  inline void set_allocated_steffects(::BuffEffect* steffects);

  // @@protoc_insertion_point(class_scope:AddBuffInfo)
 private:
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();
  inline void set_has_stremovebuff();
  inline void clear_has_stremovebuff();
  inline void set_has_steffects();
  inline void clear_has_steffects();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RemoveBuffEffect* stremovebuff_;
  ::BuffEffect* steffects_;
  ::google::protobuf::int32 ibuffid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static AddBuffInfo* default_instance_;
};
// -------------------------------------------------------------------

class OneAddBuff : public ::google::protobuf::Message {
 public:
  OneAddBuff();
  virtual ~OneAddBuff();

  OneAddBuff(const OneAddBuff& from);

  inline OneAddBuff& operator=(const OneAddBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneAddBuff& default_instance();

  void Swap(OneAddBuff* other);

  // implements Message ----------------------------------------------

  OneAddBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneAddBuff& from);
  void MergeFrom(const OneAddBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTargetUnitID = 1;
  inline bool has_itargetunitid() const;
  inline void clear_itargetunitid();
  static const int kITargetUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 itargetunitid() const;
  inline void set_itargetunitid(::google::protobuf::int32 value);

  // repeated .AddBuffInfo stBuffInfo = 2;
  inline int stbuffinfo_size() const;
  inline void clear_stbuffinfo();
  static const int kStBuffInfoFieldNumber = 2;
  inline const ::AddBuffInfo& stbuffinfo(int index) const;
  inline ::AddBuffInfo* mutable_stbuffinfo(int index);
  inline ::AddBuffInfo* add_stbuffinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::AddBuffInfo >&
      stbuffinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::AddBuffInfo >*
      mutable_stbuffinfo();

  // @@protoc_insertion_point(class_scope:OneAddBuff)
 private:
  inline void set_has_itargetunitid();
  inline void clear_has_itargetunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::AddBuffInfo > stbuffinfo_;
  ::google::protobuf::int32 itargetunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static OneAddBuff* default_instance_;
};
// -------------------------------------------------------------------

class Zone_CombatAddBuff_Notify : public ::google::protobuf::Message {
 public:
  Zone_CombatAddBuff_Notify();
  virtual ~Zone_CombatAddBuff_Notify();

  Zone_CombatAddBuff_Notify(const Zone_CombatAddBuff_Notify& from);

  inline Zone_CombatAddBuff_Notify& operator=(const Zone_CombatAddBuff_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_CombatAddBuff_Notify& default_instance();

  void Swap(Zone_CombatAddBuff_Notify* other);

  // implements Message ----------------------------------------------

  Zone_CombatAddBuff_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_CombatAddBuff_Notify& from);
  void MergeFrom(const Zone_CombatAddBuff_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iCastUnitID = 1;
  inline bool has_icastunitid() const;
  inline void clear_icastunitid();
  static const int kICastUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 icastunitid() const;
  inline void set_icastunitid(::google::protobuf::int32 value);

  // repeated .OneAddBuff stAddBuffs = 2;
  inline int staddbuffs_size() const;
  inline void clear_staddbuffs();
  static const int kStAddBuffsFieldNumber = 2;
  inline const ::OneAddBuff& staddbuffs(int index) const;
  inline ::OneAddBuff* mutable_staddbuffs(int index);
  inline ::OneAddBuff* add_staddbuffs();
  inline const ::google::protobuf::RepeatedPtrField< ::OneAddBuff >&
      staddbuffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneAddBuff >*
      mutable_staddbuffs();

  // @@protoc_insertion_point(class_scope:Zone_CombatAddBuff_Notify)
 private:
  inline void set_has_icastunitid();
  inline void clear_has_icastunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneAddBuff > staddbuffs_;
  ::google::protobuf::int32 icastunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_CombatAddBuff_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DoBuffEffect_Notify : public ::google::protobuf::Message {
 public:
  Zone_DoBuffEffect_Notify();
  virtual ~Zone_DoBuffEffect_Notify();

  Zone_DoBuffEffect_Notify(const Zone_DoBuffEffect_Notify& from);

  inline Zone_DoBuffEffect_Notify& operator=(const Zone_DoBuffEffect_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DoBuffEffect_Notify& default_instance();

  void Swap(Zone_DoBuffEffect_Notify* other);

  // implements Message ----------------------------------------------

  Zone_DoBuffEffect_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DoBuffEffect_Notify& from);
  void MergeFrom(const Zone_DoBuffEffect_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTriggerUnitID = 2;
  inline bool has_itriggerunitid() const;
  inline void clear_itriggerunitid();
  static const int kITriggerUnitIDFieldNumber = 2;
  inline ::google::protobuf::int32 itriggerunitid() const;
  inline void set_itriggerunitid(::google::protobuf::int32 value);

  // repeated .BuffEffect stEffects = 3;
  inline int steffects_size() const;
  inline void clear_steffects();
  static const int kStEffectsFieldNumber = 3;
  inline const ::BuffEffect& steffects(int index) const;
  inline ::BuffEffect* mutable_steffects(int index);
  inline ::BuffEffect* add_steffects();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffEffect >&
      steffects() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffEffect >*
      mutable_steffects();

  // @@protoc_insertion_point(class_scope:Zone_DoBuffEffect_Notify)
 private:
  inline void set_has_itriggerunitid();
  inline void clear_has_itriggerunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BuffEffect > steffects_;
  ::google::protobuf::int32 itriggerunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_DoBuffEffect_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RemoveBuff_Notify : public ::google::protobuf::Message {
 public:
  Zone_RemoveBuff_Notify();
  virtual ~Zone_RemoveBuff_Notify();

  Zone_RemoveBuff_Notify(const Zone_RemoveBuff_Notify& from);

  inline Zone_RemoveBuff_Notify& operator=(const Zone_RemoveBuff_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RemoveBuff_Notify& default_instance();

  void Swap(Zone_RemoveBuff_Notify* other);

  // implements Message ----------------------------------------------

  Zone_RemoveBuff_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RemoveBuff_Notify& from);
  void MergeFrom(const Zone_RemoveBuff_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTargetUnitID = 1;
  inline bool has_itargetunitid() const;
  inline void clear_itargetunitid();
  static const int kITargetUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 itargetunitid() const;
  inline void set_itargetunitid(::google::protobuf::int32 value);

  // repeated .RemoveBuffEffect stEffects = 2;
  inline int steffects_size() const;
  inline void clear_steffects();
  static const int kStEffectsFieldNumber = 2;
  inline const ::RemoveBuffEffect& steffects(int index) const;
  inline ::RemoveBuffEffect* mutable_steffects(int index);
  inline ::RemoveBuffEffect* add_steffects();
  inline const ::google::protobuf::RepeatedPtrField< ::RemoveBuffEffect >&
      steffects() const;
  inline ::google::protobuf::RepeatedPtrField< ::RemoveBuffEffect >*
      mutable_steffects();

  // @@protoc_insertion_point(class_scope:Zone_RemoveBuff_Notify)
 private:
  inline void set_has_itargetunitid();
  inline void clear_has_itargetunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RemoveBuffEffect > steffects_;
  ::google::protobuf::int32 itargetunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_RemoveBuff_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_AddCombatUnit_Notify : public ::google::protobuf::Message {
 public:
  Zone_AddCombatUnit_Notify();
  virtual ~Zone_AddCombatUnit_Notify();

  Zone_AddCombatUnit_Notify(const Zone_AddCombatUnit_Notify& from);

  inline Zone_AddCombatUnit_Notify& operator=(const Zone_AddCombatUnit_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_AddCombatUnit_Notify& default_instance();

  void Swap(Zone_AddCombatUnit_Notify* other);

  // implements Message ----------------------------------------------

  Zone_AddCombatUnit_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_AddCombatUnit_Notify& from);
  void MergeFrom(const Zone_AddCombatUnit_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iCampType = 1;
  inline bool has_icamptype() const;
  inline void clear_icamptype();
  static const int kICampTypeFieldNumber = 1;
  inline ::google::protobuf::int32 icamptype() const;
  inline void set_icamptype(::google::protobuf::int32 value);

  // optional .CombatUnit stUnit = 2;
  inline bool has_stunit() const;
  inline void clear_stunit();
  static const int kStUnitFieldNumber = 2;
  inline const ::CombatUnit& stunit() const;
  inline ::CombatUnit* mutable_stunit();
  inline ::CombatUnit* release_stunit();
  inline void set_allocated_stunit(::CombatUnit* stunit);

  // @@protoc_insertion_point(class_scope:Zone_AddCombatUnit_Notify)
 private:
  inline void set_has_icamptype();
  inline void clear_has_icamptype();
  inline void set_has_stunit();
  inline void clear_has_stunit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CombatUnit* stunit_;
  ::google::protobuf::int32 icamptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_AddCombatUnit_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_KillCombatUnit_Notify : public ::google::protobuf::Message {
 public:
  Zone_KillCombatUnit_Notify();
  virtual ~Zone_KillCombatUnit_Notify();

  Zone_KillCombatUnit_Notify(const Zone_KillCombatUnit_Notify& from);

  inline Zone_KillCombatUnit_Notify& operator=(const Zone_KillCombatUnit_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_KillCombatUnit_Notify& default_instance();

  void Swap(Zone_KillCombatUnit_Notify* other);

  // implements Message ----------------------------------------------

  Zone_KillCombatUnit_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_KillCombatUnit_Notify& from);
  void MergeFrom(const Zone_KillCombatUnit_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_KillCombatUnit_Notify)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_KillCombatUnit_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_AddCombatTrap_Notify : public ::google::protobuf::Message {
 public:
  Zone_AddCombatTrap_Notify();
  virtual ~Zone_AddCombatTrap_Notify();

  Zone_AddCombatTrap_Notify(const Zone_AddCombatTrap_Notify& from);

  inline Zone_AddCombatTrap_Notify& operator=(const Zone_AddCombatTrap_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_AddCombatTrap_Notify& default_instance();

  void Swap(Zone_AddCombatTrap_Notify* other);

  // implements Message ----------------------------------------------

  Zone_AddCombatTrap_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_AddCombatTrap_Notify& from);
  void MergeFrom(const Zone_AddCombatTrap_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iConfigID = 1;
  inline bool has_iconfigid() const;
  inline void clear_iconfigid();
  static const int kIConfigIDFieldNumber = 1;
  inline ::google::protobuf::int32 iconfigid() const;
  inline void set_iconfigid(::google::protobuf::int32 value);

  // optional int32 iTrapObjID = 2;
  inline bool has_itrapobjid() const;
  inline void clear_itrapobjid();
  static const int kITrapObjIDFieldNumber = 2;
  inline ::google::protobuf::int32 itrapobjid() const;
  inline void set_itrapobjid(::google::protobuf::int32 value);

  // optional int32 iCamp = 3;
  inline bool has_icamp() const;
  inline void clear_icamp();
  static const int kICampFieldNumber = 3;
  inline ::google::protobuf::int32 icamp() const;
  inline void set_icamp(::google::protobuf::int32 value);

  // optional .UnitPosition stPos = 4;
  inline bool has_stpos() const;
  inline void clear_stpos();
  static const int kStPosFieldNumber = 4;
  inline const ::UnitPosition& stpos() const;
  inline ::UnitPosition* mutable_stpos();
  inline ::UnitPosition* release_stpos();
  inline void set_allocated_stpos(::UnitPosition* stpos);

  // optional int32 iDirection = 5;
  inline bool has_idirection() const;
  inline void clear_idirection();
  static const int kIDirectionFieldNumber = 5;
  inline ::google::protobuf::int32 idirection() const;
  inline void set_idirection(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_AddCombatTrap_Notify)
 private:
  inline void set_has_iconfigid();
  inline void clear_has_iconfigid();
  inline void set_has_itrapobjid();
  inline void clear_has_itrapobjid();
  inline void set_has_icamp();
  inline void clear_has_icamp();
  inline void set_has_stpos();
  inline void clear_has_stpos();
  inline void set_has_idirection();
  inline void clear_has_idirection();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iconfigid_;
  ::google::protobuf::int32 itrapobjid_;
  ::UnitPosition* stpos_;
  ::google::protobuf::int32 icamp_;
  ::google::protobuf::int32 idirection_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_AddCombatTrap_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_TriggerCombatTrap_Notify : public ::google::protobuf::Message {
 public:
  Zone_TriggerCombatTrap_Notify();
  virtual ~Zone_TriggerCombatTrap_Notify();

  Zone_TriggerCombatTrap_Notify(const Zone_TriggerCombatTrap_Notify& from);

  inline Zone_TriggerCombatTrap_Notify& operator=(const Zone_TriggerCombatTrap_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_TriggerCombatTrap_Notify& default_instance();

  void Swap(Zone_TriggerCombatTrap_Notify* other);

  // implements Message ----------------------------------------------

  Zone_TriggerCombatTrap_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_TriggerCombatTrap_Notify& from);
  void MergeFrom(const Zone_TriggerCombatTrap_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTrapObjID = 1;
  inline bool has_itrapobjid() const;
  inline void clear_itrapobjid();
  static const int kITrapObjIDFieldNumber = 1;
  inline ::google::protobuf::int32 itrapobjid() const;
  inline void set_itrapobjid(::google::protobuf::int32 value);

  // optional int32 iTriggerObjID = 2;
  inline bool has_itriggerobjid() const;
  inline void clear_itriggerobjid();
  static const int kITriggerObjIDFieldNumber = 2;
  inline ::google::protobuf::int32 itriggerobjid() const;
  inline void set_itriggerobjid(::google::protobuf::int32 value);

  // optional int32 iTriggerType = 3;
  inline bool has_itriggertype() const;
  inline void clear_itriggertype();
  static const int kITriggerTypeFieldNumber = 3;
  inline ::google::protobuf::int32 itriggertype() const;
  inline void set_itriggertype(::google::protobuf::int32 value);

  // optional int32 iInterruptType = 4;
  inline bool has_iinterrupttype() const;
  inline void clear_iinterrupttype();
  static const int kIInterruptTypeFieldNumber = 4;
  inline ::google::protobuf::int32 iinterrupttype() const;
  inline void set_iinterrupttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_TriggerCombatTrap_Notify)
 private:
  inline void set_has_itrapobjid();
  inline void clear_has_itrapobjid();
  inline void set_has_itriggerobjid();
  inline void clear_has_itriggerobjid();
  inline void set_has_itriggertype();
  inline void clear_has_itriggertype();
  inline void set_has_iinterrupttype();
  inline void clear_has_iinterrupttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itrapobjid_;
  ::google::protobuf::int32 itriggerobjid_;
  ::google::protobuf::int32 itriggertype_;
  ::google::protobuf::int32 iinterrupttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_TriggerCombatTrap_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DeleteCombatTrap_Notify : public ::google::protobuf::Message {
 public:
  Zone_DeleteCombatTrap_Notify();
  virtual ~Zone_DeleteCombatTrap_Notify();

  Zone_DeleteCombatTrap_Notify(const Zone_DeleteCombatTrap_Notify& from);

  inline Zone_DeleteCombatTrap_Notify& operator=(const Zone_DeleteCombatTrap_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DeleteCombatTrap_Notify& default_instance();

  void Swap(Zone_DeleteCombatTrap_Notify* other);

  // implements Message ----------------------------------------------

  Zone_DeleteCombatTrap_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DeleteCombatTrap_Notify& from);
  void MergeFrom(const Zone_DeleteCombatTrap_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iTrapObjID = 1;
  inline bool has_itrapobjid() const;
  inline void clear_itrapobjid();
  static const int kITrapObjIDFieldNumber = 1;
  inline ::google::protobuf::int32 itrapobjid() const;
  inline void set_itrapobjid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DeleteCombatTrap_Notify)
 private:
  inline void set_has_itrapobjid();
  inline void clear_has_itrapobjid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itrapobjid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_DeleteCombatTrap_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_UnitAttrChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_UnitAttrChange_Notify();
  virtual ~Zone_UnitAttrChange_Notify();

  Zone_UnitAttrChange_Notify(const Zone_UnitAttrChange_Notify& from);

  inline Zone_UnitAttrChange_Notify& operator=(const Zone_UnitAttrChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_UnitAttrChange_Notify& default_instance();

  void Swap(Zone_UnitAttrChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_UnitAttrChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_UnitAttrChange_Notify& from);
  void MergeFrom(const Zone_UnitAttrChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional int32 iAttrType = 2;
  inline bool has_iattrtype() const;
  inline void clear_iattrtype();
  static const int kIAttrTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iattrtype() const;
  inline void set_iattrtype(::google::protobuf::int32 value);

  // optional int32 iAttrChange = 3;
  inline bool has_iattrchange() const;
  inline void clear_iattrchange();
  static const int kIAttrChangeFieldNumber = 3;
  inline ::google::protobuf::int32 iattrchange() const;
  inline void set_iattrchange(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_UnitAttrChange_Notify)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_iattrtype();
  inline void clear_has_iattrtype();
  inline void set_has_iattrchange();
  inline void clear_has_iattrchange();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iunitid_;
  ::google::protobuf::int32 iattrtype_;
  ::google::protobuf::int32 iattrchange_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_UnitAttrChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_StartPVPCombat_Request : public ::google::protobuf::Message {
 public:
  Zone_StartPVPCombat_Request();
  virtual ~Zone_StartPVPCombat_Request();

  Zone_StartPVPCombat_Request(const Zone_StartPVPCombat_Request& from);

  inline Zone_StartPVPCombat_Request& operator=(const Zone_StartPVPCombat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_StartPVPCombat_Request& default_instance();

  void Swap(Zone_StartPVPCombat_Request* other);

  // implements Message ----------------------------------------------

  Zone_StartPVPCombat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_StartPVPCombat_Request& from);
  void MergeFrom(const Zone_StartPVPCombat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiPassiveUin = 1;
  inline bool has_uipassiveuin() const;
  inline void clear_uipassiveuin();
  static const int kUiPassiveUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uipassiveuin() const;
  inline void set_uipassiveuin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_StartPVPCombat_Request)
 private:
  inline void set_has_uipassiveuin();
  inline void clear_has_uipassiveuin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uipassiveuin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_StartPVPCombat_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_StartPVPCombat_Response : public ::google::protobuf::Message {
 public:
  Zone_StartPVPCombat_Response();
  virtual ~Zone_StartPVPCombat_Response();

  Zone_StartPVPCombat_Response(const Zone_StartPVPCombat_Response& from);

  inline Zone_StartPVPCombat_Response& operator=(const Zone_StartPVPCombat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_StartPVPCombat_Response& default_instance();

  void Swap(Zone_StartPVPCombat_Response* other);

  // implements Message ----------------------------------------------

  Zone_StartPVPCombat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_StartPVPCombat_Response& from);
  void MergeFrom(const Zone_StartPVPCombat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_StartPVPCombat_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_StartPVPCombat_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_StartPVPCombat_Notify : public ::google::protobuf::Message {
 public:
  Zone_StartPVPCombat_Notify();
  virtual ~Zone_StartPVPCombat_Notify();

  Zone_StartPVPCombat_Notify(const Zone_StartPVPCombat_Notify& from);

  inline Zone_StartPVPCombat_Notify& operator=(const Zone_StartPVPCombat_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_StartPVPCombat_Notify& default_instance();

  void Swap(Zone_StartPVPCombat_Notify* other);

  // implements Message ----------------------------------------------

  Zone_StartPVPCombat_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_StartPVPCombat_Notify& from);
  void MergeFrom(const Zone_StartPVPCombat_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiActiveUin = 1;
  inline bool has_uiactiveuin() const;
  inline void clear_uiactiveuin();
  static const int kUiActiveUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uiactiveuin() const;
  inline void set_uiactiveuin(::google::protobuf::uint32 value);

  // optional string strActiveName = 2;
  inline bool has_stractivename() const;
  inline void clear_stractivename();
  static const int kStrActiveNameFieldNumber = 2;
  inline const ::std::string& stractivename() const;
  inline void set_stractivename(const ::std::string& value);
  inline void set_stractivename(const char* value);
  inline void set_stractivename(const char* value, size_t size);
  inline ::std::string* mutable_stractivename();
  inline ::std::string* release_stractivename();
  inline void set_allocated_stractivename(::std::string* stractivename);

  // @@protoc_insertion_point(class_scope:Zone_StartPVPCombat_Notify)
 private:
  inline void set_has_uiactiveuin();
  inline void clear_has_uiactiveuin();
  inline void set_has_stractivename();
  inline void clear_has_stractivename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractivename_;
  ::google::protobuf::uint32 uiactiveuin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_StartPVPCombat_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_AcceptPVPCombat_Request : public ::google::protobuf::Message {
 public:
  Zone_AcceptPVPCombat_Request();
  virtual ~Zone_AcceptPVPCombat_Request();

  Zone_AcceptPVPCombat_Request(const Zone_AcceptPVPCombat_Request& from);

  inline Zone_AcceptPVPCombat_Request& operator=(const Zone_AcceptPVPCombat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_AcceptPVPCombat_Request& default_instance();

  void Swap(Zone_AcceptPVPCombat_Request* other);

  // implements Message ----------------------------------------------

  Zone_AcceptPVPCombat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_AcceptPVPCombat_Request& from);
  void MergeFrom(const Zone_AcceptPVPCombat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiActiveUin = 1;
  inline bool has_uiactiveuin() const;
  inline void clear_uiactiveuin();
  static const int kUiActiveUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uiactiveuin() const;
  inline void set_uiactiveuin(::google::protobuf::uint32 value);

  // optional bool bIsAccept = 2;
  inline bool has_bisaccept() const;
  inline void clear_bisaccept();
  static const int kBIsAcceptFieldNumber = 2;
  inline bool bisaccept() const;
  inline void set_bisaccept(bool value);

  // @@protoc_insertion_point(class_scope:Zone_AcceptPVPCombat_Request)
 private:
  inline void set_has_uiactiveuin();
  inline void clear_has_uiactiveuin();
  inline void set_has_bisaccept();
  inline void clear_has_bisaccept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uiactiveuin_;
  bool bisaccept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_AcceptPVPCombat_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_AcceptPVPCombat_Response : public ::google::protobuf::Message {
 public:
  Zone_AcceptPVPCombat_Response();
  virtual ~Zone_AcceptPVPCombat_Response();

  Zone_AcceptPVPCombat_Response(const Zone_AcceptPVPCombat_Response& from);

  inline Zone_AcceptPVPCombat_Response& operator=(const Zone_AcceptPVPCombat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_AcceptPVPCombat_Response& default_instance();

  void Swap(Zone_AcceptPVPCombat_Response* other);

  // implements Message ----------------------------------------------

  Zone_AcceptPVPCombat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_AcceptPVPCombat_Response& from);
  void MergeFrom(const Zone_AcceptPVPCombat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_AcceptPVPCombat_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_AcceptPVPCombat_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RejectPVPCombat_Notify : public ::google::protobuf::Message {
 public:
  Zone_RejectPVPCombat_Notify();
  virtual ~Zone_RejectPVPCombat_Notify();

  Zone_RejectPVPCombat_Notify(const Zone_RejectPVPCombat_Notify& from);

  inline Zone_RejectPVPCombat_Notify& operator=(const Zone_RejectPVPCombat_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RejectPVPCombat_Notify& default_instance();

  void Swap(Zone_RejectPVPCombat_Notify* other);

  // implements Message ----------------------------------------------

  Zone_RejectPVPCombat_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RejectPVPCombat_Notify& from);
  void MergeFrom(const Zone_RejectPVPCombat_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iPassiveUin = 1;
  inline bool has_ipassiveuin() const;
  inline void clear_ipassiveuin();
  static const int kIPassiveUinFieldNumber = 1;
  inline ::google::protobuf::int32 ipassiveuin() const;
  inline void set_ipassiveuin(::google::protobuf::int32 value);

  // optional string strPassiveName = 2;
  inline bool has_strpassivename() const;
  inline void clear_strpassivename();
  static const int kStrPassiveNameFieldNumber = 2;
  inline const ::std::string& strpassivename() const;
  inline void set_strpassivename(const ::std::string& value);
  inline void set_strpassivename(const char* value);
  inline void set_strpassivename(const char* value, size_t size);
  inline ::std::string* mutable_strpassivename();
  inline ::std::string* release_strpassivename();
  inline void set_allocated_strpassivename(::std::string* strpassivename);

  // @@protoc_insertion_point(class_scope:Zone_RejectPVPCombat_Notify)
 private:
  inline void set_has_ipassiveuin();
  inline void clear_has_ipassiveuin();
  inline void set_has_strpassivename();
  inline void clear_has_strpassivename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strpassivename_;
  ::google::protobuf::int32 ipassiveuin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_RejectPVPCombat_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ChangeFightState_Notify : public ::google::protobuf::Message {
 public:
  Zone_ChangeFightState_Notify();
  virtual ~Zone_ChangeFightState_Notify();

  Zone_ChangeFightState_Notify(const Zone_ChangeFightState_Notify& from);

  inline Zone_ChangeFightState_Notify& operator=(const Zone_ChangeFightState_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ChangeFightState_Notify& default_instance();

  void Swap(Zone_ChangeFightState_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ChangeFightState_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ChangeFightState_Notify& from);
  void MergeFrom(const Zone_ChangeFightState_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional bool bIsInFight = 2;
  inline bool has_bisinfight() const;
  inline void clear_bisinfight();
  static const int kBIsInFightFieldNumber = 2;
  inline bool bisinfight() const;
  inline void set_bisinfight(bool value);

  // @@protoc_insertion_point(class_scope:Zone_ChangeFightState_Notify)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_bisinfight();
  inline void clear_has_bisinfight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iunitid_;
  bool bisinfight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_ChangeFightState_Notify* default_instance_;
};
// -------------------------------------------------------------------

class OneCombatUnitInfo : public ::google::protobuf::Message {
 public:
  OneCombatUnitInfo();
  virtual ~OneCombatUnitInfo();

  OneCombatUnitInfo(const OneCombatUnitInfo& from);

  inline OneCombatUnitInfo& operator=(const OneCombatUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneCombatUnitInfo& default_instance();

  void Swap(OneCombatUnitInfo* other);

  // implements Message ----------------------------------------------

  OneCombatUnitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneCombatUnitInfo& from);
  void MergeFrom(const OneCombatUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional .UnitPosition stPos = 2;
  inline bool has_stpos() const;
  inline void clear_stpos();
  static const int kStPosFieldNumber = 2;
  inline const ::UnitPosition& stpos() const;
  inline ::UnitPosition* mutable_stpos();
  inline ::UnitPosition* release_stpos();
  inline void set_allocated_stpos(::UnitPosition* stpos);

  // @@protoc_insertion_point(class_scope:OneCombatUnitInfo)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_stpos();
  inline void clear_has_stpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UnitPosition* stpos_;
  ::google::protobuf::int32 iunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static OneCombatUnitInfo* default_instance_;
};
// -------------------------------------------------------------------

class CombatForm : public ::google::protobuf::Message {
 public:
  CombatForm();
  virtual ~CombatForm();

  CombatForm(const CombatForm& from);

  inline CombatForm& operator=(const CombatForm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatForm& default_instance();

  void Swap(CombatForm* other);

  // implements Message ----------------------------------------------

  CombatForm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatForm& from);
  void MergeFrom(const CombatForm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneCombatUnitInfo stUnitInfos = 1;
  inline int stunitinfos_size() const;
  inline void clear_stunitinfos();
  static const int kStUnitInfosFieldNumber = 1;
  inline const ::OneCombatUnitInfo& stunitinfos(int index) const;
  inline ::OneCombatUnitInfo* mutable_stunitinfos(int index);
  inline ::OneCombatUnitInfo* add_stunitinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::OneCombatUnitInfo >&
      stunitinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneCombatUnitInfo >*
      mutable_stunitinfos();

  // @@protoc_insertion_point(class_scope:CombatForm)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneCombatUnitInfo > stunitinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static CombatForm* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SetCombatForm_Request : public ::google::protobuf::Message {
 public:
  Zone_SetCombatForm_Request();
  virtual ~Zone_SetCombatForm_Request();

  Zone_SetCombatForm_Request(const Zone_SetCombatForm_Request& from);

  inline Zone_SetCombatForm_Request& operator=(const Zone_SetCombatForm_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SetCombatForm_Request& default_instance();

  void Swap(Zone_SetCombatForm_Request* other);

  // implements Message ----------------------------------------------

  Zone_SetCombatForm_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SetCombatForm_Request& from);
  void MergeFrom(const Zone_SetCombatForm_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CombatForm stForm = 1;
  inline bool has_stform() const;
  inline void clear_stform();
  static const int kStFormFieldNumber = 1;
  inline const ::CombatForm& stform() const;
  inline ::CombatForm* mutable_stform();
  inline ::CombatForm* release_stform();
  inline void set_allocated_stform(::CombatForm* stform);

  // @@protoc_insertion_point(class_scope:Zone_SetCombatForm_Request)
 private:
  inline void set_has_stform();
  inline void clear_has_stform();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CombatForm* stform_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_SetCombatForm_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SetCombatForm_Response : public ::google::protobuf::Message {
 public:
  Zone_SetCombatForm_Response();
  virtual ~Zone_SetCombatForm_Response();

  Zone_SetCombatForm_Response(const Zone_SetCombatForm_Response& from);

  inline Zone_SetCombatForm_Response& operator=(const Zone_SetCombatForm_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SetCombatForm_Response& default_instance();

  void Swap(Zone_SetCombatForm_Response* other);

  // implements Message ----------------------------------------------

  Zone_SetCombatForm_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SetCombatForm_Response& from);
  void MergeFrom(const Zone_SetCombatForm_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_SetCombatForm_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_SetCombatForm_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SetCombatForm_Notify : public ::google::protobuf::Message {
 public:
  Zone_SetCombatForm_Notify();
  virtual ~Zone_SetCombatForm_Notify();

  Zone_SetCombatForm_Notify(const Zone_SetCombatForm_Notify& from);

  inline Zone_SetCombatForm_Notify& operator=(const Zone_SetCombatForm_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SetCombatForm_Notify& default_instance();

  void Swap(Zone_SetCombatForm_Notify* other);

  // implements Message ----------------------------------------------

  Zone_SetCombatForm_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SetCombatForm_Notify& from);
  void MergeFrom(const Zone_SetCombatForm_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CombatForm stActiveForm = 1;
  inline bool has_stactiveform() const;
  inline void clear_stactiveform();
  static const int kStActiveFormFieldNumber = 1;
  inline const ::CombatForm& stactiveform() const;
  inline ::CombatForm* mutable_stactiveform();
  inline ::CombatForm* release_stactiveform();
  inline void set_allocated_stactiveform(::CombatForm* stactiveform);

  // optional .CombatForm stPassiveForm = 2;
  inline bool has_stpassiveform() const;
  inline void clear_stpassiveform();
  static const int kStPassiveFormFieldNumber = 2;
  inline const ::CombatForm& stpassiveform() const;
  inline ::CombatForm* mutable_stpassiveform();
  inline ::CombatForm* release_stpassiveform();
  inline void set_allocated_stpassiveform(::CombatForm* stpassiveform);

  // @@protoc_insertion_point(class_scope:Zone_SetCombatForm_Notify)
 private:
  inline void set_has_stactiveform();
  inline void clear_has_stactiveform();
  inline void set_has_stpassiveform();
  inline void clear_has_stpassiveform();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CombatForm* stactiveform_;
  ::CombatForm* stpassiveform_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_SetCombatForm_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_DecreaseUnitBuff_Notify : public ::google::protobuf::Message {
 public:
  Zone_DecreaseUnitBuff_Notify();
  virtual ~Zone_DecreaseUnitBuff_Notify();

  Zone_DecreaseUnitBuff_Notify(const Zone_DecreaseUnitBuff_Notify& from);

  inline Zone_DecreaseUnitBuff_Notify& operator=(const Zone_DecreaseUnitBuff_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_DecreaseUnitBuff_Notify& default_instance();

  void Swap(Zone_DecreaseUnitBuff_Notify* other);

  // implements Message ----------------------------------------------

  Zone_DecreaseUnitBuff_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_DecreaseUnitBuff_Notify& from);
  void MergeFrom(const Zone_DecreaseUnitBuff_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iCombatUnitID = 1;
  inline bool has_icombatunitid() const;
  inline void clear_icombatunitid();
  static const int kICombatUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 icombatunitid() const;
  inline void set_icombatunitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_DecreaseUnitBuff_Notify)
 private:
  inline void set_has_icombatunitid();
  inline void clear_has_icombatunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icombatunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_DecreaseUnitBuff_Notify* default_instance_;
};
// -------------------------------------------------------------------

class OneActionInfo : public ::google::protobuf::Message {
 public:
  OneActionInfo();
  virtual ~OneActionInfo();

  OneActionInfo(const OneActionInfo& from);

  inline OneActionInfo& operator=(const OneActionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneActionInfo& default_instance();

  void Swap(OneActionInfo* other);

  // implements Message ----------------------------------------------

  OneActionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneActionInfo& from);
  void MergeFrom(const OneActionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // optional int32 iXianGong = 2;
  inline bool has_ixiangong() const;
  inline void clear_ixiangong();
  static const int kIXianGongFieldNumber = 2;
  inline ::google::protobuf::int32 ixiangong() const;
  inline void set_ixiangong(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OneActionInfo)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();
  inline void set_has_ixiangong();
  inline void clear_has_ixiangong();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iunitid_;
  ::google::protobuf::int32 ixiangong_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static OneActionInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ActionUnitInfo_Notify : public ::google::protobuf::Message {
 public:
  Zone_ActionUnitInfo_Notify();
  virtual ~Zone_ActionUnitInfo_Notify();

  Zone_ActionUnitInfo_Notify(const Zone_ActionUnitInfo_Notify& from);

  inline Zone_ActionUnitInfo_Notify& operator=(const Zone_ActionUnitInfo_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ActionUnitInfo_Notify& default_instance();

  void Swap(Zone_ActionUnitInfo_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ActionUnitInfo_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ActionUnitInfo_Notify& from);
  void MergeFrom(const Zone_ActionUnitInfo_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneActionInfo stInActionInfos = 1;
  inline int stinactioninfos_size() const;
  inline void clear_stinactioninfos();
  static const int kStInActionInfosFieldNumber = 1;
  inline const ::OneActionInfo& stinactioninfos(int index) const;
  inline ::OneActionInfo* mutable_stinactioninfos(int index);
  inline ::OneActionInfo* add_stinactioninfos();
  inline const ::google::protobuf::RepeatedPtrField< ::OneActionInfo >&
      stinactioninfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneActionInfo >*
      mutable_stinactioninfos();

  // repeated .OneActionInfo stActionDoneInfos = 2;
  inline int stactiondoneinfos_size() const;
  inline void clear_stactiondoneinfos();
  static const int kStActionDoneInfosFieldNumber = 2;
  inline const ::OneActionInfo& stactiondoneinfos(int index) const;
  inline ::OneActionInfo* mutable_stactiondoneinfos(int index);
  inline ::OneActionInfo* add_stactiondoneinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::OneActionInfo >&
      stactiondoneinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneActionInfo >*
      mutable_stactiondoneinfos();

  // @@protoc_insertion_point(class_scope:Zone_ActionUnitInfo_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneActionInfo > stinactioninfos_;
  ::google::protobuf::RepeatedPtrField< ::OneActionInfo > stactiondoneinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_ActionUnitInfo_Notify* default_instance_;
};
// -------------------------------------------------------------------

class SkillCDInfo : public ::google::protobuf::Message {
 public:
  SkillCDInfo();
  virtual ~SkillCDInfo();

  SkillCDInfo(const SkillCDInfo& from);

  inline SkillCDInfo& operator=(const SkillCDInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillCDInfo& default_instance();

  void Swap(SkillCDInfo* other);

  // implements Message ----------------------------------------------

  SkillCDInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillCDInfo& from);
  void MergeFrom(const SkillCDInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iSkillID = 1;
  inline bool has_iskillid() const;
  inline void clear_iskillid();
  static const int kISkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 iskillid() const;
  inline void set_iskillid(::google::protobuf::int32 value);

  // optional int32 iCDRound = 2;
  inline bool has_icdround() const;
  inline void clear_icdround();
  static const int kICDRoundFieldNumber = 2;
  inline ::google::protobuf::int32 icdround() const;
  inline void set_icdround(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillCDInfo)
 private:
  inline void set_has_iskillid();
  inline void clear_has_iskillid();
  inline void set_has_icdround();
  inline void clear_has_icdround();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iskillid_;
  ::google::protobuf::int32 icdround_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static SkillCDInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SkillCDRound_Notify : public ::google::protobuf::Message {
 public:
  Zone_SkillCDRound_Notify();
  virtual ~Zone_SkillCDRound_Notify();

  Zone_SkillCDRound_Notify(const Zone_SkillCDRound_Notify& from);

  inline Zone_SkillCDRound_Notify& operator=(const Zone_SkillCDRound_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SkillCDRound_Notify& default_instance();

  void Swap(Zone_SkillCDRound_Notify* other);

  // implements Message ----------------------------------------------

  Zone_SkillCDRound_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SkillCDRound_Notify& from);
  void MergeFrom(const Zone_SkillCDRound_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitID = 1;
  inline bool has_iunitid() const;
  inline void clear_iunitid();
  static const int kIUnitIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitid() const;
  inline void set_iunitid(::google::protobuf::int32 value);

  // repeated .SkillCDInfo stCDInfos = 2;
  inline int stcdinfos_size() const;
  inline void clear_stcdinfos();
  static const int kStCDInfosFieldNumber = 2;
  inline const ::SkillCDInfo& stcdinfos(int index) const;
  inline ::SkillCDInfo* mutable_stcdinfos(int index);
  inline ::SkillCDInfo* add_stcdinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >&
      stcdinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >*
      mutable_stcdinfos();

  // @@protoc_insertion_point(class_scope:Zone_SkillCDRound_Notify)
 private:
  inline void set_has_iunitid();
  inline void clear_has_iunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SkillCDInfo > stcdinfos_;
  ::google::protobuf::int32 iunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eFight_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eFight_2eproto();

  void InitAsDefaultInstance();
  static Zone_SkillCDRound_Notify* default_instance_;
};
// ===================================================================


// ===================================================================

// UnitPosition

// optional int32 iPosX = 1;
inline bool UnitPosition::has_iposx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitPosition::set_has_iposx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitPosition::clear_has_iposx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitPosition::clear_iposx() {
  iposx_ = 0;
  clear_has_iposx();
}
inline ::google::protobuf::int32 UnitPosition::iposx() const {
  return iposx_;
}
inline void UnitPosition::set_iposx(::google::protobuf::int32 value) {
  set_has_iposx();
  iposx_ = value;
}

// optional int32 iPosY = 2;
inline bool UnitPosition::has_iposy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitPosition::set_has_iposy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitPosition::clear_has_iposy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitPosition::clear_iposy() {
  iposy_ = 0;
  clear_has_iposy();
}
inline ::google::protobuf::int32 UnitPosition::iposy() const {
  return iposy_;
}
inline void UnitPosition::set_iposy(::google::protobuf::int32 value) {
  set_has_iposy();
  iposy_ = value;
}

// -------------------------------------------------------------------

// UnitPath

// repeated .UnitPosition stPoses = 1;
inline int UnitPath::stposes_size() const {
  return stposes_.size();
}
inline void UnitPath::clear_stposes() {
  stposes_.Clear();
}
inline const ::UnitPosition& UnitPath::stposes(int index) const {
  return stposes_.Get(index);
}
inline ::UnitPosition* UnitPath::mutable_stposes(int index) {
  return stposes_.Mutable(index);
}
inline ::UnitPosition* UnitPath::add_stposes() {
  return stposes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
UnitPath::stposes() const {
  return stposes_;
}
inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
UnitPath::mutable_stposes() {
  return &stposes_;
}

// -------------------------------------------------------------------

// Zone_DoCombat_Request

// optional .CombatType eType = 1 [default = COMBAT_TYPE_INVALID];
inline bool Zone_DoCombat_Request::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DoCombat_Request::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DoCombat_Request::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DoCombat_Request::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::CombatType Zone_DoCombat_Request::etype() const {
  return static_cast< ::CombatType >(etype_);
}
inline void Zone_DoCombat_Request::set_etype(::CombatType value) {
  assert(::CombatType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iLevelID = 2;
inline bool Zone_DoCombat_Request::has_ilevelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_DoCombat_Request::set_has_ilevelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_DoCombat_Request::clear_has_ilevelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_DoCombat_Request::clear_ilevelid() {
  ilevelid_ = 0;
  clear_has_ilevelid();
}
inline ::google::protobuf::int32 Zone_DoCombat_Request::ilevelid() const {
  return ilevelid_;
}
inline void Zone_DoCombat_Request::set_ilevelid(::google::protobuf::int32 value) {
  set_has_ilevelid();
  ilevelid_ = value;
}

// -------------------------------------------------------------------

// Zone_DoCombat_Response

// optional int32 iResult = 1;
inline bool Zone_DoCombat_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DoCombat_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DoCombat_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DoCombat_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_DoCombat_Response::iresult() const {
  return iresult_;
}
inline void Zone_DoCombat_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// CombatUnit

// optional .CombatUnitType eType = 1;
inline bool CombatUnit::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatUnit::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatUnit::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatUnit::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::CombatUnitType CombatUnit::etype() const {
  return static_cast< ::CombatUnitType >(etype_);
}
inline void CombatUnit::set_etype(::CombatUnitType value) {
  assert(::CombatUnitType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iUnitID = 2;
inline bool CombatUnit::has_iunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatUnit::set_has_iunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatUnit::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatUnit::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 CombatUnit::iunitid() const {
  return iunitid_;
}
inline void CombatUnit::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional int32 iConfigID = 3;
inline bool CombatUnit::has_iconfigid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatUnit::set_has_iconfigid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatUnit::clear_has_iconfigid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatUnit::clear_iconfigid() {
  iconfigid_ = 0;
  clear_has_iconfigid();
}
inline ::google::protobuf::int32 CombatUnit::iconfigid() const {
  return iconfigid_;
}
inline void CombatUnit::set_iconfigid(::google::protobuf::int32 value) {
  set_has_iconfigid();
  iconfigid_ = value;
}

// optional .UnitPosition stPos = 4;
inline bool CombatUnit::has_stpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombatUnit::set_has_stpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombatUnit::clear_has_stpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombatUnit::clear_stpos() {
  if (stpos_ != NULL) stpos_->::UnitPosition::Clear();
  clear_has_stpos();
}
inline const ::UnitPosition& CombatUnit::stpos() const {
  return stpos_ != NULL ? *stpos_ : *default_instance_->stpos_;
}
inline ::UnitPosition* CombatUnit::mutable_stpos() {
  set_has_stpos();
  if (stpos_ == NULL) stpos_ = new ::UnitPosition;
  return stpos_;
}
inline ::UnitPosition* CombatUnit::release_stpos() {
  clear_has_stpos();
  ::UnitPosition* temp = stpos_;
  stpos_ = NULL;
  return temp;
}
inline void CombatUnit::set_allocated_stpos(::UnitPosition* stpos) {
  delete stpos_;
  stpos_ = stpos;
  if (stpos) {
    set_has_stpos();
  } else {
    clear_has_stpos();
  }
}

// optional int32 iDirection = 5;
inline bool CombatUnit::has_idirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombatUnit::set_has_idirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombatUnit::clear_has_idirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombatUnit::clear_idirection() {
  idirection_ = 0;
  clear_has_idirection();
}
inline ::google::protobuf::int32 CombatUnit::idirection() const {
  return idirection_;
}
inline void CombatUnit::set_idirection(::google::protobuf::int32 value) {
  set_has_idirection();
  idirection_ = value;
}

// repeated int32 iAttributes = 6;
inline int CombatUnit::iattributes_size() const {
  return iattributes_.size();
}
inline void CombatUnit::clear_iattributes() {
  iattributes_.Clear();
}
inline ::google::protobuf::int32 CombatUnit::iattributes(int index) const {
  return iattributes_.Get(index);
}
inline void CombatUnit::set_iattributes(int index, ::google::protobuf::int32 value) {
  iattributes_.Set(index, value);
}
inline void CombatUnit::add_iattributes(::google::protobuf::int32 value) {
  iattributes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatUnit::iattributes() const {
  return iattributes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatUnit::mutable_iattributes() {
  return &iattributes_;
}

// optional int32 iNormalSkill = 7;
inline bool CombatUnit::has_inormalskill() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CombatUnit::set_has_inormalskill() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CombatUnit::clear_has_inormalskill() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CombatUnit::clear_inormalskill() {
  inormalskill_ = 0;
  clear_has_inormalskill();
}
inline ::google::protobuf::int32 CombatUnit::inormalskill() const {
  return inormalskill_;
}
inline void CombatUnit::set_inormalskill(::google::protobuf::int32 value) {
  set_has_inormalskill();
  inormalskill_ = value;
}

// repeated .OneSlotInfo stItems = 8;
inline int CombatUnit::stitems_size() const {
  return stitems_.size();
}
inline void CombatUnit::clear_stitems() {
  stitems_.Clear();
}
inline const ::OneSlotInfo& CombatUnit::stitems(int index) const {
  return stitems_.Get(index);
}
inline ::OneSlotInfo* CombatUnit::mutable_stitems(int index) {
  return stitems_.Mutable(index);
}
inline ::OneSlotInfo* CombatUnit::add_stitems() {
  return stitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >&
CombatUnit::stitems() const {
  return stitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneSlotInfo >*
CombatUnit::mutable_stitems() {
  return &stitems_;
}

// optional int32 iUnitAIID = 9;
inline bool CombatUnit::has_iunitaiid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CombatUnit::set_has_iunitaiid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CombatUnit::clear_has_iunitaiid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CombatUnit::clear_iunitaiid() {
  iunitaiid_ = 0;
  clear_has_iunitaiid();
}
inline ::google::protobuf::int32 CombatUnit::iunitaiid() const {
  return iunitaiid_;
}
inline void CombatUnit::set_iunitaiid(::google::protobuf::int32 value) {
  set_has_iunitaiid();
  iunitaiid_ = value;
}

// optional int32 iCamp = 10;
inline bool CombatUnit::has_icamp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CombatUnit::set_has_icamp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CombatUnit::clear_has_icamp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CombatUnit::clear_icamp() {
  icamp_ = 0;
  clear_has_icamp();
}
inline ::google::protobuf::int32 CombatUnit::icamp() const {
  return icamp_;
}
inline void CombatUnit::set_icamp(::google::protobuf::int32 value) {
  set_has_icamp();
  icamp_ = value;
}

// -------------------------------------------------------------------

// CombatCamp

// optional uint32 uiUin = 1;
inline bool CombatCamp::has_uiuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatCamp::set_has_uiuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatCamp::clear_has_uiuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatCamp::clear_uiuin() {
  uiuin_ = 0u;
  clear_has_uiuin();
}
inline ::google::protobuf::uint32 CombatCamp::uiuin() const {
  return uiuin_;
}
inline void CombatCamp::set_uiuin(::google::protobuf::uint32 value) {
  set_has_uiuin();
  uiuin_ = value;
}

// optional string strNickName = 3;
inline bool CombatCamp::has_strnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatCamp::set_has_strnickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatCamp::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatCamp::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& CombatCamp::strnickname() const {
  return *strnickname_;
}
inline void CombatCamp::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void CombatCamp::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void CombatCamp::set_strnickname(const char* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CombatCamp::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* CombatCamp::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CombatCamp::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .CombatUnit stUnits = 2;
inline int CombatCamp::stunits_size() const {
  return stunits_.size();
}
inline void CombatCamp::clear_stunits() {
  stunits_.Clear();
}
inline const ::CombatUnit& CombatCamp::stunits(int index) const {
  return stunits_.Get(index);
}
inline ::CombatUnit* CombatCamp::mutable_stunits(int index) {
  return stunits_.Mutable(index);
}
inline ::CombatUnit* CombatCamp::add_stunits() {
  return stunits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CombatUnit >&
CombatCamp::stunits() const {
  return stunits_;
}
inline ::google::protobuf::RepeatedPtrField< ::CombatUnit >*
CombatCamp::mutable_stunits() {
  return &stunits_;
}

// -------------------------------------------------------------------

// Zone_Battlefield_Notify

// optional int32 iCrossID = 1;
inline bool Zone_Battlefield_Notify::has_icrossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Battlefield_Notify::set_has_icrossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Battlefield_Notify::clear_has_icrossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Battlefield_Notify::clear_icrossid() {
  icrossid_ = 0;
  clear_has_icrossid();
}
inline ::google::protobuf::int32 Zone_Battlefield_Notify::icrossid() const {
  return icrossid_;
}
inline void Zone_Battlefield_Notify::set_icrossid(::google::protobuf::int32 value) {
  set_has_icrossid();
  icrossid_ = value;
}

// optional .CombatCamp stCampActive = 2;
inline bool Zone_Battlefield_Notify::has_stcampactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_Battlefield_Notify::set_has_stcampactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_Battlefield_Notify::clear_has_stcampactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_Battlefield_Notify::clear_stcampactive() {
  if (stcampactive_ != NULL) stcampactive_->::CombatCamp::Clear();
  clear_has_stcampactive();
}
inline const ::CombatCamp& Zone_Battlefield_Notify::stcampactive() const {
  return stcampactive_ != NULL ? *stcampactive_ : *default_instance_->stcampactive_;
}
inline ::CombatCamp* Zone_Battlefield_Notify::mutable_stcampactive() {
  set_has_stcampactive();
  if (stcampactive_ == NULL) stcampactive_ = new ::CombatCamp;
  return stcampactive_;
}
inline ::CombatCamp* Zone_Battlefield_Notify::release_stcampactive() {
  clear_has_stcampactive();
  ::CombatCamp* temp = stcampactive_;
  stcampactive_ = NULL;
  return temp;
}
inline void Zone_Battlefield_Notify::set_allocated_stcampactive(::CombatCamp* stcampactive) {
  delete stcampactive_;
  stcampactive_ = stcampactive;
  if (stcampactive) {
    set_has_stcampactive();
  } else {
    clear_has_stcampactive();
  }
}

// optional .CombatCamp stCampPassive = 3;
inline bool Zone_Battlefield_Notify::has_stcamppassive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_Battlefield_Notify::set_has_stcamppassive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_Battlefield_Notify::clear_has_stcamppassive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_Battlefield_Notify::clear_stcamppassive() {
  if (stcamppassive_ != NULL) stcamppassive_->::CombatCamp::Clear();
  clear_has_stcamppassive();
}
inline const ::CombatCamp& Zone_Battlefield_Notify::stcamppassive() const {
  return stcamppassive_ != NULL ? *stcamppassive_ : *default_instance_->stcamppassive_;
}
inline ::CombatCamp* Zone_Battlefield_Notify::mutable_stcamppassive() {
  set_has_stcamppassive();
  if (stcamppassive_ == NULL) stcamppassive_ = new ::CombatCamp;
  return stcamppassive_;
}
inline ::CombatCamp* Zone_Battlefield_Notify::release_stcamppassive() {
  clear_has_stcamppassive();
  ::CombatCamp* temp = stcamppassive_;
  stcamppassive_ = NULL;
  return temp;
}
inline void Zone_Battlefield_Notify::set_allocated_stcamppassive(::CombatCamp* stcamppassive) {
  delete stcamppassive_;
  stcamppassive_ = stcamppassive;
  if (stcamppassive) {
    set_has_stcamppassive();
  } else {
    clear_has_stcamppassive();
  }
}

// repeated .UnitPosition stActiveposes = 5;
inline int Zone_Battlefield_Notify::stactiveposes_size() const {
  return stactiveposes_.size();
}
inline void Zone_Battlefield_Notify::clear_stactiveposes() {
  stactiveposes_.Clear();
}
inline const ::UnitPosition& Zone_Battlefield_Notify::stactiveposes(int index) const {
  return stactiveposes_.Get(index);
}
inline ::UnitPosition* Zone_Battlefield_Notify::mutable_stactiveposes(int index) {
  return stactiveposes_.Mutable(index);
}
inline ::UnitPosition* Zone_Battlefield_Notify::add_stactiveposes() {
  return stactiveposes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
Zone_Battlefield_Notify::stactiveposes() const {
  return stactiveposes_;
}
inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
Zone_Battlefield_Notify::mutable_stactiveposes() {
  return &stactiveposes_;
}

// repeated .UnitPosition stPassivePoses = 6;
inline int Zone_Battlefield_Notify::stpassiveposes_size() const {
  return stpassiveposes_.size();
}
inline void Zone_Battlefield_Notify::clear_stpassiveposes() {
  stpassiveposes_.Clear();
}
inline const ::UnitPosition& Zone_Battlefield_Notify::stpassiveposes(int index) const {
  return stpassiveposes_.Get(index);
}
inline ::UnitPosition* Zone_Battlefield_Notify::mutable_stpassiveposes(int index) {
  return stpassiveposes_.Mutable(index);
}
inline ::UnitPosition* Zone_Battlefield_Notify::add_stpassiveposes() {
  return stpassiveposes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UnitPosition >&
Zone_Battlefield_Notify::stpassiveposes() const {
  return stpassiveposes_;
}
inline ::google::protobuf::RepeatedPtrField< ::UnitPosition >*
Zone_Battlefield_Notify::mutable_stpassiveposes() {
  return &stpassiveposes_;
}

// -------------------------------------------------------------------

// Zone_CombatMove_Request

// optional .UnitPath stPath = 1;
inline bool Zone_CombatMove_Request::has_stpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatMove_Request::set_has_stpath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatMove_Request::clear_has_stpath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatMove_Request::clear_stpath() {
  if (stpath_ != NULL) stpath_->::UnitPath::Clear();
  clear_has_stpath();
}
inline const ::UnitPath& Zone_CombatMove_Request::stpath() const {
  return stpath_ != NULL ? *stpath_ : *default_instance_->stpath_;
}
inline ::UnitPath* Zone_CombatMove_Request::mutable_stpath() {
  set_has_stpath();
  if (stpath_ == NULL) stpath_ = new ::UnitPath;
  return stpath_;
}
inline ::UnitPath* Zone_CombatMove_Request::release_stpath() {
  clear_has_stpath();
  ::UnitPath* temp = stpath_;
  stpath_ = NULL;
  return temp;
}
inline void Zone_CombatMove_Request::set_allocated_stpath(::UnitPath* stpath) {
  delete stpath_;
  stpath_ = stpath;
  if (stpath) {
    set_has_stpath();
  } else {
    clear_has_stpath();
  }
}

// -------------------------------------------------------------------

// Zone_CombatMove_Response

// optional int32 iResult = 1;
inline bool Zone_CombatMove_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatMove_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatMove_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatMove_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_CombatMove_Response::iresult() const {
  return iresult_;
}
inline void Zone_CombatMove_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_CombatAction_Request

// optional .ActionType eType = 1 [default = COMBAT_ACTION_INVALID];
inline bool Zone_CombatAction_Request::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatAction_Request::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatAction_Request::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatAction_Request::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ActionType Zone_CombatAction_Request::etype() const {
  return static_cast< ::ActionType >(etype_);
}
inline void Zone_CombatAction_Request::set_etype(::ActionType value) {
  assert(::ActionType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iCastSkillID = 2;
inline bool Zone_CombatAction_Request::has_icastskillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_CombatAction_Request::set_has_icastskillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_CombatAction_Request::clear_has_icastskillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_CombatAction_Request::clear_icastskillid() {
  icastskillid_ = 0;
  clear_has_icastskillid();
}
inline ::google::protobuf::int32 Zone_CombatAction_Request::icastskillid() const {
  return icastskillid_;
}
inline void Zone_CombatAction_Request::set_icastskillid(::google::protobuf::int32 value) {
  set_has_icastskillid();
  icastskillid_ = value;
}

// optional int32 iItemID = 3;
inline bool Zone_CombatAction_Request::has_iitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_CombatAction_Request::set_has_iitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_CombatAction_Request::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_CombatAction_Request::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 Zone_CombatAction_Request::iitemid() const {
  return iitemid_;
}
inline void Zone_CombatAction_Request::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional .UnitPosition stPos = 4;
inline bool Zone_CombatAction_Request::has_stpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_CombatAction_Request::set_has_stpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_CombatAction_Request::clear_has_stpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_CombatAction_Request::clear_stpos() {
  if (stpos_ != NULL) stpos_->::UnitPosition::Clear();
  clear_has_stpos();
}
inline const ::UnitPosition& Zone_CombatAction_Request::stpos() const {
  return stpos_ != NULL ? *stpos_ : *default_instance_->stpos_;
}
inline ::UnitPosition* Zone_CombatAction_Request::mutable_stpos() {
  set_has_stpos();
  if (stpos_ == NULL) stpos_ = new ::UnitPosition;
  return stpos_;
}
inline ::UnitPosition* Zone_CombatAction_Request::release_stpos() {
  clear_has_stpos();
  ::UnitPosition* temp = stpos_;
  stpos_ = NULL;
  return temp;
}
inline void Zone_CombatAction_Request::set_allocated_stpos(::UnitPosition* stpos) {
  delete stpos_;
  stpos_ = stpos;
  if (stpos) {
    set_has_stpos();
  } else {
    clear_has_stpos();
  }
}

// optional int32 iDirection = 5;
inline bool Zone_CombatAction_Request::has_idirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_CombatAction_Request::set_has_idirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_CombatAction_Request::clear_has_idirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_CombatAction_Request::clear_idirection() {
  idirection_ = 0;
  clear_has_idirection();
}
inline ::google::protobuf::int32 Zone_CombatAction_Request::idirection() const {
  return idirection_;
}
inline void Zone_CombatAction_Request::set_idirection(::google::protobuf::int32 value) {
  set_has_idirection();
  idirection_ = value;
}

// -------------------------------------------------------------------

// Zone_CombatAction_Response

// optional int32 iResult = 1;
inline bool Zone_CombatAction_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatAction_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatAction_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatAction_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_CombatAction_Response::iresult() const {
  return iresult_;
}
inline void Zone_CombatAction_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .ActionType eType = 2 [default = COMBAT_ACTION_INVALID];
inline bool Zone_CombatAction_Response::has_etype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_CombatAction_Response::set_has_etype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_CombatAction_Response::clear_has_etype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_CombatAction_Response::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ActionType Zone_CombatAction_Response::etype() const {
  return static_cast< ::ActionType >(etype_);
}
inline void Zone_CombatAction_Response::set_etype(::ActionType value) {
  assert(::ActionType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// -------------------------------------------------------------------

// Zone_CombatMove_Notify

// optional int32 iUnitID = 1;
inline bool Zone_CombatMove_Notify::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatMove_Notify::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatMove_Notify::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatMove_Notify::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 Zone_CombatMove_Notify::iunitid() const {
  return iunitid_;
}
inline void Zone_CombatMove_Notify::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional .UnitPath stPath = 2;
inline bool Zone_CombatMove_Notify::has_stpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_CombatMove_Notify::set_has_stpath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_CombatMove_Notify::clear_has_stpath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_CombatMove_Notify::clear_stpath() {
  if (stpath_ != NULL) stpath_->::UnitPath::Clear();
  clear_has_stpath();
}
inline const ::UnitPath& Zone_CombatMove_Notify::stpath() const {
  return stpath_ != NULL ? *stpath_ : *default_instance_->stpath_;
}
inline ::UnitPath* Zone_CombatMove_Notify::mutable_stpath() {
  set_has_stpath();
  if (stpath_ == NULL) stpath_ = new ::UnitPath;
  return stpath_;
}
inline ::UnitPath* Zone_CombatMove_Notify::release_stpath() {
  clear_has_stpath();
  ::UnitPath* temp = stpath_;
  stpath_ = NULL;
  return temp;
}
inline void Zone_CombatMove_Notify::set_allocated_stpath(::UnitPath* stpath) {
  delete stpath_;
  stpath_ = stpath;
  if (stpath) {
    set_has_stpath();
  } else {
    clear_has_stpath();
  }
}

// optional int32 iDirection = 3;
inline bool Zone_CombatMove_Notify::has_idirection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_CombatMove_Notify::set_has_idirection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_CombatMove_Notify::clear_has_idirection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_CombatMove_Notify::clear_idirection() {
  idirection_ = 0;
  clear_has_idirection();
}
inline ::google::protobuf::int32 Zone_CombatMove_Notify::idirection() const {
  return idirection_;
}
inline void Zone_CombatMove_Notify::set_idirection(::google::protobuf::int32 value) {
  set_has_idirection();
  idirection_ = value;
}

// optional int32 iMoveType = 4;
inline bool Zone_CombatMove_Notify::has_imovetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_CombatMove_Notify::set_has_imovetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_CombatMove_Notify::clear_has_imovetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_CombatMove_Notify::clear_imovetype() {
  imovetype_ = 0;
  clear_has_imovetype();
}
inline ::google::protobuf::int32 Zone_CombatMove_Notify::imovetype() const {
  return imovetype_;
}
inline void Zone_CombatMove_Notify::set_imovetype(::google::protobuf::int32 value) {
  set_has_imovetype();
  imovetype_ = value;
}

// optional int32 iAnimType = 5;
inline bool Zone_CombatMove_Notify::has_ianimtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_CombatMove_Notify::set_has_ianimtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_CombatMove_Notify::clear_has_ianimtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_CombatMove_Notify::clear_ianimtype() {
  ianimtype_ = 0;
  clear_has_ianimtype();
}
inline ::google::protobuf::int32 Zone_CombatMove_Notify::ianimtype() const {
  return ianimtype_;
}
inline void Zone_CombatMove_Notify::set_ianimtype(::google::protobuf::int32 value) {
  set_has_ianimtype();
  ianimtype_ = value;
}

// -------------------------------------------------------------------

// ActionTarget

// optional int32 iTargetUnitID = 1;
inline bool ActionTarget::has_itargetunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionTarget::set_has_itargetunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionTarget::clear_has_itargetunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionTarget::clear_itargetunitid() {
  itargetunitid_ = 0;
  clear_has_itargetunitid();
}
inline ::google::protobuf::int32 ActionTarget::itargetunitid() const {
  return itargetunitid_;
}
inline void ActionTarget::set_itargetunitid(::google::protobuf::int32 value) {
  set_has_itargetunitid();
  itargetunitid_ = value;
}

// repeated bool bIsStatSet = 2;
inline int ActionTarget::bisstatset_size() const {
  return bisstatset_.size();
}
inline void ActionTarget::clear_bisstatset() {
  bisstatset_.Clear();
}
inline bool ActionTarget::bisstatset(int index) const {
  return bisstatset_.Get(index);
}
inline void ActionTarget::set_bisstatset(int index, bool value) {
  bisstatset_.Set(index, value);
}
inline void ActionTarget::add_bisstatset(bool value) {
  bisstatset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ActionTarget::bisstatset() const {
  return bisstatset_;
}
inline ::google::protobuf::RepeatedField< bool >*
ActionTarget::mutable_bisstatset() {
  return &bisstatset_;
}

// repeated int32 iCastAttrEffect = 5;
inline int ActionTarget::icastattreffect_size() const {
  return icastattreffect_.size();
}
inline void ActionTarget::clear_icastattreffect() {
  icastattreffect_.Clear();
}
inline ::google::protobuf::int32 ActionTarget::icastattreffect(int index) const {
  return icastattreffect_.Get(index);
}
inline void ActionTarget::set_icastattreffect(int index, ::google::protobuf::int32 value) {
  icastattreffect_.Set(index, value);
}
inline void ActionTarget::add_icastattreffect(::google::protobuf::int32 value) {
  icastattreffect_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActionTarget::icastattreffect() const {
  return icastattreffect_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActionTarget::mutable_icastattreffect() {
  return &icastattreffect_;
}

// repeated int32 iAttrEffect = 3;
inline int ActionTarget::iattreffect_size() const {
  return iattreffect_.size();
}
inline void ActionTarget::clear_iattreffect() {
  iattreffect_.Clear();
}
inline ::google::protobuf::int32 ActionTarget::iattreffect(int index) const {
  return iattreffect_.Get(index);
}
inline void ActionTarget::set_iattreffect(int index, ::google::protobuf::int32 value) {
  iattreffect_.Set(index, value);
}
inline void ActionTarget::add_iattreffect(::google::protobuf::int32 value) {
  iattreffect_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActionTarget::iattreffect() const {
  return iattreffect_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActionTarget::mutable_iattreffect() {
  return &iattreffect_;
}

// optional .UnitPosition stCastPos = 4;
inline bool ActionTarget::has_stcastpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActionTarget::set_has_stcastpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActionTarget::clear_has_stcastpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActionTarget::clear_stcastpos() {
  if (stcastpos_ != NULL) stcastpos_->::UnitPosition::Clear();
  clear_has_stcastpos();
}
inline const ::UnitPosition& ActionTarget::stcastpos() const {
  return stcastpos_ != NULL ? *stcastpos_ : *default_instance_->stcastpos_;
}
inline ::UnitPosition* ActionTarget::mutable_stcastpos() {
  set_has_stcastpos();
  if (stcastpos_ == NULL) stcastpos_ = new ::UnitPosition;
  return stcastpos_;
}
inline ::UnitPosition* ActionTarget::release_stcastpos() {
  clear_has_stcastpos();
  ::UnitPosition* temp = stcastpos_;
  stcastpos_ = NULL;
  return temp;
}
inline void ActionTarget::set_allocated_stcastpos(::UnitPosition* stcastpos) {
  delete stcastpos_;
  stcastpos_ = stcastpos;
  if (stcastpos) {
    set_has_stcastpos();
  } else {
    clear_has_stcastpos();
  }
}

// optional .UnitPosition stTargetPos = 6;
inline bool ActionTarget::has_sttargetpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActionTarget::set_has_sttargetpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActionTarget::clear_has_sttargetpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActionTarget::clear_sttargetpos() {
  if (sttargetpos_ != NULL) sttargetpos_->::UnitPosition::Clear();
  clear_has_sttargetpos();
}
inline const ::UnitPosition& ActionTarget::sttargetpos() const {
  return sttargetpos_ != NULL ? *sttargetpos_ : *default_instance_->sttargetpos_;
}
inline ::UnitPosition* ActionTarget::mutable_sttargetpos() {
  set_has_sttargetpos();
  if (sttargetpos_ == NULL) sttargetpos_ = new ::UnitPosition;
  return sttargetpos_;
}
inline ::UnitPosition* ActionTarget::release_sttargetpos() {
  clear_has_sttargetpos();
  ::UnitPosition* temp = sttargetpos_;
  sttargetpos_ = NULL;
  return temp;
}
inline void ActionTarget::set_allocated_sttargetpos(::UnitPosition* sttargetpos) {
  delete sttargetpos_;
  sttargetpos_ = sttargetpos;
  if (sttargetpos) {
    set_has_sttargetpos();
  } else {
    clear_has_sttargetpos();
  }
}

// optional int32 iSpecialFuncType = 7;
inline bool ActionTarget::has_ispecialfunctype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActionTarget::set_has_ispecialfunctype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActionTarget::clear_has_ispecialfunctype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActionTarget::clear_ispecialfunctype() {
  ispecialfunctype_ = 0;
  clear_has_ispecialfunctype();
}
inline ::google::protobuf::int32 ActionTarget::ispecialfunctype() const {
  return ispecialfunctype_;
}
inline void ActionTarget::set_ispecialfunctype(::google::protobuf::int32 value) {
  set_has_ispecialfunctype();
  ispecialfunctype_ = value;
}

// -------------------------------------------------------------------

// Zone_CombatAction_Notify

// optional int32 iActionUnitID = 1;
inline bool Zone_CombatAction_Notify::has_iactionunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_iactionunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatAction_Notify::clear_has_iactionunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatAction_Notify::clear_iactionunitid() {
  iactionunitid_ = 0;
  clear_has_iactionunitid();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::iactionunitid() const {
  return iactionunitid_;
}
inline void Zone_CombatAction_Notify::set_iactionunitid(::google::protobuf::int32 value) {
  set_has_iactionunitid();
  iactionunitid_ = value;
}

// optional .UnitPosition stTargetPos = 9;
inline bool Zone_CombatAction_Notify::has_sttargetpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_sttargetpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_CombatAction_Notify::clear_has_sttargetpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_CombatAction_Notify::clear_sttargetpos() {
  if (sttargetpos_ != NULL) sttargetpos_->::UnitPosition::Clear();
  clear_has_sttargetpos();
}
inline const ::UnitPosition& Zone_CombatAction_Notify::sttargetpos() const {
  return sttargetpos_ != NULL ? *sttargetpos_ : *default_instance_->sttargetpos_;
}
inline ::UnitPosition* Zone_CombatAction_Notify::mutable_sttargetpos() {
  set_has_sttargetpos();
  if (sttargetpos_ == NULL) sttargetpos_ = new ::UnitPosition;
  return sttargetpos_;
}
inline ::UnitPosition* Zone_CombatAction_Notify::release_sttargetpos() {
  clear_has_sttargetpos();
  ::UnitPosition* temp = sttargetpos_;
  sttargetpos_ = NULL;
  return temp;
}
inline void Zone_CombatAction_Notify::set_allocated_sttargetpos(::UnitPosition* sttargetpos) {
  delete sttargetpos_;
  sttargetpos_ = sttargetpos;
  if (sttargetpos) {
    set_has_sttargetpos();
  } else {
    clear_has_sttargetpos();
  }
}

// optional .ActionType eType = 2 [default = COMBAT_ACTION_INVALID];
inline bool Zone_CombatAction_Notify::has_etype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_etype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_CombatAction_Notify::clear_has_etype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_CombatAction_Notify::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ActionType Zone_CombatAction_Notify::etype() const {
  return static_cast< ::ActionType >(etype_);
}
inline void Zone_CombatAction_Notify::set_etype(::ActionType value) {
  assert(::ActionType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iUseSkillType = 8;
inline bool Zone_CombatAction_Notify::has_iuseskilltype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_iuseskilltype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_CombatAction_Notify::clear_has_iuseskilltype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_CombatAction_Notify::clear_iuseskilltype() {
  iuseskilltype_ = 0;
  clear_has_iuseskilltype();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::iuseskilltype() const {
  return iuseskilltype_;
}
inline void Zone_CombatAction_Notify::set_iuseskilltype(::google::protobuf::int32 value) {
  set_has_iuseskilltype();
  iuseskilltype_ = value;
}

// optional int32 iCostType = 6;
inline bool Zone_CombatAction_Notify::has_icosttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_icosttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_CombatAction_Notify::clear_has_icosttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_CombatAction_Notify::clear_icosttype() {
  icosttype_ = 0;
  clear_has_icosttype();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::icosttype() const {
  return icosttype_;
}
inline void Zone_CombatAction_Notify::set_icosttype(::google::protobuf::int32 value) {
  set_has_icosttype();
  icosttype_ = value;
}

// optional int32 iCostNum = 7;
inline bool Zone_CombatAction_Notify::has_icostnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_icostnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_CombatAction_Notify::clear_has_icostnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_CombatAction_Notify::clear_icostnum() {
  icostnum_ = 0;
  clear_has_icostnum();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::icostnum() const {
  return icostnum_;
}
inline void Zone_CombatAction_Notify::set_icostnum(::google::protobuf::int32 value) {
  set_has_icostnum();
  icostnum_ = value;
}

// optional int32 iCastSkillID = 3;
inline bool Zone_CombatAction_Notify::has_icastskillid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_icastskillid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Zone_CombatAction_Notify::clear_has_icastskillid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Zone_CombatAction_Notify::clear_icastskillid() {
  icastskillid_ = 0;
  clear_has_icastskillid();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::icastskillid() const {
  return icastskillid_;
}
inline void Zone_CombatAction_Notify::set_icastskillid(::google::protobuf::int32 value) {
  set_has_icastskillid();
  icastskillid_ = value;
}

// optional int32 iItemID = 4;
inline bool Zone_CombatAction_Notify::has_iitemid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_iitemid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Zone_CombatAction_Notify::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Zone_CombatAction_Notify::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::iitemid() const {
  return iitemid_;
}
inline void Zone_CombatAction_Notify::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// repeated .ActionTarget stTargets = 5;
inline int Zone_CombatAction_Notify::sttargets_size() const {
  return sttargets_.size();
}
inline void Zone_CombatAction_Notify::clear_sttargets() {
  sttargets_.Clear();
}
inline const ::ActionTarget& Zone_CombatAction_Notify::sttargets(int index) const {
  return sttargets_.Get(index);
}
inline ::ActionTarget* Zone_CombatAction_Notify::mutable_sttargets(int index) {
  return sttargets_.Mutable(index);
}
inline ::ActionTarget* Zone_CombatAction_Notify::add_sttargets() {
  return sttargets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionTarget >&
Zone_CombatAction_Notify::sttargets() const {
  return sttargets_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActionTarget >*
Zone_CombatAction_Notify::mutable_sttargets() {
  return &sttargets_;
}

// optional int32 iNewTrapHP = 10;
inline bool Zone_CombatAction_Notify::has_inewtraphp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Zone_CombatAction_Notify::set_has_inewtraphp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Zone_CombatAction_Notify::clear_has_inewtraphp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Zone_CombatAction_Notify::clear_inewtraphp() {
  inewtraphp_ = 0;
  clear_has_inewtraphp();
}
inline ::google::protobuf::int32 Zone_CombatAction_Notify::inewtraphp() const {
  return inewtraphp_;
}
inline void Zone_CombatAction_Notify::set_inewtraphp(::google::protobuf::int32 value) {
  set_has_inewtraphp();
  inewtraphp_ = value;
}

// -------------------------------------------------------------------

// OneRewardInfo

// optional int32 iRewardType = 1;
inline bool OneRewardInfo::has_irewardtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneRewardInfo::set_has_irewardtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneRewardInfo::clear_has_irewardtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneRewardInfo::clear_irewardtype() {
  irewardtype_ = 0;
  clear_has_irewardtype();
}
inline ::google::protobuf::int32 OneRewardInfo::irewardtype() const {
  return irewardtype_;
}
inline void OneRewardInfo::set_irewardtype(::google::protobuf::int32 value) {
  set_has_irewardtype();
  irewardtype_ = value;
}

// optional int32 iItemID = 2;
inline bool OneRewardInfo::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneRewardInfo::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneRewardInfo::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneRewardInfo::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 OneRewardInfo::iitemid() const {
  return iitemid_;
}
inline void OneRewardInfo::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// optional int32 iResType = 3;
inline bool OneRewardInfo::has_irestype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneRewardInfo::set_has_irestype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneRewardInfo::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneRewardInfo::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::google::protobuf::int32 OneRewardInfo::irestype() const {
  return irestype_;
}
inline void OneRewardInfo::set_irestype(::google::protobuf::int32 value) {
  set_has_irestype();
  irestype_ = value;
}

// optional int32 iDropNum = 4;
inline bool OneRewardInfo::has_idropnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneRewardInfo::set_has_idropnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneRewardInfo::clear_has_idropnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneRewardInfo::clear_idropnum() {
  idropnum_ = 0;
  clear_has_idropnum();
}
inline ::google::protobuf::int32 OneRewardInfo::idropnum() const {
  return idropnum_;
}
inline void OneRewardInfo::set_idropnum(::google::protobuf::int32 value) {
  set_has_idropnum();
  idropnum_ = value;
}

// -------------------------------------------------------------------

// CombatReward

// repeated .OneRewardInfo stRewardInfo = 1;
inline int CombatReward::strewardinfo_size() const {
  return strewardinfo_.size();
}
inline void CombatReward::clear_strewardinfo() {
  strewardinfo_.Clear();
}
inline const ::OneRewardInfo& CombatReward::strewardinfo(int index) const {
  return strewardinfo_.Get(index);
}
inline ::OneRewardInfo* CombatReward::mutable_strewardinfo(int index) {
  return strewardinfo_.Mutable(index);
}
inline ::OneRewardInfo* CombatReward::add_strewardinfo() {
  return strewardinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneRewardInfo >&
CombatReward::strewardinfo() const {
  return strewardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneRewardInfo >*
CombatReward::mutable_strewardinfo() {
  return &strewardinfo_;
}

// -------------------------------------------------------------------

// Zone_FinCombat_Notify

// optional bool bIsActiveWin = 1;
inline bool Zone_FinCombat_Notify::has_bisactivewin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FinCombat_Notify::set_has_bisactivewin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FinCombat_Notify::clear_has_bisactivewin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FinCombat_Notify::clear_bisactivewin() {
  bisactivewin_ = false;
  clear_has_bisactivewin();
}
inline bool Zone_FinCombat_Notify::bisactivewin() const {
  return bisactivewin_;
}
inline void Zone_FinCombat_Notify::set_bisactivewin(bool value) {
  set_has_bisactivewin();
  bisactivewin_ = value;
}

// optional .CombatReward stReward = 2;
inline bool Zone_FinCombat_Notify::has_streward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_FinCombat_Notify::set_has_streward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_FinCombat_Notify::clear_has_streward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_FinCombat_Notify::clear_streward() {
  if (streward_ != NULL) streward_->::CombatReward::Clear();
  clear_has_streward();
}
inline const ::CombatReward& Zone_FinCombat_Notify::streward() const {
  return streward_ != NULL ? *streward_ : *default_instance_->streward_;
}
inline ::CombatReward* Zone_FinCombat_Notify::mutable_streward() {
  set_has_streward();
  if (streward_ == NULL) streward_ = new ::CombatReward;
  return streward_;
}
inline ::CombatReward* Zone_FinCombat_Notify::release_streward() {
  clear_has_streward();
  ::CombatReward* temp = streward_;
  streward_ = NULL;
  return temp;
}
inline void Zone_FinCombat_Notify::set_allocated_streward(::CombatReward* streward) {
  delete streward_;
  streward_ = streward;
  if (streward) {
    set_has_streward();
  } else {
    clear_has_streward();
  }
}

// -------------------------------------------------------------------

// Zone_UnitDirective_Notify

// optional .UnitDirectiveType iDirective = 1;
inline bool Zone_UnitDirective_Notify::has_idirective() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UnitDirective_Notify::set_has_idirective() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UnitDirective_Notify::clear_has_idirective() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UnitDirective_Notify::clear_idirective() {
  idirective_ = 0;
  clear_has_idirective();
}
inline ::UnitDirectiveType Zone_UnitDirective_Notify::idirective() const {
  return static_cast< ::UnitDirectiveType >(idirective_);
}
inline void Zone_UnitDirective_Notify::set_idirective(::UnitDirectiveType value) {
  assert(::UnitDirectiveType_IsValid(value));
  set_has_idirective();
  idirective_ = value;
}

// optional int32 iCombatUnitID = 2;
inline bool Zone_UnitDirective_Notify::has_icombatunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UnitDirective_Notify::set_has_icombatunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UnitDirective_Notify::clear_has_icombatunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UnitDirective_Notify::clear_icombatunitid() {
  icombatunitid_ = 0;
  clear_has_icombatunitid();
}
inline ::google::protobuf::int32 Zone_UnitDirective_Notify::icombatunitid() const {
  return icombatunitid_;
}
inline void Zone_UnitDirective_Notify::set_icombatunitid(::google::protobuf::int32 value) {
  set_has_icombatunitid();
  icombatunitid_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdatePartnerAI_Request

// optional int32 iPartnerAIID = 1;
inline bool Zone_UpdatePartnerAI_Request::has_ipartneraiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdatePartnerAI_Request::set_has_ipartneraiid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdatePartnerAI_Request::clear_has_ipartneraiid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdatePartnerAI_Request::clear_ipartneraiid() {
  ipartneraiid_ = 0;
  clear_has_ipartneraiid();
}
inline ::google::protobuf::int32 Zone_UpdatePartnerAI_Request::ipartneraiid() const {
  return ipartneraiid_;
}
inline void Zone_UpdatePartnerAI_Request::set_ipartneraiid(::google::protobuf::int32 value) {
  set_has_ipartneraiid();
  ipartneraiid_ = value;
}

// -------------------------------------------------------------------

// Zone_UpdatePartnerAI_Response

// optional int32 iResult = 1;
inline bool Zone_UpdatePartnerAI_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UpdatePartnerAI_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UpdatePartnerAI_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UpdatePartnerAI_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_UpdatePartnerAI_Response::iresult() const {
  return iresult_;
}
inline void Zone_UpdatePartnerAI_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// BuffEffect

// optional int32 iBuffID = 1;
inline bool BuffEffect::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffEffect::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffEffect::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffEffect::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 BuffEffect::ibuffid() const {
  return ibuffid_;
}
inline void BuffEffect::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// optional int32 iTargetUnitID = 4;
inline bool BuffEffect::has_itargetunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffEffect::set_has_itargetunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffEffect::clear_has_itargetunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffEffect::clear_itargetunitid() {
  itargetunitid_ = 0;
  clear_has_itargetunitid();
}
inline ::google::protobuf::int32 BuffEffect::itargetunitid() const {
  return itargetunitid_;
}
inline void BuffEffect::set_itargetunitid(::google::protobuf::int32 value) {
  set_has_itargetunitid();
  itargetunitid_ = value;
}

// optional int32 iAttrType = 2;
inline bool BuffEffect::has_iattrtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffEffect::set_has_iattrtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffEffect::clear_has_iattrtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffEffect::clear_iattrtype() {
  iattrtype_ = 0;
  clear_has_iattrtype();
}
inline ::google::protobuf::int32 BuffEffect::iattrtype() const {
  return iattrtype_;
}
inline void BuffEffect::set_iattrtype(::google::protobuf::int32 value) {
  set_has_iattrtype();
  iattrtype_ = value;
}

// optional int32 iAttrChange = 3;
inline bool BuffEffect::has_iattrchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffEffect::set_has_iattrchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffEffect::clear_has_iattrchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffEffect::clear_iattrchange() {
  iattrchange_ = 0;
  clear_has_iattrchange();
}
inline ::google::protobuf::int32 BuffEffect::iattrchange() const {
  return iattrchange_;
}
inline void BuffEffect::set_iattrchange(::google::protobuf::int32 value) {
  set_has_iattrchange();
  iattrchange_ = value;
}

// optional .Zone_CombatAddBuff_Notify stAddBuff = 5;
inline bool BuffEffect::has_staddbuff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffEffect::set_has_staddbuff() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffEffect::clear_has_staddbuff() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffEffect::clear_staddbuff() {
  if (staddbuff_ != NULL) staddbuff_->::Zone_CombatAddBuff_Notify::Clear();
  clear_has_staddbuff();
}
inline const ::Zone_CombatAddBuff_Notify& BuffEffect::staddbuff() const {
  return staddbuff_ != NULL ? *staddbuff_ : *default_instance_->staddbuff_;
}
inline ::Zone_CombatAddBuff_Notify* BuffEffect::mutable_staddbuff() {
  set_has_staddbuff();
  if (staddbuff_ == NULL) staddbuff_ = new ::Zone_CombatAddBuff_Notify;
  return staddbuff_;
}
inline ::Zone_CombatAddBuff_Notify* BuffEffect::release_staddbuff() {
  clear_has_staddbuff();
  ::Zone_CombatAddBuff_Notify* temp = staddbuff_;
  staddbuff_ = NULL;
  return temp;
}
inline void BuffEffect::set_allocated_staddbuff(::Zone_CombatAddBuff_Notify* staddbuff) {
  delete staddbuff_;
  staddbuff_ = staddbuff;
  if (staddbuff) {
    set_has_staddbuff();
  } else {
    clear_has_staddbuff();
  }
}

// -------------------------------------------------------------------

// RemoveOneBuffEffect

// optional int32 iBuffID = 1;
inline bool RemoveOneBuffEffect::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveOneBuffEffect::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveOneBuffEffect::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveOneBuffEffect::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 RemoveOneBuffEffect::ibuffid() const {
  return ibuffid_;
}
inline void RemoveOneBuffEffect::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// optional int32 iAttrType = 2;
inline bool RemoveOneBuffEffect::has_iattrtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveOneBuffEffect::set_has_iattrtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveOneBuffEffect::clear_has_iattrtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveOneBuffEffect::clear_iattrtype() {
  iattrtype_ = 0;
  clear_has_iattrtype();
}
inline ::google::protobuf::int32 RemoveOneBuffEffect::iattrtype() const {
  return iattrtype_;
}
inline void RemoveOneBuffEffect::set_iattrtype(::google::protobuf::int32 value) {
  set_has_iattrtype();
  iattrtype_ = value;
}

// optional int32 iAttrChange = 3;
inline bool RemoveOneBuffEffect::has_iattrchange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveOneBuffEffect::set_has_iattrchange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveOneBuffEffect::clear_has_iattrchange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveOneBuffEffect::clear_iattrchange() {
  iattrchange_ = 0;
  clear_has_iattrchange();
}
inline ::google::protobuf::int32 RemoveOneBuffEffect::iattrchange() const {
  return iattrchange_;
}
inline void RemoveOneBuffEffect::set_iattrchange(::google::protobuf::int32 value) {
  set_has_iattrchange();
  iattrchange_ = value;
}

// -------------------------------------------------------------------

// RemoveBuffEffect

// repeated .RemoveOneBuffEffect stRemoveOnes = 1;
inline int RemoveBuffEffect::stremoveones_size() const {
  return stremoveones_.size();
}
inline void RemoveBuffEffect::clear_stremoveones() {
  stremoveones_.Clear();
}
inline const ::RemoveOneBuffEffect& RemoveBuffEffect::stremoveones(int index) const {
  return stremoveones_.Get(index);
}
inline ::RemoveOneBuffEffect* RemoveBuffEffect::mutable_stremoveones(int index) {
  return stremoveones_.Mutable(index);
}
inline ::RemoveOneBuffEffect* RemoveBuffEffect::add_stremoveones() {
  return stremoveones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RemoveOneBuffEffect >&
RemoveBuffEffect::stremoveones() const {
  return stremoveones_;
}
inline ::google::protobuf::RepeatedPtrField< ::RemoveOneBuffEffect >*
RemoveBuffEffect::mutable_stremoveones() {
  return &stremoveones_;
}

// -------------------------------------------------------------------

// AddBuffInfo

// optional int32 iBuffID = 1;
inline bool AddBuffInfo::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBuffInfo::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBuffInfo::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBuffInfo::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 AddBuffInfo::ibuffid() const {
  return ibuffid_;
}
inline void AddBuffInfo::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// optional .RemoveBuffEffect stRemoveBuff = 2;
inline bool AddBuffInfo::has_stremovebuff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBuffInfo::set_has_stremovebuff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBuffInfo::clear_has_stremovebuff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBuffInfo::clear_stremovebuff() {
  if (stremovebuff_ != NULL) stremovebuff_->::RemoveBuffEffect::Clear();
  clear_has_stremovebuff();
}
inline const ::RemoveBuffEffect& AddBuffInfo::stremovebuff() const {
  return stremovebuff_ != NULL ? *stremovebuff_ : *default_instance_->stremovebuff_;
}
inline ::RemoveBuffEffect* AddBuffInfo::mutable_stremovebuff() {
  set_has_stremovebuff();
  if (stremovebuff_ == NULL) stremovebuff_ = new ::RemoveBuffEffect;
  return stremovebuff_;
}
inline ::RemoveBuffEffect* AddBuffInfo::release_stremovebuff() {
  clear_has_stremovebuff();
  ::RemoveBuffEffect* temp = stremovebuff_;
  stremovebuff_ = NULL;
  return temp;
}
inline void AddBuffInfo::set_allocated_stremovebuff(::RemoveBuffEffect* stremovebuff) {
  delete stremovebuff_;
  stremovebuff_ = stremovebuff;
  if (stremovebuff) {
    set_has_stremovebuff();
  } else {
    clear_has_stremovebuff();
  }
}

// optional .BuffEffect stEffects = 3;
inline bool AddBuffInfo::has_steffects() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBuffInfo::set_has_steffects() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBuffInfo::clear_has_steffects() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBuffInfo::clear_steffects() {
  if (steffects_ != NULL) steffects_->::BuffEffect::Clear();
  clear_has_steffects();
}
inline const ::BuffEffect& AddBuffInfo::steffects() const {
  return steffects_ != NULL ? *steffects_ : *default_instance_->steffects_;
}
inline ::BuffEffect* AddBuffInfo::mutable_steffects() {
  set_has_steffects();
  if (steffects_ == NULL) steffects_ = new ::BuffEffect;
  return steffects_;
}
inline ::BuffEffect* AddBuffInfo::release_steffects() {
  clear_has_steffects();
  ::BuffEffect* temp = steffects_;
  steffects_ = NULL;
  return temp;
}
inline void AddBuffInfo::set_allocated_steffects(::BuffEffect* steffects) {
  delete steffects_;
  steffects_ = steffects;
  if (steffects) {
    set_has_steffects();
  } else {
    clear_has_steffects();
  }
}

// -------------------------------------------------------------------

// OneAddBuff

// optional int32 iTargetUnitID = 1;
inline bool OneAddBuff::has_itargetunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneAddBuff::set_has_itargetunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneAddBuff::clear_has_itargetunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneAddBuff::clear_itargetunitid() {
  itargetunitid_ = 0;
  clear_has_itargetunitid();
}
inline ::google::protobuf::int32 OneAddBuff::itargetunitid() const {
  return itargetunitid_;
}
inline void OneAddBuff::set_itargetunitid(::google::protobuf::int32 value) {
  set_has_itargetunitid();
  itargetunitid_ = value;
}

// repeated .AddBuffInfo stBuffInfo = 2;
inline int OneAddBuff::stbuffinfo_size() const {
  return stbuffinfo_.size();
}
inline void OneAddBuff::clear_stbuffinfo() {
  stbuffinfo_.Clear();
}
inline const ::AddBuffInfo& OneAddBuff::stbuffinfo(int index) const {
  return stbuffinfo_.Get(index);
}
inline ::AddBuffInfo* OneAddBuff::mutable_stbuffinfo(int index) {
  return stbuffinfo_.Mutable(index);
}
inline ::AddBuffInfo* OneAddBuff::add_stbuffinfo() {
  return stbuffinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AddBuffInfo >&
OneAddBuff::stbuffinfo() const {
  return stbuffinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::AddBuffInfo >*
OneAddBuff::mutable_stbuffinfo() {
  return &stbuffinfo_;
}

// -------------------------------------------------------------------

// Zone_CombatAddBuff_Notify

// optional int32 iCastUnitID = 1;
inline bool Zone_CombatAddBuff_Notify::has_icastunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_CombatAddBuff_Notify::set_has_icastunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_CombatAddBuff_Notify::clear_has_icastunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_CombatAddBuff_Notify::clear_icastunitid() {
  icastunitid_ = 0;
  clear_has_icastunitid();
}
inline ::google::protobuf::int32 Zone_CombatAddBuff_Notify::icastunitid() const {
  return icastunitid_;
}
inline void Zone_CombatAddBuff_Notify::set_icastunitid(::google::protobuf::int32 value) {
  set_has_icastunitid();
  icastunitid_ = value;
}

// repeated .OneAddBuff stAddBuffs = 2;
inline int Zone_CombatAddBuff_Notify::staddbuffs_size() const {
  return staddbuffs_.size();
}
inline void Zone_CombatAddBuff_Notify::clear_staddbuffs() {
  staddbuffs_.Clear();
}
inline const ::OneAddBuff& Zone_CombatAddBuff_Notify::staddbuffs(int index) const {
  return staddbuffs_.Get(index);
}
inline ::OneAddBuff* Zone_CombatAddBuff_Notify::mutable_staddbuffs(int index) {
  return staddbuffs_.Mutable(index);
}
inline ::OneAddBuff* Zone_CombatAddBuff_Notify::add_staddbuffs() {
  return staddbuffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneAddBuff >&
Zone_CombatAddBuff_Notify::staddbuffs() const {
  return staddbuffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneAddBuff >*
Zone_CombatAddBuff_Notify::mutable_staddbuffs() {
  return &staddbuffs_;
}

// -------------------------------------------------------------------

// Zone_DoBuffEffect_Notify

// optional int32 iTriggerUnitID = 2;
inline bool Zone_DoBuffEffect_Notify::has_itriggerunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DoBuffEffect_Notify::set_has_itriggerunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DoBuffEffect_Notify::clear_has_itriggerunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DoBuffEffect_Notify::clear_itriggerunitid() {
  itriggerunitid_ = 0;
  clear_has_itriggerunitid();
}
inline ::google::protobuf::int32 Zone_DoBuffEffect_Notify::itriggerunitid() const {
  return itriggerunitid_;
}
inline void Zone_DoBuffEffect_Notify::set_itriggerunitid(::google::protobuf::int32 value) {
  set_has_itriggerunitid();
  itriggerunitid_ = value;
}

// repeated .BuffEffect stEffects = 3;
inline int Zone_DoBuffEffect_Notify::steffects_size() const {
  return steffects_.size();
}
inline void Zone_DoBuffEffect_Notify::clear_steffects() {
  steffects_.Clear();
}
inline const ::BuffEffect& Zone_DoBuffEffect_Notify::steffects(int index) const {
  return steffects_.Get(index);
}
inline ::BuffEffect* Zone_DoBuffEffect_Notify::mutable_steffects(int index) {
  return steffects_.Mutable(index);
}
inline ::BuffEffect* Zone_DoBuffEffect_Notify::add_steffects() {
  return steffects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffEffect >&
Zone_DoBuffEffect_Notify::steffects() const {
  return steffects_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffEffect >*
Zone_DoBuffEffect_Notify::mutable_steffects() {
  return &steffects_;
}

// -------------------------------------------------------------------

// Zone_RemoveBuff_Notify

// optional int32 iTargetUnitID = 1;
inline bool Zone_RemoveBuff_Notify::has_itargetunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RemoveBuff_Notify::set_has_itargetunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RemoveBuff_Notify::clear_has_itargetunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RemoveBuff_Notify::clear_itargetunitid() {
  itargetunitid_ = 0;
  clear_has_itargetunitid();
}
inline ::google::protobuf::int32 Zone_RemoveBuff_Notify::itargetunitid() const {
  return itargetunitid_;
}
inline void Zone_RemoveBuff_Notify::set_itargetunitid(::google::protobuf::int32 value) {
  set_has_itargetunitid();
  itargetunitid_ = value;
}

// repeated .RemoveBuffEffect stEffects = 2;
inline int Zone_RemoveBuff_Notify::steffects_size() const {
  return steffects_.size();
}
inline void Zone_RemoveBuff_Notify::clear_steffects() {
  steffects_.Clear();
}
inline const ::RemoveBuffEffect& Zone_RemoveBuff_Notify::steffects(int index) const {
  return steffects_.Get(index);
}
inline ::RemoveBuffEffect* Zone_RemoveBuff_Notify::mutable_steffects(int index) {
  return steffects_.Mutable(index);
}
inline ::RemoveBuffEffect* Zone_RemoveBuff_Notify::add_steffects() {
  return steffects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RemoveBuffEffect >&
Zone_RemoveBuff_Notify::steffects() const {
  return steffects_;
}
inline ::google::protobuf::RepeatedPtrField< ::RemoveBuffEffect >*
Zone_RemoveBuff_Notify::mutable_steffects() {
  return &steffects_;
}

// -------------------------------------------------------------------

// Zone_AddCombatUnit_Notify

// optional int32 iCampType = 1;
inline bool Zone_AddCombatUnit_Notify::has_icamptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_AddCombatUnit_Notify::set_has_icamptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_AddCombatUnit_Notify::clear_has_icamptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_AddCombatUnit_Notify::clear_icamptype() {
  icamptype_ = 0;
  clear_has_icamptype();
}
inline ::google::protobuf::int32 Zone_AddCombatUnit_Notify::icamptype() const {
  return icamptype_;
}
inline void Zone_AddCombatUnit_Notify::set_icamptype(::google::protobuf::int32 value) {
  set_has_icamptype();
  icamptype_ = value;
}

// optional .CombatUnit stUnit = 2;
inline bool Zone_AddCombatUnit_Notify::has_stunit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_AddCombatUnit_Notify::set_has_stunit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_AddCombatUnit_Notify::clear_has_stunit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_AddCombatUnit_Notify::clear_stunit() {
  if (stunit_ != NULL) stunit_->::CombatUnit::Clear();
  clear_has_stunit();
}
inline const ::CombatUnit& Zone_AddCombatUnit_Notify::stunit() const {
  return stunit_ != NULL ? *stunit_ : *default_instance_->stunit_;
}
inline ::CombatUnit* Zone_AddCombatUnit_Notify::mutable_stunit() {
  set_has_stunit();
  if (stunit_ == NULL) stunit_ = new ::CombatUnit;
  return stunit_;
}
inline ::CombatUnit* Zone_AddCombatUnit_Notify::release_stunit() {
  clear_has_stunit();
  ::CombatUnit* temp = stunit_;
  stunit_ = NULL;
  return temp;
}
inline void Zone_AddCombatUnit_Notify::set_allocated_stunit(::CombatUnit* stunit) {
  delete stunit_;
  stunit_ = stunit;
  if (stunit) {
    set_has_stunit();
  } else {
    clear_has_stunit();
  }
}

// -------------------------------------------------------------------

// Zone_KillCombatUnit_Notify

// optional int32 iUnitID = 1;
inline bool Zone_KillCombatUnit_Notify::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_KillCombatUnit_Notify::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_KillCombatUnit_Notify::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_KillCombatUnit_Notify::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 Zone_KillCombatUnit_Notify::iunitid() const {
  return iunitid_;
}
inline void Zone_KillCombatUnit_Notify::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// -------------------------------------------------------------------

// Zone_AddCombatTrap_Notify

// optional int32 iConfigID = 1;
inline bool Zone_AddCombatTrap_Notify::has_iconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_AddCombatTrap_Notify::set_has_iconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_AddCombatTrap_Notify::clear_has_iconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_AddCombatTrap_Notify::clear_iconfigid() {
  iconfigid_ = 0;
  clear_has_iconfigid();
}
inline ::google::protobuf::int32 Zone_AddCombatTrap_Notify::iconfigid() const {
  return iconfigid_;
}
inline void Zone_AddCombatTrap_Notify::set_iconfigid(::google::protobuf::int32 value) {
  set_has_iconfigid();
  iconfigid_ = value;
}

// optional int32 iTrapObjID = 2;
inline bool Zone_AddCombatTrap_Notify::has_itrapobjid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_AddCombatTrap_Notify::set_has_itrapobjid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_AddCombatTrap_Notify::clear_has_itrapobjid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_AddCombatTrap_Notify::clear_itrapobjid() {
  itrapobjid_ = 0;
  clear_has_itrapobjid();
}
inline ::google::protobuf::int32 Zone_AddCombatTrap_Notify::itrapobjid() const {
  return itrapobjid_;
}
inline void Zone_AddCombatTrap_Notify::set_itrapobjid(::google::protobuf::int32 value) {
  set_has_itrapobjid();
  itrapobjid_ = value;
}

// optional int32 iCamp = 3;
inline bool Zone_AddCombatTrap_Notify::has_icamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_AddCombatTrap_Notify::set_has_icamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_AddCombatTrap_Notify::clear_has_icamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_AddCombatTrap_Notify::clear_icamp() {
  icamp_ = 0;
  clear_has_icamp();
}
inline ::google::protobuf::int32 Zone_AddCombatTrap_Notify::icamp() const {
  return icamp_;
}
inline void Zone_AddCombatTrap_Notify::set_icamp(::google::protobuf::int32 value) {
  set_has_icamp();
  icamp_ = value;
}

// optional .UnitPosition stPos = 4;
inline bool Zone_AddCombatTrap_Notify::has_stpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_AddCombatTrap_Notify::set_has_stpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_AddCombatTrap_Notify::clear_has_stpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_AddCombatTrap_Notify::clear_stpos() {
  if (stpos_ != NULL) stpos_->::UnitPosition::Clear();
  clear_has_stpos();
}
inline const ::UnitPosition& Zone_AddCombatTrap_Notify::stpos() const {
  return stpos_ != NULL ? *stpos_ : *default_instance_->stpos_;
}
inline ::UnitPosition* Zone_AddCombatTrap_Notify::mutable_stpos() {
  set_has_stpos();
  if (stpos_ == NULL) stpos_ = new ::UnitPosition;
  return stpos_;
}
inline ::UnitPosition* Zone_AddCombatTrap_Notify::release_stpos() {
  clear_has_stpos();
  ::UnitPosition* temp = stpos_;
  stpos_ = NULL;
  return temp;
}
inline void Zone_AddCombatTrap_Notify::set_allocated_stpos(::UnitPosition* stpos) {
  delete stpos_;
  stpos_ = stpos;
  if (stpos) {
    set_has_stpos();
  } else {
    clear_has_stpos();
  }
}

// optional int32 iDirection = 5;
inline bool Zone_AddCombatTrap_Notify::has_idirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_AddCombatTrap_Notify::set_has_idirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_AddCombatTrap_Notify::clear_has_idirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_AddCombatTrap_Notify::clear_idirection() {
  idirection_ = 0;
  clear_has_idirection();
}
inline ::google::protobuf::int32 Zone_AddCombatTrap_Notify::idirection() const {
  return idirection_;
}
inline void Zone_AddCombatTrap_Notify::set_idirection(::google::protobuf::int32 value) {
  set_has_idirection();
  idirection_ = value;
}

// -------------------------------------------------------------------

// Zone_TriggerCombatTrap_Notify

// optional int32 iTrapObjID = 1;
inline bool Zone_TriggerCombatTrap_Notify::has_itrapobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_TriggerCombatTrap_Notify::set_has_itrapobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_has_itrapobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_itrapobjid() {
  itrapobjid_ = 0;
  clear_has_itrapobjid();
}
inline ::google::protobuf::int32 Zone_TriggerCombatTrap_Notify::itrapobjid() const {
  return itrapobjid_;
}
inline void Zone_TriggerCombatTrap_Notify::set_itrapobjid(::google::protobuf::int32 value) {
  set_has_itrapobjid();
  itrapobjid_ = value;
}

// optional int32 iTriggerObjID = 2;
inline bool Zone_TriggerCombatTrap_Notify::has_itriggerobjid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_TriggerCombatTrap_Notify::set_has_itriggerobjid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_has_itriggerobjid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_itriggerobjid() {
  itriggerobjid_ = 0;
  clear_has_itriggerobjid();
}
inline ::google::protobuf::int32 Zone_TriggerCombatTrap_Notify::itriggerobjid() const {
  return itriggerobjid_;
}
inline void Zone_TriggerCombatTrap_Notify::set_itriggerobjid(::google::protobuf::int32 value) {
  set_has_itriggerobjid();
  itriggerobjid_ = value;
}

// optional int32 iTriggerType = 3;
inline bool Zone_TriggerCombatTrap_Notify::has_itriggertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_TriggerCombatTrap_Notify::set_has_itriggertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_has_itriggertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_itriggertype() {
  itriggertype_ = 0;
  clear_has_itriggertype();
}
inline ::google::protobuf::int32 Zone_TriggerCombatTrap_Notify::itriggertype() const {
  return itriggertype_;
}
inline void Zone_TriggerCombatTrap_Notify::set_itriggertype(::google::protobuf::int32 value) {
  set_has_itriggertype();
  itriggertype_ = value;
}

// optional int32 iInterruptType = 4;
inline bool Zone_TriggerCombatTrap_Notify::has_iinterrupttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_TriggerCombatTrap_Notify::set_has_iinterrupttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_has_iinterrupttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_TriggerCombatTrap_Notify::clear_iinterrupttype() {
  iinterrupttype_ = 0;
  clear_has_iinterrupttype();
}
inline ::google::protobuf::int32 Zone_TriggerCombatTrap_Notify::iinterrupttype() const {
  return iinterrupttype_;
}
inline void Zone_TriggerCombatTrap_Notify::set_iinterrupttype(::google::protobuf::int32 value) {
  set_has_iinterrupttype();
  iinterrupttype_ = value;
}

// -------------------------------------------------------------------

// Zone_DeleteCombatTrap_Notify

// optional int32 iTrapObjID = 1;
inline bool Zone_DeleteCombatTrap_Notify::has_itrapobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DeleteCombatTrap_Notify::set_has_itrapobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DeleteCombatTrap_Notify::clear_has_itrapobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DeleteCombatTrap_Notify::clear_itrapobjid() {
  itrapobjid_ = 0;
  clear_has_itrapobjid();
}
inline ::google::protobuf::int32 Zone_DeleteCombatTrap_Notify::itrapobjid() const {
  return itrapobjid_;
}
inline void Zone_DeleteCombatTrap_Notify::set_itrapobjid(::google::protobuf::int32 value) {
  set_has_itrapobjid();
  itrapobjid_ = value;
}

// -------------------------------------------------------------------

// Zone_UnitAttrChange_Notify

// optional int32 iUnitID = 1;
inline bool Zone_UnitAttrChange_Notify::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_UnitAttrChange_Notify::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_UnitAttrChange_Notify::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_UnitAttrChange_Notify::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 Zone_UnitAttrChange_Notify::iunitid() const {
  return iunitid_;
}
inline void Zone_UnitAttrChange_Notify::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional int32 iAttrType = 2;
inline bool Zone_UnitAttrChange_Notify::has_iattrtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_UnitAttrChange_Notify::set_has_iattrtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_UnitAttrChange_Notify::clear_has_iattrtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_UnitAttrChange_Notify::clear_iattrtype() {
  iattrtype_ = 0;
  clear_has_iattrtype();
}
inline ::google::protobuf::int32 Zone_UnitAttrChange_Notify::iattrtype() const {
  return iattrtype_;
}
inline void Zone_UnitAttrChange_Notify::set_iattrtype(::google::protobuf::int32 value) {
  set_has_iattrtype();
  iattrtype_ = value;
}

// optional int32 iAttrChange = 3;
inline bool Zone_UnitAttrChange_Notify::has_iattrchange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_UnitAttrChange_Notify::set_has_iattrchange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_UnitAttrChange_Notify::clear_has_iattrchange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_UnitAttrChange_Notify::clear_iattrchange() {
  iattrchange_ = 0;
  clear_has_iattrchange();
}
inline ::google::protobuf::int32 Zone_UnitAttrChange_Notify::iattrchange() const {
  return iattrchange_;
}
inline void Zone_UnitAttrChange_Notify::set_iattrchange(::google::protobuf::int32 value) {
  set_has_iattrchange();
  iattrchange_ = value;
}

// -------------------------------------------------------------------

// Zone_StartPVPCombat_Request

// optional uint32 uiPassiveUin = 1;
inline bool Zone_StartPVPCombat_Request::has_uipassiveuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_StartPVPCombat_Request::set_has_uipassiveuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_StartPVPCombat_Request::clear_has_uipassiveuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_StartPVPCombat_Request::clear_uipassiveuin() {
  uipassiveuin_ = 0u;
  clear_has_uipassiveuin();
}
inline ::google::protobuf::uint32 Zone_StartPVPCombat_Request::uipassiveuin() const {
  return uipassiveuin_;
}
inline void Zone_StartPVPCombat_Request::set_uipassiveuin(::google::protobuf::uint32 value) {
  set_has_uipassiveuin();
  uipassiveuin_ = value;
}

// -------------------------------------------------------------------

// Zone_StartPVPCombat_Response

// optional int32 iResult = 1;
inline bool Zone_StartPVPCombat_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_StartPVPCombat_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_StartPVPCombat_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_StartPVPCombat_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_StartPVPCombat_Response::iresult() const {
  return iresult_;
}
inline void Zone_StartPVPCombat_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_StartPVPCombat_Notify

// optional uint32 uiActiveUin = 1;
inline bool Zone_StartPVPCombat_Notify::has_uiactiveuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_StartPVPCombat_Notify::set_has_uiactiveuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_StartPVPCombat_Notify::clear_has_uiactiveuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_StartPVPCombat_Notify::clear_uiactiveuin() {
  uiactiveuin_ = 0u;
  clear_has_uiactiveuin();
}
inline ::google::protobuf::uint32 Zone_StartPVPCombat_Notify::uiactiveuin() const {
  return uiactiveuin_;
}
inline void Zone_StartPVPCombat_Notify::set_uiactiveuin(::google::protobuf::uint32 value) {
  set_has_uiactiveuin();
  uiactiveuin_ = value;
}

// optional string strActiveName = 2;
inline bool Zone_StartPVPCombat_Notify::has_stractivename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_StartPVPCombat_Notify::set_has_stractivename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_StartPVPCombat_Notify::clear_has_stractivename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_StartPVPCombat_Notify::clear_stractivename() {
  if (stractivename_ != &::google::protobuf::internal::kEmptyString) {
    stractivename_->clear();
  }
  clear_has_stractivename();
}
inline const ::std::string& Zone_StartPVPCombat_Notify::stractivename() const {
  return *stractivename_;
}
inline void Zone_StartPVPCombat_Notify::set_stractivename(const ::std::string& value) {
  set_has_stractivename();
  if (stractivename_ == &::google::protobuf::internal::kEmptyString) {
    stractivename_ = new ::std::string;
  }
  stractivename_->assign(value);
}
inline void Zone_StartPVPCombat_Notify::set_stractivename(const char* value) {
  set_has_stractivename();
  if (stractivename_ == &::google::protobuf::internal::kEmptyString) {
    stractivename_ = new ::std::string;
  }
  stractivename_->assign(value);
}
inline void Zone_StartPVPCombat_Notify::set_stractivename(const char* value, size_t size) {
  set_has_stractivename();
  if (stractivename_ == &::google::protobuf::internal::kEmptyString) {
    stractivename_ = new ::std::string;
  }
  stractivename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_StartPVPCombat_Notify::mutable_stractivename() {
  set_has_stractivename();
  if (stractivename_ == &::google::protobuf::internal::kEmptyString) {
    stractivename_ = new ::std::string;
  }
  return stractivename_;
}
inline ::std::string* Zone_StartPVPCombat_Notify::release_stractivename() {
  clear_has_stractivename();
  if (stractivename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractivename_;
    stractivename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_StartPVPCombat_Notify::set_allocated_stractivename(::std::string* stractivename) {
  if (stractivename_ != &::google::protobuf::internal::kEmptyString) {
    delete stractivename_;
  }
  if (stractivename) {
    set_has_stractivename();
    stractivename_ = stractivename;
  } else {
    clear_has_stractivename();
    stractivename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_AcceptPVPCombat_Request

// optional uint32 uiActiveUin = 1;
inline bool Zone_AcceptPVPCombat_Request::has_uiactiveuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_AcceptPVPCombat_Request::set_has_uiactiveuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_AcceptPVPCombat_Request::clear_has_uiactiveuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_AcceptPVPCombat_Request::clear_uiactiveuin() {
  uiactiveuin_ = 0u;
  clear_has_uiactiveuin();
}
inline ::google::protobuf::uint32 Zone_AcceptPVPCombat_Request::uiactiveuin() const {
  return uiactiveuin_;
}
inline void Zone_AcceptPVPCombat_Request::set_uiactiveuin(::google::protobuf::uint32 value) {
  set_has_uiactiveuin();
  uiactiveuin_ = value;
}

// optional bool bIsAccept = 2;
inline bool Zone_AcceptPVPCombat_Request::has_bisaccept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_AcceptPVPCombat_Request::set_has_bisaccept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_AcceptPVPCombat_Request::clear_has_bisaccept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_AcceptPVPCombat_Request::clear_bisaccept() {
  bisaccept_ = false;
  clear_has_bisaccept();
}
inline bool Zone_AcceptPVPCombat_Request::bisaccept() const {
  return bisaccept_;
}
inline void Zone_AcceptPVPCombat_Request::set_bisaccept(bool value) {
  set_has_bisaccept();
  bisaccept_ = value;
}

// -------------------------------------------------------------------

// Zone_AcceptPVPCombat_Response

// optional int32 iResult = 1;
inline bool Zone_AcceptPVPCombat_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_AcceptPVPCombat_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_AcceptPVPCombat_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_AcceptPVPCombat_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_AcceptPVPCombat_Response::iresult() const {
  return iresult_;
}
inline void Zone_AcceptPVPCombat_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_RejectPVPCombat_Notify

// optional int32 iPassiveUin = 1;
inline bool Zone_RejectPVPCombat_Notify::has_ipassiveuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RejectPVPCombat_Notify::set_has_ipassiveuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RejectPVPCombat_Notify::clear_has_ipassiveuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RejectPVPCombat_Notify::clear_ipassiveuin() {
  ipassiveuin_ = 0;
  clear_has_ipassiveuin();
}
inline ::google::protobuf::int32 Zone_RejectPVPCombat_Notify::ipassiveuin() const {
  return ipassiveuin_;
}
inline void Zone_RejectPVPCombat_Notify::set_ipassiveuin(::google::protobuf::int32 value) {
  set_has_ipassiveuin();
  ipassiveuin_ = value;
}

// optional string strPassiveName = 2;
inline bool Zone_RejectPVPCombat_Notify::has_strpassivename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_RejectPVPCombat_Notify::set_has_strpassivename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_RejectPVPCombat_Notify::clear_has_strpassivename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_RejectPVPCombat_Notify::clear_strpassivename() {
  if (strpassivename_ != &::google::protobuf::internal::kEmptyString) {
    strpassivename_->clear();
  }
  clear_has_strpassivename();
}
inline const ::std::string& Zone_RejectPVPCombat_Notify::strpassivename() const {
  return *strpassivename_;
}
inline void Zone_RejectPVPCombat_Notify::set_strpassivename(const ::std::string& value) {
  set_has_strpassivename();
  if (strpassivename_ == &::google::protobuf::internal::kEmptyString) {
    strpassivename_ = new ::std::string;
  }
  strpassivename_->assign(value);
}
inline void Zone_RejectPVPCombat_Notify::set_strpassivename(const char* value) {
  set_has_strpassivename();
  if (strpassivename_ == &::google::protobuf::internal::kEmptyString) {
    strpassivename_ = new ::std::string;
  }
  strpassivename_->assign(value);
}
inline void Zone_RejectPVPCombat_Notify::set_strpassivename(const char* value, size_t size) {
  set_has_strpassivename();
  if (strpassivename_ == &::google::protobuf::internal::kEmptyString) {
    strpassivename_ = new ::std::string;
  }
  strpassivename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_RejectPVPCombat_Notify::mutable_strpassivename() {
  set_has_strpassivename();
  if (strpassivename_ == &::google::protobuf::internal::kEmptyString) {
    strpassivename_ = new ::std::string;
  }
  return strpassivename_;
}
inline ::std::string* Zone_RejectPVPCombat_Notify::release_strpassivename() {
  clear_has_strpassivename();
  if (strpassivename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpassivename_;
    strpassivename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_RejectPVPCombat_Notify::set_allocated_strpassivename(::std::string* strpassivename) {
  if (strpassivename_ != &::google::protobuf::internal::kEmptyString) {
    delete strpassivename_;
  }
  if (strpassivename) {
    set_has_strpassivename();
    strpassivename_ = strpassivename;
  } else {
    clear_has_strpassivename();
    strpassivename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_ChangeFightState_Notify

// optional int32 iUnitID = 1;
inline bool Zone_ChangeFightState_Notify::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_ChangeFightState_Notify::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_ChangeFightState_Notify::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_ChangeFightState_Notify::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 Zone_ChangeFightState_Notify::iunitid() const {
  return iunitid_;
}
inline void Zone_ChangeFightState_Notify::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional bool bIsInFight = 2;
inline bool Zone_ChangeFightState_Notify::has_bisinfight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_ChangeFightState_Notify::set_has_bisinfight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_ChangeFightState_Notify::clear_has_bisinfight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_ChangeFightState_Notify::clear_bisinfight() {
  bisinfight_ = false;
  clear_has_bisinfight();
}
inline bool Zone_ChangeFightState_Notify::bisinfight() const {
  return bisinfight_;
}
inline void Zone_ChangeFightState_Notify::set_bisinfight(bool value) {
  set_has_bisinfight();
  bisinfight_ = value;
}

// -------------------------------------------------------------------

// OneCombatUnitInfo

// optional int32 iUnitID = 1;
inline bool OneCombatUnitInfo::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneCombatUnitInfo::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneCombatUnitInfo::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneCombatUnitInfo::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 OneCombatUnitInfo::iunitid() const {
  return iunitid_;
}
inline void OneCombatUnitInfo::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional .UnitPosition stPos = 2;
inline bool OneCombatUnitInfo::has_stpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneCombatUnitInfo::set_has_stpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneCombatUnitInfo::clear_has_stpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneCombatUnitInfo::clear_stpos() {
  if (stpos_ != NULL) stpos_->::UnitPosition::Clear();
  clear_has_stpos();
}
inline const ::UnitPosition& OneCombatUnitInfo::stpos() const {
  return stpos_ != NULL ? *stpos_ : *default_instance_->stpos_;
}
inline ::UnitPosition* OneCombatUnitInfo::mutable_stpos() {
  set_has_stpos();
  if (stpos_ == NULL) stpos_ = new ::UnitPosition;
  return stpos_;
}
inline ::UnitPosition* OneCombatUnitInfo::release_stpos() {
  clear_has_stpos();
  ::UnitPosition* temp = stpos_;
  stpos_ = NULL;
  return temp;
}
inline void OneCombatUnitInfo::set_allocated_stpos(::UnitPosition* stpos) {
  delete stpos_;
  stpos_ = stpos;
  if (stpos) {
    set_has_stpos();
  } else {
    clear_has_stpos();
  }
}

// -------------------------------------------------------------------

// CombatForm

// repeated .OneCombatUnitInfo stUnitInfos = 1;
inline int CombatForm::stunitinfos_size() const {
  return stunitinfos_.size();
}
inline void CombatForm::clear_stunitinfos() {
  stunitinfos_.Clear();
}
inline const ::OneCombatUnitInfo& CombatForm::stunitinfos(int index) const {
  return stunitinfos_.Get(index);
}
inline ::OneCombatUnitInfo* CombatForm::mutable_stunitinfos(int index) {
  return stunitinfos_.Mutable(index);
}
inline ::OneCombatUnitInfo* CombatForm::add_stunitinfos() {
  return stunitinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneCombatUnitInfo >&
CombatForm::stunitinfos() const {
  return stunitinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneCombatUnitInfo >*
CombatForm::mutable_stunitinfos() {
  return &stunitinfos_;
}

// -------------------------------------------------------------------

// Zone_SetCombatForm_Request

// optional .CombatForm stForm = 1;
inline bool Zone_SetCombatForm_Request::has_stform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SetCombatForm_Request::set_has_stform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SetCombatForm_Request::clear_has_stform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SetCombatForm_Request::clear_stform() {
  if (stform_ != NULL) stform_->::CombatForm::Clear();
  clear_has_stform();
}
inline const ::CombatForm& Zone_SetCombatForm_Request::stform() const {
  return stform_ != NULL ? *stform_ : *default_instance_->stform_;
}
inline ::CombatForm* Zone_SetCombatForm_Request::mutable_stform() {
  set_has_stform();
  if (stform_ == NULL) stform_ = new ::CombatForm;
  return stform_;
}
inline ::CombatForm* Zone_SetCombatForm_Request::release_stform() {
  clear_has_stform();
  ::CombatForm* temp = stform_;
  stform_ = NULL;
  return temp;
}
inline void Zone_SetCombatForm_Request::set_allocated_stform(::CombatForm* stform) {
  delete stform_;
  stform_ = stform;
  if (stform) {
    set_has_stform();
  } else {
    clear_has_stform();
  }
}

// -------------------------------------------------------------------

// Zone_SetCombatForm_Response

// optional int32 iResult = 1;
inline bool Zone_SetCombatForm_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SetCombatForm_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SetCombatForm_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SetCombatForm_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_SetCombatForm_Response::iresult() const {
  return iresult_;
}
inline void Zone_SetCombatForm_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_SetCombatForm_Notify

// optional .CombatForm stActiveForm = 1;
inline bool Zone_SetCombatForm_Notify::has_stactiveform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SetCombatForm_Notify::set_has_stactiveform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SetCombatForm_Notify::clear_has_stactiveform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SetCombatForm_Notify::clear_stactiveform() {
  if (stactiveform_ != NULL) stactiveform_->::CombatForm::Clear();
  clear_has_stactiveform();
}
inline const ::CombatForm& Zone_SetCombatForm_Notify::stactiveform() const {
  return stactiveform_ != NULL ? *stactiveform_ : *default_instance_->stactiveform_;
}
inline ::CombatForm* Zone_SetCombatForm_Notify::mutable_stactiveform() {
  set_has_stactiveform();
  if (stactiveform_ == NULL) stactiveform_ = new ::CombatForm;
  return stactiveform_;
}
inline ::CombatForm* Zone_SetCombatForm_Notify::release_stactiveform() {
  clear_has_stactiveform();
  ::CombatForm* temp = stactiveform_;
  stactiveform_ = NULL;
  return temp;
}
inline void Zone_SetCombatForm_Notify::set_allocated_stactiveform(::CombatForm* stactiveform) {
  delete stactiveform_;
  stactiveform_ = stactiveform;
  if (stactiveform) {
    set_has_stactiveform();
  } else {
    clear_has_stactiveform();
  }
}

// optional .CombatForm stPassiveForm = 2;
inline bool Zone_SetCombatForm_Notify::has_stpassiveform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_SetCombatForm_Notify::set_has_stpassiveform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_SetCombatForm_Notify::clear_has_stpassiveform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_SetCombatForm_Notify::clear_stpassiveform() {
  if (stpassiveform_ != NULL) stpassiveform_->::CombatForm::Clear();
  clear_has_stpassiveform();
}
inline const ::CombatForm& Zone_SetCombatForm_Notify::stpassiveform() const {
  return stpassiveform_ != NULL ? *stpassiveform_ : *default_instance_->stpassiveform_;
}
inline ::CombatForm* Zone_SetCombatForm_Notify::mutable_stpassiveform() {
  set_has_stpassiveform();
  if (stpassiveform_ == NULL) stpassiveform_ = new ::CombatForm;
  return stpassiveform_;
}
inline ::CombatForm* Zone_SetCombatForm_Notify::release_stpassiveform() {
  clear_has_stpassiveform();
  ::CombatForm* temp = stpassiveform_;
  stpassiveform_ = NULL;
  return temp;
}
inline void Zone_SetCombatForm_Notify::set_allocated_stpassiveform(::CombatForm* stpassiveform) {
  delete stpassiveform_;
  stpassiveform_ = stpassiveform;
  if (stpassiveform) {
    set_has_stpassiveform();
  } else {
    clear_has_stpassiveform();
  }
}

// -------------------------------------------------------------------

// Zone_DecreaseUnitBuff_Notify

// optional int32 iCombatUnitID = 1;
inline bool Zone_DecreaseUnitBuff_Notify::has_icombatunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_DecreaseUnitBuff_Notify::set_has_icombatunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_DecreaseUnitBuff_Notify::clear_has_icombatunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_DecreaseUnitBuff_Notify::clear_icombatunitid() {
  icombatunitid_ = 0;
  clear_has_icombatunitid();
}
inline ::google::protobuf::int32 Zone_DecreaseUnitBuff_Notify::icombatunitid() const {
  return icombatunitid_;
}
inline void Zone_DecreaseUnitBuff_Notify::set_icombatunitid(::google::protobuf::int32 value) {
  set_has_icombatunitid();
  icombatunitid_ = value;
}

// -------------------------------------------------------------------

// OneActionInfo

// optional int32 iUnitID = 1;
inline bool OneActionInfo::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneActionInfo::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneActionInfo::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneActionInfo::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 OneActionInfo::iunitid() const {
  return iunitid_;
}
inline void OneActionInfo::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// optional int32 iXianGong = 2;
inline bool OneActionInfo::has_ixiangong() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneActionInfo::set_has_ixiangong() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneActionInfo::clear_has_ixiangong() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneActionInfo::clear_ixiangong() {
  ixiangong_ = 0;
  clear_has_ixiangong();
}
inline ::google::protobuf::int32 OneActionInfo::ixiangong() const {
  return ixiangong_;
}
inline void OneActionInfo::set_ixiangong(::google::protobuf::int32 value) {
  set_has_ixiangong();
  ixiangong_ = value;
}

// -------------------------------------------------------------------

// Zone_ActionUnitInfo_Notify

// repeated .OneActionInfo stInActionInfos = 1;
inline int Zone_ActionUnitInfo_Notify::stinactioninfos_size() const {
  return stinactioninfos_.size();
}
inline void Zone_ActionUnitInfo_Notify::clear_stinactioninfos() {
  stinactioninfos_.Clear();
}
inline const ::OneActionInfo& Zone_ActionUnitInfo_Notify::stinactioninfos(int index) const {
  return stinactioninfos_.Get(index);
}
inline ::OneActionInfo* Zone_ActionUnitInfo_Notify::mutable_stinactioninfos(int index) {
  return stinactioninfos_.Mutable(index);
}
inline ::OneActionInfo* Zone_ActionUnitInfo_Notify::add_stinactioninfos() {
  return stinactioninfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneActionInfo >&
Zone_ActionUnitInfo_Notify::stinactioninfos() const {
  return stinactioninfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneActionInfo >*
Zone_ActionUnitInfo_Notify::mutable_stinactioninfos() {
  return &stinactioninfos_;
}

// repeated .OneActionInfo stActionDoneInfos = 2;
inline int Zone_ActionUnitInfo_Notify::stactiondoneinfos_size() const {
  return stactiondoneinfos_.size();
}
inline void Zone_ActionUnitInfo_Notify::clear_stactiondoneinfos() {
  stactiondoneinfos_.Clear();
}
inline const ::OneActionInfo& Zone_ActionUnitInfo_Notify::stactiondoneinfos(int index) const {
  return stactiondoneinfos_.Get(index);
}
inline ::OneActionInfo* Zone_ActionUnitInfo_Notify::mutable_stactiondoneinfos(int index) {
  return stactiondoneinfos_.Mutable(index);
}
inline ::OneActionInfo* Zone_ActionUnitInfo_Notify::add_stactiondoneinfos() {
  return stactiondoneinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneActionInfo >&
Zone_ActionUnitInfo_Notify::stactiondoneinfos() const {
  return stactiondoneinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneActionInfo >*
Zone_ActionUnitInfo_Notify::mutable_stactiondoneinfos() {
  return &stactiondoneinfos_;
}

// -------------------------------------------------------------------

// SkillCDInfo

// optional int32 iSkillID = 1;
inline bool SkillCDInfo::has_iskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillCDInfo::set_has_iskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillCDInfo::clear_has_iskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillCDInfo::clear_iskillid() {
  iskillid_ = 0;
  clear_has_iskillid();
}
inline ::google::protobuf::int32 SkillCDInfo::iskillid() const {
  return iskillid_;
}
inline void SkillCDInfo::set_iskillid(::google::protobuf::int32 value) {
  set_has_iskillid();
  iskillid_ = value;
}

// optional int32 iCDRound = 2;
inline bool SkillCDInfo::has_icdround() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillCDInfo::set_has_icdround() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillCDInfo::clear_has_icdround() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillCDInfo::clear_icdround() {
  icdround_ = 0;
  clear_has_icdround();
}
inline ::google::protobuf::int32 SkillCDInfo::icdround() const {
  return icdround_;
}
inline void SkillCDInfo::set_icdround(::google::protobuf::int32 value) {
  set_has_icdround();
  icdround_ = value;
}

// -------------------------------------------------------------------

// Zone_SkillCDRound_Notify

// optional int32 iUnitID = 1;
inline bool Zone_SkillCDRound_Notify::has_iunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SkillCDRound_Notify::set_has_iunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SkillCDRound_Notify::clear_has_iunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SkillCDRound_Notify::clear_iunitid() {
  iunitid_ = 0;
  clear_has_iunitid();
}
inline ::google::protobuf::int32 Zone_SkillCDRound_Notify::iunitid() const {
  return iunitid_;
}
inline void Zone_SkillCDRound_Notify::set_iunitid(::google::protobuf::int32 value) {
  set_has_iunitid();
  iunitid_ = value;
}

// repeated .SkillCDInfo stCDInfos = 2;
inline int Zone_SkillCDRound_Notify::stcdinfos_size() const {
  return stcdinfos_.size();
}
inline void Zone_SkillCDRound_Notify::clear_stcdinfos() {
  stcdinfos_.Clear();
}
inline const ::SkillCDInfo& Zone_SkillCDRound_Notify::stcdinfos(int index) const {
  return stcdinfos_.Get(index);
}
inline ::SkillCDInfo* Zone_SkillCDRound_Notify::mutable_stcdinfos(int index) {
  return stcdinfos_.Mutable(index);
}
inline ::SkillCDInfo* Zone_SkillCDRound_Notify::add_stcdinfos() {
  return stcdinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >&
Zone_SkillCDRound_Notify::stcdinfos() const {
  return stcdinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillCDInfo >*
Zone_SkillCDRound_Notify::mutable_stcdinfos() {
  return &stcdinfos_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CombatType>() {
  return ::CombatType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CombatUnitType>() {
  return ::CombatUnitType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UnitDirectiveType>() {
  return ::UnitDirectiveType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActionType>() {
  return ::ActionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActionEffectStatus>() {
  return ::ActionEffectStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::COMBATUNITSTATUS>() {
  return ::COMBATUNITSTATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CombatMoveType>() {
  return ::CombatMoveType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_2eFight_2eproto__INCLUDED
