// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol.Zone.proto

#ifndef PROTOBUF_GameProtocol_2eZone_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_2eZone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol.Common.pb.h"
#include "GameProtocol.USERDB.pb.h"
#include "GameProtocol.Fight.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

class GameLoginInfo;
class Zone_LoginServer_Request;
class Zone_LoginServer_Response;
class Zone_Logout_Notify;
class Zone_GetFriendInfo_Request;
class Zone_GetFriendInfo_Response;
class Zone_OnlineRole_Request;
class Zone_GameMaster_Request;
class Zone_GameMaster_Response;
class Zone_LoginServer_Notify;
class Zone_RepOpera_Request;
class Zone_RepOpera_Response;
class Zone_GetRepInfo_Request;
class Zone_GetRepInfo_Response;
class Zone_WearEquip_Request;
class Zone_WearEquip_Response;
class OneRepSlot;
class Zone_RepChange_Notify;
class SellItemInfo;
class Zone_SellItem_Request;
class Zone_SellItem_Response;
class UserResourceChange;
class Zone_ResourceChange_Notify;
class Zone_Chat_Request;
class Zone_Chat_Response;
class Zone_FightAttr_Notify;

enum ReqOperaType {
  REQ_OPERA_TYPE_INVALID = 0,
  REQ_OPERA_TYPE_SPLIT = 1,
  REQ_OPERA_TYPE_EXCHANGE = 2,
  REQ_OPERA_TYPE_USE = 3,
  REQ_OPERA_TYPE_DELETE = 4,
  REQ_OPERA_TYPE_SORT = 5
};
bool ReqOperaType_IsValid(int value);
const ReqOperaType ReqOperaType_MIN = REQ_OPERA_TYPE_INVALID;
const ReqOperaType ReqOperaType_MAX = REQ_OPERA_TYPE_SORT;
const int ReqOperaType_ARRAYSIZE = ReqOperaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReqOperaType_descriptor();
inline const ::std::string& ReqOperaType_Name(ReqOperaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReqOperaType_descriptor(), value);
}
inline bool ReqOperaType_Parse(
    const ::std::string& name, ReqOperaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReqOperaType>(
    ReqOperaType_descriptor(), name, value);
}
// ===================================================================

class GameLoginInfo : public ::google::protobuf::Message {
 public:
  GameLoginInfo();
  virtual ~GameLoginInfo();

  GameLoginInfo(const GameLoginInfo& from);

  inline GameLoginInfo& operator=(const GameLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameLoginInfo& default_instance();

  void Swap(GameLoginInfo* other);

  // implements Message ----------------------------------------------

  GameLoginInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameLoginInfo& from);
  void MergeFrom(const GameLoginInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BASEDBINFO stBaseInfo = 1;
  inline bool has_stbaseinfo() const;
  inline void clear_stbaseinfo();
  static const int kStBaseInfoFieldNumber = 1;
  inline const ::BASEDBINFO& stbaseinfo() const;
  inline ::BASEDBINFO* mutable_stbaseinfo();
  inline ::BASEDBINFO* release_stbaseinfo();
  inline void set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo);

  // optional .QUESTDBINFO stQuestInfo = 2;
  inline bool has_stquestinfo() const;
  inline void clear_stquestinfo();
  static const int kStQuestInfoFieldNumber = 2;
  inline const ::QUESTDBINFO& stquestinfo() const;
  inline ::QUESTDBINFO* mutable_stquestinfo();
  inline ::QUESTDBINFO* release_stquestinfo();
  inline void set_allocated_stquestinfo(::QUESTDBINFO* stquestinfo);

  // optional .ITEMDBINFO stItemInfo = 3;
  inline bool has_stiteminfo() const;
  inline void clear_stiteminfo();
  static const int kStItemInfoFieldNumber = 3;
  inline const ::ITEMDBINFO& stiteminfo() const;
  inline ::ITEMDBINFO* mutable_stiteminfo();
  inline ::ITEMDBINFO* release_stiteminfo();
  inline void set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo);

  // optional .FIGHTDBINFO stFightInfo = 5;
  inline bool has_stfightinfo() const;
  inline void clear_stfightinfo();
  static const int kStFightInfoFieldNumber = 5;
  inline const ::FIGHTDBINFO& stfightinfo() const;
  inline ::FIGHTDBINFO* mutable_stfightinfo();
  inline ::FIGHTDBINFO* release_stfightinfo();
  inline void set_allocated_stfightinfo(::FIGHTDBINFO* stfightinfo);

  // optional .FRIENDDBINFO stFriendInfo = 6;
  inline bool has_stfriendinfo() const;
  inline void clear_stfriendinfo();
  static const int kStFriendInfoFieldNumber = 6;
  inline const ::FRIENDDBINFO& stfriendinfo() const;
  inline ::FRIENDDBINFO* mutable_stfriendinfo();
  inline ::FRIENDDBINFO* release_stfriendinfo();
  inline void set_allocated_stfriendinfo(::FRIENDDBINFO* stfriendinfo);

  // optional .RESERVED1DBINFO stReserved1 = 7;
  inline bool has_streserved1() const;
  inline void clear_streserved1();
  static const int kStReserved1FieldNumber = 7;
  inline const ::RESERVED1DBINFO& streserved1() const;
  inline ::RESERVED1DBINFO* mutable_streserved1();
  inline ::RESERVED1DBINFO* release_streserved1();
  inline void set_allocated_streserved1(::RESERVED1DBINFO* streserved1);

  // optional .RESERVED2DBINFO stReserved2 = 8;
  inline bool has_streserved2() const;
  inline void clear_streserved2();
  static const int kStReserved2FieldNumber = 8;
  inline const ::RESERVED2DBINFO& streserved2() const;
  inline ::RESERVED2DBINFO* mutable_streserved2();
  inline ::RESERVED2DBINFO* release_streserved2();
  inline void set_allocated_streserved2(::RESERVED2DBINFO* streserved2);

  // @@protoc_insertion_point(class_scope:GameLoginInfo)
 private:
  inline void set_has_stbaseinfo();
  inline void clear_has_stbaseinfo();
  inline void set_has_stquestinfo();
  inline void clear_has_stquestinfo();
  inline void set_has_stiteminfo();
  inline void clear_has_stiteminfo();
  inline void set_has_stfightinfo();
  inline void clear_has_stfightinfo();
  inline void set_has_stfriendinfo();
  inline void clear_has_stfriendinfo();
  inline void set_has_streserved1();
  inline void clear_has_streserved1();
  inline void set_has_streserved2();
  inline void clear_has_streserved2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BASEDBINFO* stbaseinfo_;
  ::QUESTDBINFO* stquestinfo_;
  ::ITEMDBINFO* stiteminfo_;
  ::FIGHTDBINFO* stfightinfo_;
  ::FRIENDDBINFO* stfriendinfo_;
  ::RESERVED1DBINFO* streserved1_;
  ::RESERVED2DBINFO* streserved2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static GameLoginInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Request : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Request();
  virtual ~Zone_LoginServer_Request();

  Zone_LoginServer_Request(const Zone_LoginServer_Request& from);

  inline Zone_LoginServer_Request& operator=(const Zone_LoginServer_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Request& default_instance();

  void Swap(Zone_LoginServer_Request* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Request& from);
  void MergeFrom(const Zone_LoginServer_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional uint32 uLoginReason = 3;
  inline bool has_uloginreason() const;
  inline void clear_uloginreason();
  static const int kULoginReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 uloginreason() const;
  inline void set_uloginreason(::google::protobuf::uint32 value);

  // optional uint32 uClientVersion = 4;
  inline bool has_uclientversion() const;
  inline void clear_uclientversion();
  static const int kUClientVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 uclientversion() const;
  inline void set_uclientversion(::google::protobuf::uint32 value);

  // optional string strSessionKey = 5;
  inline bool has_strsessionkey() const;
  inline void clear_strsessionkey();
  static const int kStrSessionKeyFieldNumber = 5;
  inline const ::std::string& strsessionkey() const;
  inline void set_strsessionkey(const ::std::string& value);
  inline void set_strsessionkey(const char* value);
  inline void set_strsessionkey(const char* value, size_t size);
  inline ::std::string* mutable_strsessionkey();
  inline ::std::string* release_strsessionkey();
  inline void set_allocated_strsessionkey(::std::string* strsessionkey);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_uloginreason();
  inline void clear_has_uloginreason();
  inline void set_has_uclientversion();
  inline void clear_has_uclientversion();
  inline void set_has_strsessionkey();
  inline void clear_has_strsessionkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::uint32 uloginreason_;
  ::google::protobuf::uint32 uclientversion_;
  ::std::string* strsessionkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Response : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Response();
  virtual ~Zone_LoginServer_Response();

  Zone_LoginServer_Response(const Zone_LoginServer_Response& from);

  inline Zone_LoginServer_Response& operator=(const Zone_LoginServer_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Response& default_instance();

  void Swap(Zone_LoginServer_Response* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Response& from);
  void MergeFrom(const Zone_LoginServer_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional int32 iZoneID = 3;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iWorldID = 4;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 4;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional .GameLoginInfo stLoginInfo = 5;
  inline bool has_stlogininfo() const;
  inline void clear_stlogininfo();
  static const int kStLoginInfoFieldNumber = 5;
  inline const ::GameLoginInfo& stlogininfo() const;
  inline ::GameLoginInfo* mutable_stlogininfo();
  inline ::GameLoginInfo* release_stlogininfo();
  inline void set_allocated_stlogininfo(::GameLoginInfo* stlogininfo);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_stlogininfo();
  inline void clear_has_stlogininfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 iworldid_;
  ::GameLoginInfo* stlogininfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Logout_Notify : public ::google::protobuf::Message {
 public:
  Zone_Logout_Notify();
  virtual ~Zone_Logout_Notify();

  Zone_Logout_Notify(const Zone_Logout_Notify& from);

  inline Zone_Logout_Notify& operator=(const Zone_Logout_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Logout_Notify& default_instance();

  void Swap(Zone_Logout_Notify* other);

  // implements Message ----------------------------------------------

  Zone_Logout_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Logout_Notify& from);
  void MergeFrom(const Zone_Logout_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // @@protoc_insertion_point(class_scope:Zone_Logout_Notify)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Logout_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetFriendInfo_Request : public ::google::protobuf::Message {
 public:
  Zone_GetFriendInfo_Request();
  virtual ~Zone_GetFriendInfo_Request();

  Zone_GetFriendInfo_Request(const Zone_GetFriendInfo_Request& from);

  inline Zone_GetFriendInfo_Request& operator=(const Zone_GetFriendInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetFriendInfo_Request& default_instance();

  void Swap(Zone_GetFriendInfo_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetFriendInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetFriendInfo_Request& from);
  void MergeFrom(const Zone_GetFriendInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ucReqType = 1;
  inline bool has_ucreqtype() const;
  inline void clear_ucreqtype();
  static const int kUcReqTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ucreqtype() const;
  inline void set_ucreqtype(::google::protobuf::uint32 value);

  // optional uint32 uin = 2;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 2;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 friend_uin = 3;
  inline bool has_friend_uin() const;
  inline void clear_friend_uin();
  static const int kFriendUinFieldNumber = 3;
  inline ::google::protobuf::uint32 friend_uin() const;
  inline void set_friend_uin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetFriendInfo_Request)
 private:
  inline void set_has_ucreqtype();
  inline void clear_has_ucreqtype();
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_friend_uin();
  inline void clear_has_friend_uin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ucreqtype_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 friend_uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetFriendInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetFriendInfo_Response : public ::google::protobuf::Message {
 public:
  Zone_GetFriendInfo_Response();
  virtual ~Zone_GetFriendInfo_Response();

  Zone_GetFriendInfo_Response(const Zone_GetFriendInfo_Response& from);

  inline Zone_GetFriendInfo_Response& operator=(const Zone_GetFriendInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetFriendInfo_Response& default_instance();

  void Swap(Zone_GetFriendInfo_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetFriendInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetFriendInfo_Response& from);
  void MergeFrom(const Zone_GetFriendInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GetFriendInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetFriendInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_OnlineRole_Request : public ::google::protobuf::Message {
 public:
  Zone_OnlineRole_Request();
  virtual ~Zone_OnlineRole_Request();

  Zone_OnlineRole_Request(const Zone_OnlineRole_Request& from);

  inline Zone_OnlineRole_Request& operator=(const Zone_OnlineRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_OnlineRole_Request& default_instance();

  void Swap(Zone_OnlineRole_Request* other);

  // implements Message ----------------------------------------------

  Zone_OnlineRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_OnlineRole_Request& from);
  void MergeFrom(const Zone_OnlineRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iZoneID = 2;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iRoleNum = 3;
  inline bool has_irolenum() const;
  inline void clear_irolenum();
  static const int kIRoleNumFieldNumber = 3;
  inline ::google::protobuf::int32 irolenum() const;
  inline void set_irolenum(::google::protobuf::int32 value);

  // optional string strRecordTime = 4;
  inline bool has_strrecordtime() const;
  inline void clear_strrecordtime();
  static const int kStrRecordTimeFieldNumber = 4;
  inline const ::std::string& strrecordtime() const;
  inline void set_strrecordtime(const ::std::string& value);
  inline void set_strrecordtime(const char* value);
  inline void set_strrecordtime(const char* value, size_t size);
  inline ::std::string* mutable_strrecordtime();
  inline ::std::string* release_strrecordtime();
  inline void set_allocated_strrecordtime(::std::string* strrecordtime);

  // @@protoc_insertion_point(class_scope:Zone_OnlineRole_Request)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_irolenum();
  inline void clear_has_irolenum();
  inline void set_has_strrecordtime();
  inline void clear_has_strrecordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 izoneid_;
  ::std::string* strrecordtime_;
  ::google::protobuf::int32 irolenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_OnlineRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GameMaster_Request : public ::google::protobuf::Message {
 public:
  Zone_GameMaster_Request();
  virtual ~Zone_GameMaster_Request();

  Zone_GameMaster_Request(const Zone_GameMaster_Request& from);

  inline Zone_GameMaster_Request& operator=(const Zone_GameMaster_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GameMaster_Request& default_instance();

  void Swap(Zone_GameMaster_Request* other);

  // implements Message ----------------------------------------------

  Zone_GameMaster_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GameMaster_Request& from);
  void MergeFrom(const Zone_GameMaster_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional string strCommand = 2;
  inline bool has_strcommand() const;
  inline void clear_strcommand();
  static const int kStrCommandFieldNumber = 2;
  inline const ::std::string& strcommand() const;
  inline void set_strcommand(const ::std::string& value);
  inline void set_strcommand(const char* value);
  inline void set_strcommand(const char* value, size_t size);
  inline ::std::string* mutable_strcommand();
  inline ::std::string* release_strcommand();
  inline void set_allocated_strcommand(::std::string* strcommand);

  // @@protoc_insertion_point(class_scope:Zone_GameMaster_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_strcommand();
  inline void clear_has_strcommand();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strcommand_;
  ::google::protobuf::uint32 uin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GameMaster_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GameMaster_Response : public ::google::protobuf::Message {
 public:
  Zone_GameMaster_Response();
  virtual ~Zone_GameMaster_Response();

  Zone_GameMaster_Response(const Zone_GameMaster_Response& from);

  inline Zone_GameMaster_Response& operator=(const Zone_GameMaster_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GameMaster_Response& default_instance();

  void Swap(Zone_GameMaster_Response* other);

  // implements Message ----------------------------------------------

  Zone_GameMaster_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GameMaster_Response& from);
  void MergeFrom(const Zone_GameMaster_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_GameMaster_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GameMaster_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_LoginServer_Notify : public ::google::protobuf::Message {
 public:
  Zone_LoginServer_Notify();
  virtual ~Zone_LoginServer_Notify();

  Zone_LoginServer_Notify(const Zone_LoginServer_Notify& from);

  inline Zone_LoginServer_Notify& operator=(const Zone_LoginServer_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_LoginServer_Notify& default_instance();

  void Swap(Zone_LoginServer_Notify* other);

  // implements Message ----------------------------------------------

  Zone_LoginServer_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_LoginServer_Notify& from);
  void MergeFrom(const Zone_LoginServer_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iZoneID = 4;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_LoginServer_Notify)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_LoginServer_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepOpera_Request : public ::google::protobuf::Message {
 public:
  Zone_RepOpera_Request();
  virtual ~Zone_RepOpera_Request();

  Zone_RepOpera_Request(const Zone_RepOpera_Request& from);

  inline Zone_RepOpera_Request& operator=(const Zone_RepOpera_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepOpera_Request& default_instance();

  void Swap(Zone_RepOpera_Request* other);

  // implements Message ----------------------------------------------

  Zone_RepOpera_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepOpera_Request& from);
  void MergeFrom(const Zone_RepOpera_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReqOperaType eType = 1 [default = REQ_OPERA_TYPE_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 1;
  inline ::ReqOperaType etype() const;
  inline void set_etype(::ReqOperaType value);

  // optional int32 iSlotIndex = 2;
  inline bool has_islotindex() const;
  inline void clear_islotindex();
  static const int kISlotIndexFieldNumber = 2;
  inline ::google::protobuf::int32 islotindex() const;
  inline void set_islotindex(::google::protobuf::int32 value);

  // optional int32 iItemNum = 3;
  inline bool has_iitemnum() const;
  inline void clear_iitemnum();
  static const int kIItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 iitemnum() const;
  inline void set_iitemnum(::google::protobuf::int32 value);

  // optional int32 iOtherSlotIndex = 4;
  inline bool has_iotherslotindex() const;
  inline void clear_iotherslotindex();
  static const int kIOtherSlotIndexFieldNumber = 4;
  inline ::google::protobuf::int32 iotherslotindex() const;
  inline void set_iotherslotindex(::google::protobuf::int32 value);

  // optional int32 iFightUnitID = 5;
  inline bool has_ifightunitid() const;
  inline void clear_ifightunitid();
  static const int kIFightUnitIDFieldNumber = 5;
  inline ::google::protobuf::int32 ifightunitid() const;
  inline void set_ifightunitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_RepOpera_Request)
 private:
  inline void set_has_etype();
  inline void clear_has_etype();
  inline void set_has_islotindex();
  inline void clear_has_islotindex();
  inline void set_has_iitemnum();
  inline void clear_has_iitemnum();
  inline void set_has_iotherslotindex();
  inline void clear_has_iotherslotindex();
  inline void set_has_ifightunitid();
  inline void clear_has_ifightunitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int etype_;
  ::google::protobuf::int32 islotindex_;
  ::google::protobuf::int32 iitemnum_;
  ::google::protobuf::int32 iotherslotindex_;
  ::google::protobuf::int32 ifightunitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepOpera_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepOpera_Response : public ::google::protobuf::Message {
 public:
  Zone_RepOpera_Response();
  virtual ~Zone_RepOpera_Response();

  Zone_RepOpera_Response(const Zone_RepOpera_Response& from);

  inline Zone_RepOpera_Response& operator=(const Zone_RepOpera_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepOpera_Response& default_instance();

  void Swap(Zone_RepOpera_Response* other);

  // implements Message ----------------------------------------------

  Zone_RepOpera_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepOpera_Response& from);
  void MergeFrom(const Zone_RepOpera_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iSlotIndex = 2;
  inline bool has_islotindex() const;
  inline void clear_islotindex();
  static const int kISlotIndexFieldNumber = 2;
  inline ::google::protobuf::int32 islotindex() const;
  inline void set_islotindex(::google::protobuf::int32 value);

  // optional .OneSlotInfo stSlot = 3;
  inline bool has_stslot() const;
  inline void clear_stslot();
  static const int kStSlotFieldNumber = 3;
  inline const ::OneSlotInfo& stslot() const;
  inline ::OneSlotInfo* mutable_stslot();
  inline ::OneSlotInfo* release_stslot();
  inline void set_allocated_stslot(::OneSlotInfo* stslot);

  // optional int32 iOtherSlotIndex = 4;
  inline bool has_iotherslotindex() const;
  inline void clear_iotherslotindex();
  static const int kIOtherSlotIndexFieldNumber = 4;
  inline ::google::protobuf::int32 iotherslotindex() const;
  inline void set_iotherslotindex(::google::protobuf::int32 value);

  // optional .OneSlotInfo stOtherSlot = 5;
  inline bool has_stotherslot() const;
  inline void clear_stotherslot();
  static const int kStOtherSlotFieldNumber = 5;
  inline const ::OneSlotInfo& stotherslot() const;
  inline ::OneSlotInfo* mutable_stotherslot();
  inline ::OneSlotInfo* release_stotherslot();
  inline void set_allocated_stotherslot(::OneSlotInfo* stotherslot);

  // optional .ReqOperaType eType = 6 [default = REQ_OPERA_TYPE_INVALID];
  inline bool has_etype() const;
  inline void clear_etype();
  static const int kETypeFieldNumber = 6;
  inline ::ReqOperaType etype() const;
  inline void set_etype(::ReqOperaType value);

  // @@protoc_insertion_point(class_scope:Zone_RepOpera_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_islotindex();
  inline void clear_has_islotindex();
  inline void set_has_stslot();
  inline void clear_has_stslot();
  inline void set_has_iotherslotindex();
  inline void clear_has_iotherslotindex();
  inline void set_has_stotherslot();
  inline void clear_has_stotherslot();
  inline void set_has_etype();
  inline void clear_has_etype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 islotindex_;
  ::OneSlotInfo* stslot_;
  ::OneSlotInfo* stotherslot_;
  ::google::protobuf::int32 iotherslotindex_;
  int etype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepOpera_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRepInfo_Request : public ::google::protobuf::Message {
 public:
  Zone_GetRepInfo_Request();
  virtual ~Zone_GetRepInfo_Request();

  Zone_GetRepInfo_Request(const Zone_GetRepInfo_Request& from);

  inline Zone_GetRepInfo_Request& operator=(const Zone_GetRepInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRepInfo_Request& default_instance();

  void Swap(Zone_GetRepInfo_Request* other);

  // implements Message ----------------------------------------------

  Zone_GetRepInfo_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRepInfo_Request& from);
  void MergeFrom(const Zone_GetRepInfo_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Zone_GetRepInfo_Request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRepInfo_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_GetRepInfo_Response : public ::google::protobuf::Message {
 public:
  Zone_GetRepInfo_Response();
  virtual ~Zone_GetRepInfo_Response();

  Zone_GetRepInfo_Response(const Zone_GetRepInfo_Response& from);

  inline Zone_GetRepInfo_Response& operator=(const Zone_GetRepInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_GetRepInfo_Response& default_instance();

  void Swap(Zone_GetRepInfo_Response* other);

  // implements Message ----------------------------------------------

  Zone_GetRepInfo_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_GetRepInfo_Response& from);
  void MergeFrom(const Zone_GetRepInfo_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .ITEMDBINFO stItems = 2;
  inline bool has_stitems() const;
  inline void clear_stitems();
  static const int kStItemsFieldNumber = 2;
  inline const ::ITEMDBINFO& stitems() const;
  inline ::ITEMDBINFO* mutable_stitems();
  inline ::ITEMDBINFO* release_stitems();
  inline void set_allocated_stitems(::ITEMDBINFO* stitems);

  // @@protoc_insertion_point(class_scope:Zone_GetRepInfo_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stitems();
  inline void clear_has_stitems();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ITEMDBINFO* stitems_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_GetRepInfo_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_WearEquip_Request : public ::google::protobuf::Message {
 public:
  Zone_WearEquip_Request();
  virtual ~Zone_WearEquip_Request();

  Zone_WearEquip_Request(const Zone_WearEquip_Request& from);

  inline Zone_WearEquip_Request& operator=(const Zone_WearEquip_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_WearEquip_Request& default_instance();

  void Swap(Zone_WearEquip_Request* other);

  // implements Message ----------------------------------------------

  Zone_WearEquip_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_WearEquip_Request& from);
  void MergeFrom(const Zone_WearEquip_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bIsWear = 1;
  inline bool has_biswear() const;
  inline void clear_biswear();
  static const int kBIsWearFieldNumber = 1;
  inline bool biswear() const;
  inline void set_biswear(bool value);

  // optional int32 iUnitIndex = 2;
  inline bool has_iunitindex() const;
  inline void clear_iunitindex();
  static const int kIUnitIndexFieldNumber = 2;
  inline ::google::protobuf::int32 iunitindex() const;
  inline void set_iunitindex(::google::protobuf::int32 value);

  // optional int32 iSlotIndex = 3;
  inline bool has_islotindex() const;
  inline void clear_islotindex();
  static const int kISlotIndexFieldNumber = 3;
  inline ::google::protobuf::int32 islotindex() const;
  inline void set_islotindex(::google::protobuf::int32 value);

  // optional int32 iEquipSubType = 4;
  inline bool has_iequipsubtype() const;
  inline void clear_iequipsubtype();
  static const int kIEquipSubTypeFieldNumber = 4;
  inline ::google::protobuf::int32 iequipsubtype() const;
  inline void set_iequipsubtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_WearEquip_Request)
 private:
  inline void set_has_biswear();
  inline void clear_has_biswear();
  inline void set_has_iunitindex();
  inline void clear_has_iunitindex();
  inline void set_has_islotindex();
  inline void clear_has_islotindex();
  inline void set_has_iequipsubtype();
  inline void clear_has_iequipsubtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool biswear_;
  ::google::protobuf::int32 iunitindex_;
  ::google::protobuf::int32 islotindex_;
  ::google::protobuf::int32 iequipsubtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_WearEquip_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_WearEquip_Response : public ::google::protobuf::Message {
 public:
  Zone_WearEquip_Response();
  virtual ~Zone_WearEquip_Response();

  Zone_WearEquip_Response(const Zone_WearEquip_Response& from);

  inline Zone_WearEquip_Response& operator=(const Zone_WearEquip_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_WearEquip_Response& default_instance();

  void Swap(Zone_WearEquip_Response* other);

  // implements Message ----------------------------------------------

  Zone_WearEquip_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_WearEquip_Response& from);
  void MergeFrom(const Zone_WearEquip_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional bool bIsWear = 2;
  inline bool has_biswear() const;
  inline void clear_biswear();
  static const int kBIsWearFieldNumber = 2;
  inline bool biswear() const;
  inline void set_biswear(bool value);

  // optional int32 iUnitIndex = 3;
  inline bool has_iunitindex() const;
  inline void clear_iunitindex();
  static const int kIUnitIndexFieldNumber = 3;
  inline ::google::protobuf::int32 iunitindex() const;
  inline void set_iunitindex(::google::protobuf::int32 value);

  // optional int32 iEquipSubType = 4;
  inline bool has_iequipsubtype() const;
  inline void clear_iequipsubtype();
  static const int kIEquipSubTypeFieldNumber = 4;
  inline ::google::protobuf::int32 iequipsubtype() const;
  inline void set_iequipsubtype(::google::protobuf::int32 value);

  // optional .OneSlotInfo stSlotInfo = 5;
  inline bool has_stslotinfo() const;
  inline void clear_stslotinfo();
  static const int kStSlotInfoFieldNumber = 5;
  inline const ::OneSlotInfo& stslotinfo() const;
  inline ::OneSlotInfo* mutable_stslotinfo();
  inline ::OneSlotInfo* release_stslotinfo();
  inline void set_allocated_stslotinfo(::OneSlotInfo* stslotinfo);

  // @@protoc_insertion_point(class_scope:Zone_WearEquip_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_biswear();
  inline void clear_has_biswear();
  inline void set_has_iunitindex();
  inline void clear_has_iunitindex();
  inline void set_has_iequipsubtype();
  inline void clear_has_iequipsubtype();
  inline void set_has_stslotinfo();
  inline void clear_has_stslotinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  bool biswear_;
  ::google::protobuf::int32 iunitindex_;
  ::google::protobuf::int32 iequipsubtype_;
  ::OneSlotInfo* stslotinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_WearEquip_Response* default_instance_;
};
// -------------------------------------------------------------------

class OneRepSlot : public ::google::protobuf::Message {
 public:
  OneRepSlot();
  virtual ~OneRepSlot();

  OneRepSlot(const OneRepSlot& from);

  inline OneRepSlot& operator=(const OneRepSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneRepSlot& default_instance();

  void Swap(OneRepSlot* other);

  // implements Message ----------------------------------------------

  OneRepSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneRepSlot& from);
  void MergeFrom(const OneRepSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iRepSlot = 1;
  inline bool has_irepslot() const;
  inline void clear_irepslot();
  static const int kIRepSlotFieldNumber = 1;
  inline ::google::protobuf::int32 irepslot() const;
  inline void set_irepslot(::google::protobuf::int32 value);

  // optional int32 iChangeChannel = 3;
  inline bool has_ichangechannel() const;
  inline void clear_ichangechannel();
  static const int kIChangeChannelFieldNumber = 3;
  inline ::google::protobuf::int32 ichangechannel() const;
  inline void set_ichangechannel(::google::protobuf::int32 value);

  // optional .OneSlotInfo stSlotInfo = 2;
  inline bool has_stslotinfo() const;
  inline void clear_stslotinfo();
  static const int kStSlotInfoFieldNumber = 2;
  inline const ::OneSlotInfo& stslotinfo() const;
  inline ::OneSlotInfo* mutable_stslotinfo();
  inline ::OneSlotInfo* release_stslotinfo();
  inline void set_allocated_stslotinfo(::OneSlotInfo* stslotinfo);

  // @@protoc_insertion_point(class_scope:OneRepSlot)
 private:
  inline void set_has_irepslot();
  inline void clear_has_irepslot();
  inline void set_has_ichangechannel();
  inline void clear_has_ichangechannel();
  inline void set_has_stslotinfo();
  inline void clear_has_stslotinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irepslot_;
  ::google::protobuf::int32 ichangechannel_;
  ::OneSlotInfo* stslotinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static OneRepSlot* default_instance_;
};
// -------------------------------------------------------------------

class Zone_RepChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_RepChange_Notify();
  virtual ~Zone_RepChange_Notify();

  Zone_RepChange_Notify(const Zone_RepChange_Notify& from);

  inline Zone_RepChange_Notify& operator=(const Zone_RepChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_RepChange_Notify& default_instance();

  void Swap(Zone_RepChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_RepChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_RepChange_Notify& from);
  void MergeFrom(const Zone_RepChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OneRepSlot stItems = 1;
  inline int stitems_size() const;
  inline void clear_stitems();
  static const int kStItemsFieldNumber = 1;
  inline const ::OneRepSlot& stitems(int index) const;
  inline ::OneRepSlot* mutable_stitems(int index);
  inline ::OneRepSlot* add_stitems();
  inline const ::google::protobuf::RepeatedPtrField< ::OneRepSlot >&
      stitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::OneRepSlot >*
      mutable_stitems();

  // @@protoc_insertion_point(class_scope:Zone_RepChange_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::OneRepSlot > stitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_RepChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class SellItemInfo : public ::google::protobuf::Message {
 public:
  SellItemInfo();
  virtual ~SellItemInfo();

  SellItemInfo(const SellItemInfo& from);

  inline SellItemInfo& operator=(const SellItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellItemInfo& default_instance();

  void Swap(SellItemInfo* other);

  // implements Message ----------------------------------------------

  SellItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellItemInfo& from);
  void MergeFrom(const SellItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iItemSlot = 1;
  inline bool has_iitemslot() const;
  inline void clear_iitemslot();
  static const int kIItemSlotFieldNumber = 1;
  inline ::google::protobuf::int32 iitemslot() const;
  inline void set_iitemslot(::google::protobuf::int32 value);

  // optional int32 iSellNum = 2;
  inline bool has_isellnum() const;
  inline void clear_isellnum();
  static const int kISellNumFieldNumber = 2;
  inline ::google::protobuf::int32 isellnum() const;
  inline void set_isellnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SellItemInfo)
 private:
  inline void set_has_iitemslot();
  inline void clear_has_iitemslot();
  inline void set_has_isellnum();
  inline void clear_has_isellnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemslot_;
  ::google::protobuf::int32 isellnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static SellItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SellItem_Request : public ::google::protobuf::Message {
 public:
  Zone_SellItem_Request();
  virtual ~Zone_SellItem_Request();

  Zone_SellItem_Request(const Zone_SellItem_Request& from);

  inline Zone_SellItem_Request& operator=(const Zone_SellItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SellItem_Request& default_instance();

  void Swap(Zone_SellItem_Request* other);

  // implements Message ----------------------------------------------

  Zone_SellItem_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SellItem_Request& from);
  void MergeFrom(const Zone_SellItem_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iShopID = 1;
  inline bool has_ishopid() const;
  inline void clear_ishopid();
  static const int kIShopIDFieldNumber = 1;
  inline ::google::protobuf::int32 ishopid() const;
  inline void set_ishopid(::google::protobuf::int32 value);

  // repeated .SellItemInfo stItems = 2;
  inline int stitems_size() const;
  inline void clear_stitems();
  static const int kStItemsFieldNumber = 2;
  inline const ::SellItemInfo& stitems(int index) const;
  inline ::SellItemInfo* mutable_stitems(int index);
  inline ::SellItemInfo* add_stitems();
  inline const ::google::protobuf::RepeatedPtrField< ::SellItemInfo >&
      stitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::SellItemInfo >*
      mutable_stitems();

  // @@protoc_insertion_point(class_scope:Zone_SellItem_Request)
 private:
  inline void set_has_ishopid();
  inline void clear_has_ishopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SellItemInfo > stitems_;
  ::google::protobuf::int32 ishopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SellItem_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_SellItem_Response : public ::google::protobuf::Message {
 public:
  Zone_SellItem_Response();
  virtual ~Zone_SellItem_Response();

  Zone_SellItem_Response(const Zone_SellItem_Response& from);

  inline Zone_SellItem_Response& operator=(const Zone_SellItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_SellItem_Response& default_instance();

  void Swap(Zone_SellItem_Response* other);

  // implements Message ----------------------------------------------

  Zone_SellItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_SellItem_Response& from);
  void MergeFrom(const Zone_SellItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_SellItem_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_SellItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class UserResourceChange : public ::google::protobuf::Message {
 public:
  UserResourceChange();
  virtual ~UserResourceChange();

  UserResourceChange(const UserResourceChange& from);

  inline UserResourceChange& operator=(const UserResourceChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserResourceChange& default_instance();

  void Swap(UserResourceChange* other);

  // implements Message ----------------------------------------------

  UserResourceChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserResourceChange& from);
  void MergeFrom(const UserResourceChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResType = 1;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 1;
  inline ::google::protobuf::int32 irestype() const;
  inline void set_irestype(::google::protobuf::int32 value);

  // optional int32 iNewResNum = 2;
  inline bool has_inewresnum() const;
  inline void clear_inewresnum();
  static const int kINewResNumFieldNumber = 2;
  inline ::google::protobuf::int32 inewresnum() const;
  inline void set_inewresnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserResourceChange)
 private:
  inline void set_has_irestype();
  inline void clear_has_irestype();
  inline void set_has_inewresnum();
  inline void clear_has_inewresnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irestype_;
  ::google::protobuf::int32 inewresnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static UserResourceChange* default_instance_;
};
// -------------------------------------------------------------------

class Zone_ResourceChange_Notify : public ::google::protobuf::Message {
 public:
  Zone_ResourceChange_Notify();
  virtual ~Zone_ResourceChange_Notify();

  Zone_ResourceChange_Notify(const Zone_ResourceChange_Notify& from);

  inline Zone_ResourceChange_Notify& operator=(const Zone_ResourceChange_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_ResourceChange_Notify& default_instance();

  void Swap(Zone_ResourceChange_Notify* other);

  // implements Message ----------------------------------------------

  Zone_ResourceChange_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_ResourceChange_Notify& from);
  void MergeFrom(const Zone_ResourceChange_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserResourceChange stChangeInfos = 1;
  inline int stchangeinfos_size() const;
  inline void clear_stchangeinfos();
  static const int kStChangeInfosFieldNumber = 1;
  inline const ::UserResourceChange& stchangeinfos(int index) const;
  inline ::UserResourceChange* mutable_stchangeinfos(int index);
  inline ::UserResourceChange* add_stchangeinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::UserResourceChange >&
      stchangeinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserResourceChange >*
      mutable_stchangeinfos();

  // @@protoc_insertion_point(class_scope:Zone_ResourceChange_Notify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UserResourceChange > stchangeinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_ResourceChange_Notify* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Chat_Request : public ::google::protobuf::Message {
 public:
  Zone_Chat_Request();
  virtual ~Zone_Chat_Request();

  Zone_Chat_Request(const Zone_Chat_Request& from);

  inline Zone_Chat_Request& operator=(const Zone_Chat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Chat_Request& default_instance();

  void Swap(Zone_Chat_Request* other);

  // implements Message ----------------------------------------------

  Zone_Chat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Chat_Request& from);
  void MergeFrom(const Zone_Chat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
  inline bool has_ichannel() const;
  inline void clear_ichannel();
  static const int kIChannelFieldNumber = 1;
  inline ::ChatChannelType ichannel() const;
  inline void set_ichannel(::ChatChannelType value);

  // optional .RoleID stTargetRoleID = 2;
  inline bool has_sttargetroleid() const;
  inline void clear_sttargetroleid();
  static const int kStTargetRoleIDFieldNumber = 2;
  inline const ::RoleID& sttargetroleid() const;
  inline ::RoleID* mutable_sttargetroleid();
  inline ::RoleID* release_sttargetroleid();
  inline void set_allocated_sttargetroleid(::RoleID* sttargetroleid);

  // optional string strMessage = 3;
  inline bool has_strmessage() const;
  inline void clear_strmessage();
  static const int kStrMessageFieldNumber = 3;
  inline const ::std::string& strmessage() const;
  inline void set_strmessage(const ::std::string& value);
  inline void set_strmessage(const char* value);
  inline void set_strmessage(const char* value, size_t size);
  inline ::std::string* mutable_strmessage();
  inline ::std::string* release_strmessage();
  inline void set_allocated_strmessage(::std::string* strmessage);

  // @@protoc_insertion_point(class_scope:Zone_Chat_Request)
 private:
  inline void set_has_ichannel();
  inline void clear_has_ichannel();
  inline void set_has_sttargetroleid();
  inline void clear_has_sttargetroleid();
  inline void set_has_strmessage();
  inline void clear_has_strmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* sttargetroleid_;
  ::std::string* strmessage_;
  int ichannel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Chat_Request* default_instance_;
};
// -------------------------------------------------------------------

class Zone_Chat_Response : public ::google::protobuf::Message {
 public:
  Zone_Chat_Response();
  virtual ~Zone_Chat_Response();

  Zone_Chat_Response(const Zone_Chat_Response& from);

  inline Zone_Chat_Response& operator=(const Zone_Chat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_Chat_Response& default_instance();

  void Swap(Zone_Chat_Response* other);

  // implements Message ----------------------------------------------

  Zone_Chat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_Chat_Response& from);
  void MergeFrom(const Zone_Chat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Zone_Chat_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_Chat_Response* default_instance_;
};
// -------------------------------------------------------------------

class Zone_FightAttr_Notify : public ::google::protobuf::Message {
 public:
  Zone_FightAttr_Notify();
  virtual ~Zone_FightAttr_Notify();

  Zone_FightAttr_Notify(const Zone_FightAttr_Notify& from);

  inline Zone_FightAttr_Notify& operator=(const Zone_FightAttr_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Zone_FightAttr_Notify& default_instance();

  void Swap(Zone_FightAttr_Notify* other);

  // implements Message ----------------------------------------------

  Zone_FightAttr_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Zone_FightAttr_Notify& from);
  void MergeFrom(const Zone_FightAttr_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iUnitConfigID = 1;
  inline bool has_iunitconfigid() const;
  inline void clear_iunitconfigid();
  static const int kIUnitConfigIDFieldNumber = 1;
  inline ::google::protobuf::int32 iunitconfigid() const;
  inline void set_iunitconfigid(::google::protobuf::int32 value);

  // repeated int32 iFightUnitAttr = 2;
  inline int ifightunitattr_size() const;
  inline void clear_ifightunitattr();
  static const int kIFightUnitAttrFieldNumber = 2;
  inline ::google::protobuf::int32 ifightunitattr(int index) const;
  inline void set_ifightunitattr(int index, ::google::protobuf::int32 value);
  inline void add_ifightunitattr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ifightunitattr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ifightunitattr();

  // @@protoc_insertion_point(class_scope:Zone_FightAttr_Notify)
 private:
  inline void set_has_iunitconfigid();
  inline void clear_has_iunitconfigid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ifightunitattr_;
  ::google::protobuf::int32 iunitconfigid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eZone_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eZone_2eproto();

  void InitAsDefaultInstance();
  static Zone_FightAttr_Notify* default_instance_;
};
// ===================================================================


// ===================================================================

// GameLoginInfo

// optional .BASEDBINFO stBaseInfo = 1;
inline bool GameLoginInfo::has_stbaseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameLoginInfo::set_has_stbaseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameLoginInfo::clear_has_stbaseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameLoginInfo::clear_stbaseinfo() {
  if (stbaseinfo_ != NULL) stbaseinfo_->::BASEDBINFO::Clear();
  clear_has_stbaseinfo();
}
inline const ::BASEDBINFO& GameLoginInfo::stbaseinfo() const {
  return stbaseinfo_ != NULL ? *stbaseinfo_ : *default_instance_->stbaseinfo_;
}
inline ::BASEDBINFO* GameLoginInfo::mutable_stbaseinfo() {
  set_has_stbaseinfo();
  if (stbaseinfo_ == NULL) stbaseinfo_ = new ::BASEDBINFO;
  return stbaseinfo_;
}
inline ::BASEDBINFO* GameLoginInfo::release_stbaseinfo() {
  clear_has_stbaseinfo();
  ::BASEDBINFO* temp = stbaseinfo_;
  stbaseinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stbaseinfo(::BASEDBINFO* stbaseinfo) {
  delete stbaseinfo_;
  stbaseinfo_ = stbaseinfo;
  if (stbaseinfo) {
    set_has_stbaseinfo();
  } else {
    clear_has_stbaseinfo();
  }
}

// optional .QUESTDBINFO stQuestInfo = 2;
inline bool GameLoginInfo::has_stquestinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameLoginInfo::set_has_stquestinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameLoginInfo::clear_has_stquestinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameLoginInfo::clear_stquestinfo() {
  if (stquestinfo_ != NULL) stquestinfo_->::QUESTDBINFO::Clear();
  clear_has_stquestinfo();
}
inline const ::QUESTDBINFO& GameLoginInfo::stquestinfo() const {
  return stquestinfo_ != NULL ? *stquestinfo_ : *default_instance_->stquestinfo_;
}
inline ::QUESTDBINFO* GameLoginInfo::mutable_stquestinfo() {
  set_has_stquestinfo();
  if (stquestinfo_ == NULL) stquestinfo_ = new ::QUESTDBINFO;
  return stquestinfo_;
}
inline ::QUESTDBINFO* GameLoginInfo::release_stquestinfo() {
  clear_has_stquestinfo();
  ::QUESTDBINFO* temp = stquestinfo_;
  stquestinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stquestinfo(::QUESTDBINFO* stquestinfo) {
  delete stquestinfo_;
  stquestinfo_ = stquestinfo;
  if (stquestinfo) {
    set_has_stquestinfo();
  } else {
    clear_has_stquestinfo();
  }
}

// optional .ITEMDBINFO stItemInfo = 3;
inline bool GameLoginInfo::has_stiteminfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameLoginInfo::set_has_stiteminfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameLoginInfo::clear_has_stiteminfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameLoginInfo::clear_stiteminfo() {
  if (stiteminfo_ != NULL) stiteminfo_->::ITEMDBINFO::Clear();
  clear_has_stiteminfo();
}
inline const ::ITEMDBINFO& GameLoginInfo::stiteminfo() const {
  return stiteminfo_ != NULL ? *stiteminfo_ : *default_instance_->stiteminfo_;
}
inline ::ITEMDBINFO* GameLoginInfo::mutable_stiteminfo() {
  set_has_stiteminfo();
  if (stiteminfo_ == NULL) stiteminfo_ = new ::ITEMDBINFO;
  return stiteminfo_;
}
inline ::ITEMDBINFO* GameLoginInfo::release_stiteminfo() {
  clear_has_stiteminfo();
  ::ITEMDBINFO* temp = stiteminfo_;
  stiteminfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stiteminfo(::ITEMDBINFO* stiteminfo) {
  delete stiteminfo_;
  stiteminfo_ = stiteminfo;
  if (stiteminfo) {
    set_has_stiteminfo();
  } else {
    clear_has_stiteminfo();
  }
}

// optional .FIGHTDBINFO stFightInfo = 5;
inline bool GameLoginInfo::has_stfightinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameLoginInfo::set_has_stfightinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameLoginInfo::clear_has_stfightinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameLoginInfo::clear_stfightinfo() {
  if (stfightinfo_ != NULL) stfightinfo_->::FIGHTDBINFO::Clear();
  clear_has_stfightinfo();
}
inline const ::FIGHTDBINFO& GameLoginInfo::stfightinfo() const {
  return stfightinfo_ != NULL ? *stfightinfo_ : *default_instance_->stfightinfo_;
}
inline ::FIGHTDBINFO* GameLoginInfo::mutable_stfightinfo() {
  set_has_stfightinfo();
  if (stfightinfo_ == NULL) stfightinfo_ = new ::FIGHTDBINFO;
  return stfightinfo_;
}
inline ::FIGHTDBINFO* GameLoginInfo::release_stfightinfo() {
  clear_has_stfightinfo();
  ::FIGHTDBINFO* temp = stfightinfo_;
  stfightinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stfightinfo(::FIGHTDBINFO* stfightinfo) {
  delete stfightinfo_;
  stfightinfo_ = stfightinfo;
  if (stfightinfo) {
    set_has_stfightinfo();
  } else {
    clear_has_stfightinfo();
  }
}

// optional .FRIENDDBINFO stFriendInfo = 6;
inline bool GameLoginInfo::has_stfriendinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameLoginInfo::set_has_stfriendinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameLoginInfo::clear_has_stfriendinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameLoginInfo::clear_stfriendinfo() {
  if (stfriendinfo_ != NULL) stfriendinfo_->::FRIENDDBINFO::Clear();
  clear_has_stfriendinfo();
}
inline const ::FRIENDDBINFO& GameLoginInfo::stfriendinfo() const {
  return stfriendinfo_ != NULL ? *stfriendinfo_ : *default_instance_->stfriendinfo_;
}
inline ::FRIENDDBINFO* GameLoginInfo::mutable_stfriendinfo() {
  set_has_stfriendinfo();
  if (stfriendinfo_ == NULL) stfriendinfo_ = new ::FRIENDDBINFO;
  return stfriendinfo_;
}
inline ::FRIENDDBINFO* GameLoginInfo::release_stfriendinfo() {
  clear_has_stfriendinfo();
  ::FRIENDDBINFO* temp = stfriendinfo_;
  stfriendinfo_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_stfriendinfo(::FRIENDDBINFO* stfriendinfo) {
  delete stfriendinfo_;
  stfriendinfo_ = stfriendinfo;
  if (stfriendinfo) {
    set_has_stfriendinfo();
  } else {
    clear_has_stfriendinfo();
  }
}

// optional .RESERVED1DBINFO stReserved1 = 7;
inline bool GameLoginInfo::has_streserved1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameLoginInfo::set_has_streserved1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameLoginInfo::clear_has_streserved1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameLoginInfo::clear_streserved1() {
  if (streserved1_ != NULL) streserved1_->::RESERVED1DBINFO::Clear();
  clear_has_streserved1();
}
inline const ::RESERVED1DBINFO& GameLoginInfo::streserved1() const {
  return streserved1_ != NULL ? *streserved1_ : *default_instance_->streserved1_;
}
inline ::RESERVED1DBINFO* GameLoginInfo::mutable_streserved1() {
  set_has_streserved1();
  if (streserved1_ == NULL) streserved1_ = new ::RESERVED1DBINFO;
  return streserved1_;
}
inline ::RESERVED1DBINFO* GameLoginInfo::release_streserved1() {
  clear_has_streserved1();
  ::RESERVED1DBINFO* temp = streserved1_;
  streserved1_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_streserved1(::RESERVED1DBINFO* streserved1) {
  delete streserved1_;
  streserved1_ = streserved1;
  if (streserved1) {
    set_has_streserved1();
  } else {
    clear_has_streserved1();
  }
}

// optional .RESERVED2DBINFO stReserved2 = 8;
inline bool GameLoginInfo::has_streserved2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameLoginInfo::set_has_streserved2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameLoginInfo::clear_has_streserved2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameLoginInfo::clear_streserved2() {
  if (streserved2_ != NULL) streserved2_->::RESERVED2DBINFO::Clear();
  clear_has_streserved2();
}
inline const ::RESERVED2DBINFO& GameLoginInfo::streserved2() const {
  return streserved2_ != NULL ? *streserved2_ : *default_instance_->streserved2_;
}
inline ::RESERVED2DBINFO* GameLoginInfo::mutable_streserved2() {
  set_has_streserved2();
  if (streserved2_ == NULL) streserved2_ = new ::RESERVED2DBINFO;
  return streserved2_;
}
inline ::RESERVED2DBINFO* GameLoginInfo::release_streserved2() {
  clear_has_streserved2();
  ::RESERVED2DBINFO* temp = streserved2_;
  streserved2_ = NULL;
  return temp;
}
inline void GameLoginInfo::set_allocated_streserved2(::RESERVED2DBINFO* streserved2) {
  delete streserved2_;
  streserved2_ = streserved2;
  if (streserved2) {
    set_has_streserved2();
  } else {
    clear_has_streserved2();
  }
}

// -------------------------------------------------------------------

// Zone_LoginServer_Request

// optional .RoleID stRoleID = 1;
inline bool Zone_LoginServer_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_LoginServer_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_LoginServer_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_LoginServer_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional uint32 uLoginReason = 3;
inline bool Zone_LoginServer_Request::has_uloginreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Request::set_has_uloginreason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Request::clear_has_uloginreason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Request::clear_uloginreason() {
  uloginreason_ = 0u;
  clear_has_uloginreason();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Request::uloginreason() const {
  return uloginreason_;
}
inline void Zone_LoginServer_Request::set_uloginreason(::google::protobuf::uint32 value) {
  set_has_uloginreason();
  uloginreason_ = value;
}

// optional uint32 uClientVersion = 4;
inline bool Zone_LoginServer_Request::has_uclientversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LoginServer_Request::set_has_uclientversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LoginServer_Request::clear_has_uclientversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LoginServer_Request::clear_uclientversion() {
  uclientversion_ = 0u;
  clear_has_uclientversion();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Request::uclientversion() const {
  return uclientversion_;
}
inline void Zone_LoginServer_Request::set_uclientversion(::google::protobuf::uint32 value) {
  set_has_uclientversion();
  uclientversion_ = value;
}

// optional string strSessionKey = 5;
inline bool Zone_LoginServer_Request::has_strsessionkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LoginServer_Request::set_has_strsessionkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LoginServer_Request::clear_has_strsessionkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LoginServer_Request::clear_strsessionkey() {
  if (strsessionkey_ != &::google::protobuf::internal::kEmptyString) {
    strsessionkey_->clear();
  }
  clear_has_strsessionkey();
}
inline const ::std::string& Zone_LoginServer_Request::strsessionkey() const {
  return *strsessionkey_;
}
inline void Zone_LoginServer_Request::set_strsessionkey(const ::std::string& value) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(value);
}
inline void Zone_LoginServer_Request::set_strsessionkey(const char* value) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(value);
}
inline void Zone_LoginServer_Request::set_strsessionkey(const char* value, size_t size) {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  strsessionkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_LoginServer_Request::mutable_strsessionkey() {
  set_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    strsessionkey_ = new ::std::string;
  }
  return strsessionkey_;
}
inline ::std::string* Zone_LoginServer_Request::release_strsessionkey() {
  clear_has_strsessionkey();
  if (strsessionkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strsessionkey_;
    strsessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_LoginServer_Request::set_allocated_strsessionkey(::std::string* strsessionkey) {
  if (strsessionkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strsessionkey_;
  }
  if (strsessionkey) {
    set_has_strsessionkey();
    strsessionkey_ = strsessionkey;
  } else {
    clear_has_strsessionkey();
    strsessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_LoginServer_Response

// optional int32 iResult = 1;
inline bool Zone_LoginServer_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::iresult() const {
  return iresult_;
}
inline void Zone_LoginServer_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional uint32 uin = 2;
inline bool Zone_LoginServer_Response::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Response::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Response::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Response::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_LoginServer_Response::uin() const {
  return uin_;
}
inline void Zone_LoginServer_Response::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional int32 iZoneID = 3;
inline bool Zone_LoginServer_Response::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_LoginServer_Response::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_LoginServer_Response::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_LoginServer_Response::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::izoneid() const {
  return izoneid_;
}
inline void Zone_LoginServer_Response::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iWorldID = 4;
inline bool Zone_LoginServer_Response::has_iworldid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_LoginServer_Response::set_has_iworldid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_LoginServer_Response::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_LoginServer_Response::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Response::iworldid() const {
  return iworldid_;
}
inline void Zone_LoginServer_Response::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional .GameLoginInfo stLoginInfo = 5;
inline bool Zone_LoginServer_Response::has_stlogininfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_LoginServer_Response::set_has_stlogininfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_LoginServer_Response::clear_has_stlogininfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_LoginServer_Response::clear_stlogininfo() {
  if (stlogininfo_ != NULL) stlogininfo_->::GameLoginInfo::Clear();
  clear_has_stlogininfo();
}
inline const ::GameLoginInfo& Zone_LoginServer_Response::stlogininfo() const {
  return stlogininfo_ != NULL ? *stlogininfo_ : *default_instance_->stlogininfo_;
}
inline ::GameLoginInfo* Zone_LoginServer_Response::mutable_stlogininfo() {
  set_has_stlogininfo();
  if (stlogininfo_ == NULL) stlogininfo_ = new ::GameLoginInfo;
  return stlogininfo_;
}
inline ::GameLoginInfo* Zone_LoginServer_Response::release_stlogininfo() {
  clear_has_stlogininfo();
  ::GameLoginInfo* temp = stlogininfo_;
  stlogininfo_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Response::set_allocated_stlogininfo(::GameLoginInfo* stlogininfo) {
  delete stlogininfo_;
  stlogininfo_ = stlogininfo;
  if (stlogininfo) {
    set_has_stlogininfo();
  } else {
    clear_has_stlogininfo();
  }
}

// -------------------------------------------------------------------

// Zone_Logout_Notify

// optional .RoleID stRoleID = 1;
inline bool Zone_Logout_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Logout_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Logout_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Logout_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_Logout_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_Logout_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_Logout_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_Logout_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// -------------------------------------------------------------------

// Zone_GetFriendInfo_Request

// optional uint32 ucReqType = 1;
inline bool Zone_GetFriendInfo_Request::has_ucreqtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_ucreqtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetFriendInfo_Request::clear_has_ucreqtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetFriendInfo_Request::clear_ucreqtype() {
  ucreqtype_ = 0u;
  clear_has_ucreqtype();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::ucreqtype() const {
  return ucreqtype_;
}
inline void Zone_GetFriendInfo_Request::set_ucreqtype(::google::protobuf::uint32 value) {
  set_has_ucreqtype();
  ucreqtype_ = value;
}

// optional uint32 uin = 2;
inline bool Zone_GetFriendInfo_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetFriendInfo_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetFriendInfo_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::uin() const {
  return uin_;
}
inline void Zone_GetFriendInfo_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 friend_uin = 3;
inline bool Zone_GetFriendInfo_Request::has_friend_uin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_GetFriendInfo_Request::set_has_friend_uin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_GetFriendInfo_Request::clear_has_friend_uin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_GetFriendInfo_Request::clear_friend_uin() {
  friend_uin_ = 0u;
  clear_has_friend_uin();
}
inline ::google::protobuf::uint32 Zone_GetFriendInfo_Request::friend_uin() const {
  return friend_uin_;
}
inline void Zone_GetFriendInfo_Request::set_friend_uin(::google::protobuf::uint32 value) {
  set_has_friend_uin();
  friend_uin_ = value;
}

// -------------------------------------------------------------------

// Zone_GetFriendInfo_Response

// optional int32 iResult = 1;
inline bool Zone_GetFriendInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetFriendInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetFriendInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetFriendInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetFriendInfo_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetFriendInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_OnlineRole_Request

// optional int32 iWorldID = 1;
inline bool Zone_OnlineRole_Request::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_OnlineRole_Request::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_OnlineRole_Request::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::iworldid() const {
  return iworldid_;
}
inline void Zone_OnlineRole_Request::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iZoneID = 2;
inline bool Zone_OnlineRole_Request::has_izoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_izoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_OnlineRole_Request::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_OnlineRole_Request::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::izoneid() const {
  return izoneid_;
}
inline void Zone_OnlineRole_Request::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iRoleNum = 3;
inline bool Zone_OnlineRole_Request::has_irolenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_irolenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_OnlineRole_Request::clear_has_irolenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_OnlineRole_Request::clear_irolenum() {
  irolenum_ = 0;
  clear_has_irolenum();
}
inline ::google::protobuf::int32 Zone_OnlineRole_Request::irolenum() const {
  return irolenum_;
}
inline void Zone_OnlineRole_Request::set_irolenum(::google::protobuf::int32 value) {
  set_has_irolenum();
  irolenum_ = value;
}

// optional string strRecordTime = 4;
inline bool Zone_OnlineRole_Request::has_strrecordtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_OnlineRole_Request::set_has_strrecordtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_OnlineRole_Request::clear_has_strrecordtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_OnlineRole_Request::clear_strrecordtime() {
  if (strrecordtime_ != &::google::protobuf::internal::kEmptyString) {
    strrecordtime_->clear();
  }
  clear_has_strrecordtime();
}
inline const ::std::string& Zone_OnlineRole_Request::strrecordtime() const {
  return *strrecordtime_;
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const ::std::string& value) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(value);
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const char* value) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(value);
}
inline void Zone_OnlineRole_Request::set_strrecordtime(const char* value, size_t size) {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  strrecordtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_OnlineRole_Request::mutable_strrecordtime() {
  set_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    strrecordtime_ = new ::std::string;
  }
  return strrecordtime_;
}
inline ::std::string* Zone_OnlineRole_Request::release_strrecordtime() {
  clear_has_strrecordtime();
  if (strrecordtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrecordtime_;
    strrecordtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_OnlineRole_Request::set_allocated_strrecordtime(::std::string* strrecordtime) {
  if (strrecordtime_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecordtime_;
  }
  if (strrecordtime) {
    set_has_strrecordtime();
    strrecordtime_ = strrecordtime;
  } else {
    clear_has_strrecordtime();
    strrecordtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_GameMaster_Request

// optional uint32 uin = 1;
inline bool Zone_GameMaster_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GameMaster_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GameMaster_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GameMaster_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 Zone_GameMaster_Request::uin() const {
  return uin_;
}
inline void Zone_GameMaster_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional string strCommand = 2;
inline bool Zone_GameMaster_Request::has_strcommand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GameMaster_Request::set_has_strcommand() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GameMaster_Request::clear_has_strcommand() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GameMaster_Request::clear_strcommand() {
  if (strcommand_ != &::google::protobuf::internal::kEmptyString) {
    strcommand_->clear();
  }
  clear_has_strcommand();
}
inline const ::std::string& Zone_GameMaster_Request::strcommand() const {
  return *strcommand_;
}
inline void Zone_GameMaster_Request::set_strcommand(const ::std::string& value) {
  set_has_strcommand();
  if (strcommand_ == &::google::protobuf::internal::kEmptyString) {
    strcommand_ = new ::std::string;
  }
  strcommand_->assign(value);
}
inline void Zone_GameMaster_Request::set_strcommand(const char* value) {
  set_has_strcommand();
  if (strcommand_ == &::google::protobuf::internal::kEmptyString) {
    strcommand_ = new ::std::string;
  }
  strcommand_->assign(value);
}
inline void Zone_GameMaster_Request::set_strcommand(const char* value, size_t size) {
  set_has_strcommand();
  if (strcommand_ == &::google::protobuf::internal::kEmptyString) {
    strcommand_ = new ::std::string;
  }
  strcommand_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_GameMaster_Request::mutable_strcommand() {
  set_has_strcommand();
  if (strcommand_ == &::google::protobuf::internal::kEmptyString) {
    strcommand_ = new ::std::string;
  }
  return strcommand_;
}
inline ::std::string* Zone_GameMaster_Request::release_strcommand() {
  clear_has_strcommand();
  if (strcommand_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcommand_;
    strcommand_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_GameMaster_Request::set_allocated_strcommand(::std::string* strcommand) {
  if (strcommand_ != &::google::protobuf::internal::kEmptyString) {
    delete strcommand_;
  }
  if (strcommand) {
    set_has_strcommand();
    strcommand_ = strcommand;
  } else {
    clear_has_strcommand();
    strcommand_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_GameMaster_Response

// optional int32 iResult = 1;
inline bool Zone_GameMaster_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GameMaster_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GameMaster_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GameMaster_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GameMaster_Response::iresult() const {
  return iresult_;
}
inline void Zone_GameMaster_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_LoginServer_Notify

// optional .RoleID stRoleID = 1;
inline bool Zone_LoginServer_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_LoginServer_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_LoginServer_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_LoginServer_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& Zone_LoginServer_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* Zone_LoginServer_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* Zone_LoginServer_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void Zone_LoginServer_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iZoneID = 4;
inline bool Zone_LoginServer_Notify::has_izoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_LoginServer_Notify::set_has_izoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_LoginServer_Notify::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_LoginServer_Notify::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 Zone_LoginServer_Notify::izoneid() const {
  return izoneid_;
}
inline void Zone_LoginServer_Notify::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// -------------------------------------------------------------------

// Zone_RepOpera_Request

// optional .ReqOperaType eType = 1 [default = REQ_OPERA_TYPE_INVALID];
inline bool Zone_RepOpera_Request::has_etype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RepOpera_Request::set_has_etype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RepOpera_Request::clear_has_etype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RepOpera_Request::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ReqOperaType Zone_RepOpera_Request::etype() const {
  return static_cast< ::ReqOperaType >(etype_);
}
inline void Zone_RepOpera_Request::set_etype(::ReqOperaType value) {
  assert(::ReqOperaType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// optional int32 iSlotIndex = 2;
inline bool Zone_RepOpera_Request::has_islotindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_RepOpera_Request::set_has_islotindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_RepOpera_Request::clear_has_islotindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_RepOpera_Request::clear_islotindex() {
  islotindex_ = 0;
  clear_has_islotindex();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::islotindex() const {
  return islotindex_;
}
inline void Zone_RepOpera_Request::set_islotindex(::google::protobuf::int32 value) {
  set_has_islotindex();
  islotindex_ = value;
}

// optional int32 iItemNum = 3;
inline bool Zone_RepOpera_Request::has_iitemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_RepOpera_Request::set_has_iitemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_RepOpera_Request::clear_has_iitemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_RepOpera_Request::clear_iitemnum() {
  iitemnum_ = 0;
  clear_has_iitemnum();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::iitemnum() const {
  return iitemnum_;
}
inline void Zone_RepOpera_Request::set_iitemnum(::google::protobuf::int32 value) {
  set_has_iitemnum();
  iitemnum_ = value;
}

// optional int32 iOtherSlotIndex = 4;
inline bool Zone_RepOpera_Request::has_iotherslotindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_RepOpera_Request::set_has_iotherslotindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_RepOpera_Request::clear_has_iotherslotindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_RepOpera_Request::clear_iotherslotindex() {
  iotherslotindex_ = 0;
  clear_has_iotherslotindex();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::iotherslotindex() const {
  return iotherslotindex_;
}
inline void Zone_RepOpera_Request::set_iotherslotindex(::google::protobuf::int32 value) {
  set_has_iotherslotindex();
  iotherslotindex_ = value;
}

// optional int32 iFightUnitID = 5;
inline bool Zone_RepOpera_Request::has_ifightunitid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_RepOpera_Request::set_has_ifightunitid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_RepOpera_Request::clear_has_ifightunitid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_RepOpera_Request::clear_ifightunitid() {
  ifightunitid_ = 0;
  clear_has_ifightunitid();
}
inline ::google::protobuf::int32 Zone_RepOpera_Request::ifightunitid() const {
  return ifightunitid_;
}
inline void Zone_RepOpera_Request::set_ifightunitid(::google::protobuf::int32 value) {
  set_has_ifightunitid();
  ifightunitid_ = value;
}

// -------------------------------------------------------------------

// Zone_RepOpera_Response

// optional int32 iResult = 1;
inline bool Zone_RepOpera_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_RepOpera_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_RepOpera_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_RepOpera_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::iresult() const {
  return iresult_;
}
inline void Zone_RepOpera_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iSlotIndex = 2;
inline bool Zone_RepOpera_Response::has_islotindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_RepOpera_Response::set_has_islotindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_RepOpera_Response::clear_has_islotindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_RepOpera_Response::clear_islotindex() {
  islotindex_ = 0;
  clear_has_islotindex();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::islotindex() const {
  return islotindex_;
}
inline void Zone_RepOpera_Response::set_islotindex(::google::protobuf::int32 value) {
  set_has_islotindex();
  islotindex_ = value;
}

// optional .OneSlotInfo stSlot = 3;
inline bool Zone_RepOpera_Response::has_stslot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_RepOpera_Response::set_has_stslot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_RepOpera_Response::clear_has_stslot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_RepOpera_Response::clear_stslot() {
  if (stslot_ != NULL) stslot_->::OneSlotInfo::Clear();
  clear_has_stslot();
}
inline const ::OneSlotInfo& Zone_RepOpera_Response::stslot() const {
  return stslot_ != NULL ? *stslot_ : *default_instance_->stslot_;
}
inline ::OneSlotInfo* Zone_RepOpera_Response::mutable_stslot() {
  set_has_stslot();
  if (stslot_ == NULL) stslot_ = new ::OneSlotInfo;
  return stslot_;
}
inline ::OneSlotInfo* Zone_RepOpera_Response::release_stslot() {
  clear_has_stslot();
  ::OneSlotInfo* temp = stslot_;
  stslot_ = NULL;
  return temp;
}
inline void Zone_RepOpera_Response::set_allocated_stslot(::OneSlotInfo* stslot) {
  delete stslot_;
  stslot_ = stslot;
  if (stslot) {
    set_has_stslot();
  } else {
    clear_has_stslot();
  }
}

// optional int32 iOtherSlotIndex = 4;
inline bool Zone_RepOpera_Response::has_iotherslotindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_RepOpera_Response::set_has_iotherslotindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_RepOpera_Response::clear_has_iotherslotindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_RepOpera_Response::clear_iotherslotindex() {
  iotherslotindex_ = 0;
  clear_has_iotherslotindex();
}
inline ::google::protobuf::int32 Zone_RepOpera_Response::iotherslotindex() const {
  return iotherslotindex_;
}
inline void Zone_RepOpera_Response::set_iotherslotindex(::google::protobuf::int32 value) {
  set_has_iotherslotindex();
  iotherslotindex_ = value;
}

// optional .OneSlotInfo stOtherSlot = 5;
inline bool Zone_RepOpera_Response::has_stotherslot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_RepOpera_Response::set_has_stotherslot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_RepOpera_Response::clear_has_stotherslot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_RepOpera_Response::clear_stotherslot() {
  if (stotherslot_ != NULL) stotherslot_->::OneSlotInfo::Clear();
  clear_has_stotherslot();
}
inline const ::OneSlotInfo& Zone_RepOpera_Response::stotherslot() const {
  return stotherslot_ != NULL ? *stotherslot_ : *default_instance_->stotherslot_;
}
inline ::OneSlotInfo* Zone_RepOpera_Response::mutable_stotherslot() {
  set_has_stotherslot();
  if (stotherslot_ == NULL) stotherslot_ = new ::OneSlotInfo;
  return stotherslot_;
}
inline ::OneSlotInfo* Zone_RepOpera_Response::release_stotherslot() {
  clear_has_stotherslot();
  ::OneSlotInfo* temp = stotherslot_;
  stotherslot_ = NULL;
  return temp;
}
inline void Zone_RepOpera_Response::set_allocated_stotherslot(::OneSlotInfo* stotherslot) {
  delete stotherslot_;
  stotherslot_ = stotherslot;
  if (stotherslot) {
    set_has_stotherslot();
  } else {
    clear_has_stotherslot();
  }
}

// optional .ReqOperaType eType = 6 [default = REQ_OPERA_TYPE_INVALID];
inline bool Zone_RepOpera_Response::has_etype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Zone_RepOpera_Response::set_has_etype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Zone_RepOpera_Response::clear_has_etype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Zone_RepOpera_Response::clear_etype() {
  etype_ = 0;
  clear_has_etype();
}
inline ::ReqOperaType Zone_RepOpera_Response::etype() const {
  return static_cast< ::ReqOperaType >(etype_);
}
inline void Zone_RepOpera_Response::set_etype(::ReqOperaType value) {
  assert(::ReqOperaType_IsValid(value));
  set_has_etype();
  etype_ = value;
}

// -------------------------------------------------------------------

// Zone_GetRepInfo_Request

// -------------------------------------------------------------------

// Zone_GetRepInfo_Response

// optional int32 iResult = 1;
inline bool Zone_GetRepInfo_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_GetRepInfo_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_GetRepInfo_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_GetRepInfo_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_GetRepInfo_Response::iresult() const {
  return iresult_;
}
inline void Zone_GetRepInfo_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .ITEMDBINFO stItems = 2;
inline bool Zone_GetRepInfo_Response::has_stitems() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_GetRepInfo_Response::set_has_stitems() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_GetRepInfo_Response::clear_has_stitems() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_GetRepInfo_Response::clear_stitems() {
  if (stitems_ != NULL) stitems_->::ITEMDBINFO::Clear();
  clear_has_stitems();
}
inline const ::ITEMDBINFO& Zone_GetRepInfo_Response::stitems() const {
  return stitems_ != NULL ? *stitems_ : *default_instance_->stitems_;
}
inline ::ITEMDBINFO* Zone_GetRepInfo_Response::mutable_stitems() {
  set_has_stitems();
  if (stitems_ == NULL) stitems_ = new ::ITEMDBINFO;
  return stitems_;
}
inline ::ITEMDBINFO* Zone_GetRepInfo_Response::release_stitems() {
  clear_has_stitems();
  ::ITEMDBINFO* temp = stitems_;
  stitems_ = NULL;
  return temp;
}
inline void Zone_GetRepInfo_Response::set_allocated_stitems(::ITEMDBINFO* stitems) {
  delete stitems_;
  stitems_ = stitems;
  if (stitems) {
    set_has_stitems();
  } else {
    clear_has_stitems();
  }
}

// -------------------------------------------------------------------

// Zone_WearEquip_Request

// optional bool bIsWear = 1;
inline bool Zone_WearEquip_Request::has_biswear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_WearEquip_Request::set_has_biswear() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_WearEquip_Request::clear_has_biswear() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_WearEquip_Request::clear_biswear() {
  biswear_ = false;
  clear_has_biswear();
}
inline bool Zone_WearEquip_Request::biswear() const {
  return biswear_;
}
inline void Zone_WearEquip_Request::set_biswear(bool value) {
  set_has_biswear();
  biswear_ = value;
}

// optional int32 iUnitIndex = 2;
inline bool Zone_WearEquip_Request::has_iunitindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_WearEquip_Request::set_has_iunitindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_WearEquip_Request::clear_has_iunitindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_WearEquip_Request::clear_iunitindex() {
  iunitindex_ = 0;
  clear_has_iunitindex();
}
inline ::google::protobuf::int32 Zone_WearEquip_Request::iunitindex() const {
  return iunitindex_;
}
inline void Zone_WearEquip_Request::set_iunitindex(::google::protobuf::int32 value) {
  set_has_iunitindex();
  iunitindex_ = value;
}

// optional int32 iSlotIndex = 3;
inline bool Zone_WearEquip_Request::has_islotindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_WearEquip_Request::set_has_islotindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_WearEquip_Request::clear_has_islotindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_WearEquip_Request::clear_islotindex() {
  islotindex_ = 0;
  clear_has_islotindex();
}
inline ::google::protobuf::int32 Zone_WearEquip_Request::islotindex() const {
  return islotindex_;
}
inline void Zone_WearEquip_Request::set_islotindex(::google::protobuf::int32 value) {
  set_has_islotindex();
  islotindex_ = value;
}

// optional int32 iEquipSubType = 4;
inline bool Zone_WearEquip_Request::has_iequipsubtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_WearEquip_Request::set_has_iequipsubtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_WearEquip_Request::clear_has_iequipsubtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_WearEquip_Request::clear_iequipsubtype() {
  iequipsubtype_ = 0;
  clear_has_iequipsubtype();
}
inline ::google::protobuf::int32 Zone_WearEquip_Request::iequipsubtype() const {
  return iequipsubtype_;
}
inline void Zone_WearEquip_Request::set_iequipsubtype(::google::protobuf::int32 value) {
  set_has_iequipsubtype();
  iequipsubtype_ = value;
}

// -------------------------------------------------------------------

// Zone_WearEquip_Response

// optional int32 iResult = 1;
inline bool Zone_WearEquip_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_WearEquip_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_WearEquip_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_WearEquip_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_WearEquip_Response::iresult() const {
  return iresult_;
}
inline void Zone_WearEquip_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional bool bIsWear = 2;
inline bool Zone_WearEquip_Response::has_biswear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_WearEquip_Response::set_has_biswear() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_WearEquip_Response::clear_has_biswear() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_WearEquip_Response::clear_biswear() {
  biswear_ = false;
  clear_has_biswear();
}
inline bool Zone_WearEquip_Response::biswear() const {
  return biswear_;
}
inline void Zone_WearEquip_Response::set_biswear(bool value) {
  set_has_biswear();
  biswear_ = value;
}

// optional int32 iUnitIndex = 3;
inline bool Zone_WearEquip_Response::has_iunitindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_WearEquip_Response::set_has_iunitindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_WearEquip_Response::clear_has_iunitindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_WearEquip_Response::clear_iunitindex() {
  iunitindex_ = 0;
  clear_has_iunitindex();
}
inline ::google::protobuf::int32 Zone_WearEquip_Response::iunitindex() const {
  return iunitindex_;
}
inline void Zone_WearEquip_Response::set_iunitindex(::google::protobuf::int32 value) {
  set_has_iunitindex();
  iunitindex_ = value;
}

// optional int32 iEquipSubType = 4;
inline bool Zone_WearEquip_Response::has_iequipsubtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Zone_WearEquip_Response::set_has_iequipsubtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Zone_WearEquip_Response::clear_has_iequipsubtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Zone_WearEquip_Response::clear_iequipsubtype() {
  iequipsubtype_ = 0;
  clear_has_iequipsubtype();
}
inline ::google::protobuf::int32 Zone_WearEquip_Response::iequipsubtype() const {
  return iequipsubtype_;
}
inline void Zone_WearEquip_Response::set_iequipsubtype(::google::protobuf::int32 value) {
  set_has_iequipsubtype();
  iequipsubtype_ = value;
}

// optional .OneSlotInfo stSlotInfo = 5;
inline bool Zone_WearEquip_Response::has_stslotinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Zone_WearEquip_Response::set_has_stslotinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Zone_WearEquip_Response::clear_has_stslotinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Zone_WearEquip_Response::clear_stslotinfo() {
  if (stslotinfo_ != NULL) stslotinfo_->::OneSlotInfo::Clear();
  clear_has_stslotinfo();
}
inline const ::OneSlotInfo& Zone_WearEquip_Response::stslotinfo() const {
  return stslotinfo_ != NULL ? *stslotinfo_ : *default_instance_->stslotinfo_;
}
inline ::OneSlotInfo* Zone_WearEquip_Response::mutable_stslotinfo() {
  set_has_stslotinfo();
  if (stslotinfo_ == NULL) stslotinfo_ = new ::OneSlotInfo;
  return stslotinfo_;
}
inline ::OneSlotInfo* Zone_WearEquip_Response::release_stslotinfo() {
  clear_has_stslotinfo();
  ::OneSlotInfo* temp = stslotinfo_;
  stslotinfo_ = NULL;
  return temp;
}
inline void Zone_WearEquip_Response::set_allocated_stslotinfo(::OneSlotInfo* stslotinfo) {
  delete stslotinfo_;
  stslotinfo_ = stslotinfo;
  if (stslotinfo) {
    set_has_stslotinfo();
  } else {
    clear_has_stslotinfo();
  }
}

// -------------------------------------------------------------------

// OneRepSlot

// optional int32 iRepSlot = 1;
inline bool OneRepSlot::has_irepslot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneRepSlot::set_has_irepslot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneRepSlot::clear_has_irepslot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneRepSlot::clear_irepslot() {
  irepslot_ = 0;
  clear_has_irepslot();
}
inline ::google::protobuf::int32 OneRepSlot::irepslot() const {
  return irepslot_;
}
inline void OneRepSlot::set_irepslot(::google::protobuf::int32 value) {
  set_has_irepslot();
  irepslot_ = value;
}

// optional int32 iChangeChannel = 3;
inline bool OneRepSlot::has_ichangechannel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneRepSlot::set_has_ichangechannel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneRepSlot::clear_has_ichangechannel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneRepSlot::clear_ichangechannel() {
  ichangechannel_ = 0;
  clear_has_ichangechannel();
}
inline ::google::protobuf::int32 OneRepSlot::ichangechannel() const {
  return ichangechannel_;
}
inline void OneRepSlot::set_ichangechannel(::google::protobuf::int32 value) {
  set_has_ichangechannel();
  ichangechannel_ = value;
}

// optional .OneSlotInfo stSlotInfo = 2;
inline bool OneRepSlot::has_stslotinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneRepSlot::set_has_stslotinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneRepSlot::clear_has_stslotinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneRepSlot::clear_stslotinfo() {
  if (stslotinfo_ != NULL) stslotinfo_->::OneSlotInfo::Clear();
  clear_has_stslotinfo();
}
inline const ::OneSlotInfo& OneRepSlot::stslotinfo() const {
  return stslotinfo_ != NULL ? *stslotinfo_ : *default_instance_->stslotinfo_;
}
inline ::OneSlotInfo* OneRepSlot::mutable_stslotinfo() {
  set_has_stslotinfo();
  if (stslotinfo_ == NULL) stslotinfo_ = new ::OneSlotInfo;
  return stslotinfo_;
}
inline ::OneSlotInfo* OneRepSlot::release_stslotinfo() {
  clear_has_stslotinfo();
  ::OneSlotInfo* temp = stslotinfo_;
  stslotinfo_ = NULL;
  return temp;
}
inline void OneRepSlot::set_allocated_stslotinfo(::OneSlotInfo* stslotinfo) {
  delete stslotinfo_;
  stslotinfo_ = stslotinfo;
  if (stslotinfo) {
    set_has_stslotinfo();
  } else {
    clear_has_stslotinfo();
  }
}

// -------------------------------------------------------------------

// Zone_RepChange_Notify

// repeated .OneRepSlot stItems = 1;
inline int Zone_RepChange_Notify::stitems_size() const {
  return stitems_.size();
}
inline void Zone_RepChange_Notify::clear_stitems() {
  stitems_.Clear();
}
inline const ::OneRepSlot& Zone_RepChange_Notify::stitems(int index) const {
  return stitems_.Get(index);
}
inline ::OneRepSlot* Zone_RepChange_Notify::mutable_stitems(int index) {
  return stitems_.Mutable(index);
}
inline ::OneRepSlot* Zone_RepChange_Notify::add_stitems() {
  return stitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OneRepSlot >&
Zone_RepChange_Notify::stitems() const {
  return stitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::OneRepSlot >*
Zone_RepChange_Notify::mutable_stitems() {
  return &stitems_;
}

// -------------------------------------------------------------------

// SellItemInfo

// optional int32 iItemSlot = 1;
inline bool SellItemInfo::has_iitemslot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellItemInfo::set_has_iitemslot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellItemInfo::clear_has_iitemslot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellItemInfo::clear_iitemslot() {
  iitemslot_ = 0;
  clear_has_iitemslot();
}
inline ::google::protobuf::int32 SellItemInfo::iitemslot() const {
  return iitemslot_;
}
inline void SellItemInfo::set_iitemslot(::google::protobuf::int32 value) {
  set_has_iitemslot();
  iitemslot_ = value;
}

// optional int32 iSellNum = 2;
inline bool SellItemInfo::has_isellnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellItemInfo::set_has_isellnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellItemInfo::clear_has_isellnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellItemInfo::clear_isellnum() {
  isellnum_ = 0;
  clear_has_isellnum();
}
inline ::google::protobuf::int32 SellItemInfo::isellnum() const {
  return isellnum_;
}
inline void SellItemInfo::set_isellnum(::google::protobuf::int32 value) {
  set_has_isellnum();
  isellnum_ = value;
}

// -------------------------------------------------------------------

// Zone_SellItem_Request

// optional int32 iShopID = 1;
inline bool Zone_SellItem_Request::has_ishopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SellItem_Request::set_has_ishopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SellItem_Request::clear_has_ishopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SellItem_Request::clear_ishopid() {
  ishopid_ = 0;
  clear_has_ishopid();
}
inline ::google::protobuf::int32 Zone_SellItem_Request::ishopid() const {
  return ishopid_;
}
inline void Zone_SellItem_Request::set_ishopid(::google::protobuf::int32 value) {
  set_has_ishopid();
  ishopid_ = value;
}

// repeated .SellItemInfo stItems = 2;
inline int Zone_SellItem_Request::stitems_size() const {
  return stitems_.size();
}
inline void Zone_SellItem_Request::clear_stitems() {
  stitems_.Clear();
}
inline const ::SellItemInfo& Zone_SellItem_Request::stitems(int index) const {
  return stitems_.Get(index);
}
inline ::SellItemInfo* Zone_SellItem_Request::mutable_stitems(int index) {
  return stitems_.Mutable(index);
}
inline ::SellItemInfo* Zone_SellItem_Request::add_stitems() {
  return stitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SellItemInfo >&
Zone_SellItem_Request::stitems() const {
  return stitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::SellItemInfo >*
Zone_SellItem_Request::mutable_stitems() {
  return &stitems_;
}

// -------------------------------------------------------------------

// Zone_SellItem_Response

// optional int32 iResult = 1;
inline bool Zone_SellItem_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_SellItem_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_SellItem_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_SellItem_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_SellItem_Response::iresult() const {
  return iresult_;
}
inline void Zone_SellItem_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// UserResourceChange

// optional int32 iResType = 1;
inline bool UserResourceChange::has_irestype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserResourceChange::set_has_irestype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserResourceChange::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserResourceChange::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::google::protobuf::int32 UserResourceChange::irestype() const {
  return irestype_;
}
inline void UserResourceChange::set_irestype(::google::protobuf::int32 value) {
  set_has_irestype();
  irestype_ = value;
}

// optional int32 iNewResNum = 2;
inline bool UserResourceChange::has_inewresnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserResourceChange::set_has_inewresnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserResourceChange::clear_has_inewresnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserResourceChange::clear_inewresnum() {
  inewresnum_ = 0;
  clear_has_inewresnum();
}
inline ::google::protobuf::int32 UserResourceChange::inewresnum() const {
  return inewresnum_;
}
inline void UserResourceChange::set_inewresnum(::google::protobuf::int32 value) {
  set_has_inewresnum();
  inewresnum_ = value;
}

// -------------------------------------------------------------------

// Zone_ResourceChange_Notify

// repeated .UserResourceChange stChangeInfos = 1;
inline int Zone_ResourceChange_Notify::stchangeinfos_size() const {
  return stchangeinfos_.size();
}
inline void Zone_ResourceChange_Notify::clear_stchangeinfos() {
  stchangeinfos_.Clear();
}
inline const ::UserResourceChange& Zone_ResourceChange_Notify::stchangeinfos(int index) const {
  return stchangeinfos_.Get(index);
}
inline ::UserResourceChange* Zone_ResourceChange_Notify::mutable_stchangeinfos(int index) {
  return stchangeinfos_.Mutable(index);
}
inline ::UserResourceChange* Zone_ResourceChange_Notify::add_stchangeinfos() {
  return stchangeinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserResourceChange >&
Zone_ResourceChange_Notify::stchangeinfos() const {
  return stchangeinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserResourceChange >*
Zone_ResourceChange_Notify::mutable_stchangeinfos() {
  return &stchangeinfos_;
}

// -------------------------------------------------------------------

// Zone_Chat_Request

// optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
inline bool Zone_Chat_Request::has_ichannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Chat_Request::set_has_ichannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Chat_Request::clear_has_ichannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Chat_Request::clear_ichannel() {
  ichannel_ = 0;
  clear_has_ichannel();
}
inline ::ChatChannelType Zone_Chat_Request::ichannel() const {
  return static_cast< ::ChatChannelType >(ichannel_);
}
inline void Zone_Chat_Request::set_ichannel(::ChatChannelType value) {
  assert(::ChatChannelType_IsValid(value));
  set_has_ichannel();
  ichannel_ = value;
}

// optional .RoleID stTargetRoleID = 2;
inline bool Zone_Chat_Request::has_sttargetroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Zone_Chat_Request::set_has_sttargetroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Zone_Chat_Request::clear_has_sttargetroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Zone_Chat_Request::clear_sttargetroleid() {
  if (sttargetroleid_ != NULL) sttargetroleid_->::RoleID::Clear();
  clear_has_sttargetroleid();
}
inline const ::RoleID& Zone_Chat_Request::sttargetroleid() const {
  return sttargetroleid_ != NULL ? *sttargetroleid_ : *default_instance_->sttargetroleid_;
}
inline ::RoleID* Zone_Chat_Request::mutable_sttargetroleid() {
  set_has_sttargetroleid();
  if (sttargetroleid_ == NULL) sttargetroleid_ = new ::RoleID;
  return sttargetroleid_;
}
inline ::RoleID* Zone_Chat_Request::release_sttargetroleid() {
  clear_has_sttargetroleid();
  ::RoleID* temp = sttargetroleid_;
  sttargetroleid_ = NULL;
  return temp;
}
inline void Zone_Chat_Request::set_allocated_sttargetroleid(::RoleID* sttargetroleid) {
  delete sttargetroleid_;
  sttargetroleid_ = sttargetroleid;
  if (sttargetroleid) {
    set_has_sttargetroleid();
  } else {
    clear_has_sttargetroleid();
  }
}

// optional string strMessage = 3;
inline bool Zone_Chat_Request::has_strmessage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Zone_Chat_Request::set_has_strmessage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Zone_Chat_Request::clear_has_strmessage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Zone_Chat_Request::clear_strmessage() {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    strmessage_->clear();
  }
  clear_has_strmessage();
}
inline const ::std::string& Zone_Chat_Request::strmessage() const {
  return *strmessage_;
}
inline void Zone_Chat_Request::set_strmessage(const ::std::string& value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Zone_Chat_Request::set_strmessage(const char* value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Zone_Chat_Request::set_strmessage(const char* value, size_t size) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Zone_Chat_Request::mutable_strmessage() {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  return strmessage_;
}
inline ::std::string* Zone_Chat_Request::release_strmessage() {
  clear_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmessage_;
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Zone_Chat_Request::set_allocated_strmessage(::std::string* strmessage) {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete strmessage_;
  }
  if (strmessage) {
    set_has_strmessage();
    strmessage_ = strmessage;
  } else {
    clear_has_strmessage();
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Zone_Chat_Response

// optional int32 iResult = 1;
inline bool Zone_Chat_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_Chat_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_Chat_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_Chat_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Zone_Chat_Response::iresult() const {
  return iresult_;
}
inline void Zone_Chat_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Zone_FightAttr_Notify

// optional int32 iUnitConfigID = 1;
inline bool Zone_FightAttr_Notify::has_iunitconfigid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Zone_FightAttr_Notify::set_has_iunitconfigid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Zone_FightAttr_Notify::clear_has_iunitconfigid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Zone_FightAttr_Notify::clear_iunitconfigid() {
  iunitconfigid_ = 0;
  clear_has_iunitconfigid();
}
inline ::google::protobuf::int32 Zone_FightAttr_Notify::iunitconfigid() const {
  return iunitconfigid_;
}
inline void Zone_FightAttr_Notify::set_iunitconfigid(::google::protobuf::int32 value) {
  set_has_iunitconfigid();
  iunitconfigid_ = value;
}

// repeated int32 iFightUnitAttr = 2;
inline int Zone_FightAttr_Notify::ifightunitattr_size() const {
  return ifightunitattr_.size();
}
inline void Zone_FightAttr_Notify::clear_ifightunitattr() {
  ifightunitattr_.Clear();
}
inline ::google::protobuf::int32 Zone_FightAttr_Notify::ifightunitattr(int index) const {
  return ifightunitattr_.Get(index);
}
inline void Zone_FightAttr_Notify::set_ifightunitattr(int index, ::google::protobuf::int32 value) {
  ifightunitattr_.Set(index, value);
}
inline void Zone_FightAttr_Notify::add_ifightunitattr(::google::protobuf::int32 value) {
  ifightunitattr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Zone_FightAttr_Notify::ifightunitattr() const {
  return ifightunitattr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Zone_FightAttr_Notify::mutable_ifightunitattr() {
  return &ifightunitattr_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReqOperaType>() {
  return ::ReqOperaType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_2eZone_2eproto__INCLUDED
