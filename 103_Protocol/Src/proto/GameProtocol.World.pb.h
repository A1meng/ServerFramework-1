// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameProtocol.World.proto

#ifndef PROTOBUF_GameProtocol_2eWorld_2eproto__INCLUDED
#define PROTOBUF_GameProtocol_2eWorld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameProtocol.Common.pb.h"
#include "GameProtocol.USERDB.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

class World_ZoneChanged_Notify;
class World_CreateRole_Request;
class World_CreateRole_Response;
class World_FetchRole_Request;
class World_FetchRole_Response;
class World_UpdateRole_Request;
class World_UpdateRole_Response;
class World_KickRole_Request;
class World_KickRole_Response;
class ZoneOnlineInfo;
class WorldOnlineInfo;
class World_OnlineStat_Request;
class World_OnlineStat_Response;
class World_Chat_Notify;

// ===================================================================

class World_ZoneChanged_Notify : public ::google::protobuf::Message {
 public:
  World_ZoneChanged_Notify();
  virtual ~World_ZoneChanged_Notify();

  World_ZoneChanged_Notify(const World_ZoneChanged_Notify& from);

  inline World_ZoneChanged_Notify& operator=(const World_ZoneChanged_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_ZoneChanged_Notify& default_instance();

  void Swap(World_ZoneChanged_Notify* other);

  // implements Message ----------------------------------------------

  World_ZoneChanged_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_ZoneChanged_Notify& from);
  void MergeFrom(const World_ZoneChanged_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);

  // optional .ZoneList stZones = 2;
  inline bool has_stzones() const;
  inline void clear_stzones();
  static const int kStZonesFieldNumber = 2;
  inline const ::ZoneList& stzones() const;
  inline ::ZoneList* mutable_stzones();
  inline ::ZoneList* release_stzones();
  inline void set_allocated_stzones(::ZoneList* stzones);

  // @@protoc_insertion_point(class_scope:World_ZoneChanged_Notify)
 private:
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_stzones();
  inline void clear_has_stzones();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ZoneList* stzones_;
  ::google::protobuf::uint32 worldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_ZoneChanged_Notify* default_instance_;
};
// -------------------------------------------------------------------

class World_CreateRole_Request : public ::google::protobuf::Message {
 public:
  World_CreateRole_Request();
  virtual ~World_CreateRole_Request();

  World_CreateRole_Request(const World_CreateRole_Request& from);

  inline World_CreateRole_Request& operator=(const World_CreateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_CreateRole_Request& default_instance();

  void Swap(World_CreateRole_Request* other);

  // implements Message ----------------------------------------------

  World_CreateRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_CreateRole_Request& from);
  void MergeFrom(const World_CreateRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uin = 1;
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);

  // optional uint32 world = 2;
  inline bool has_world() const;
  inline void clear_world();
  static const int kWorldFieldNumber = 2;
  inline ::google::protobuf::uint32 world() const;
  inline void set_world(::google::protobuf::uint32 value);

  // optional .GameUserInfo stBirthData = 4;
  inline bool has_stbirthdata() const;
  inline void clear_stbirthdata();
  static const int kStBirthDataFieldNumber = 4;
  inline const ::GameUserInfo& stbirthdata() const;
  inline ::GameUserInfo* mutable_stbirthdata();
  inline ::GameUserInfo* release_stbirthdata();
  inline void set_allocated_stbirthdata(::GameUserInfo* stbirthdata);

  // @@protoc_insertion_point(class_scope:World_CreateRole_Request)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_world();
  inline void clear_has_world();
  inline void set_has_stbirthdata();
  inline void clear_has_stbirthdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 world_;
  ::GameUserInfo* stbirthdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_CreateRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_CreateRole_Response : public ::google::protobuf::Message {
 public:
  World_CreateRole_Response();
  virtual ~World_CreateRole_Response();

  World_CreateRole_Response(const World_CreateRole_Response& from);

  inline World_CreateRole_Response& operator=(const World_CreateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_CreateRole_Response& default_instance();

  void Swap(World_CreateRole_Response* other);

  // implements Message ----------------------------------------------

  World_CreateRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_CreateRole_Response& from);
  void MergeFrom(const World_CreateRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // @@protoc_insertion_point(class_scope:World_CreateRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_CreateRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_FetchRole_Request : public ::google::protobuf::Message {
 public:
  World_FetchRole_Request();
  virtual ~World_FetchRole_Request();

  World_FetchRole_Request(const World_FetchRole_Request& from);

  inline World_FetchRole_Request& operator=(const World_FetchRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_FetchRole_Request& default_instance();

  void Swap(World_FetchRole_Request* other);

  // implements Message ----------------------------------------------

  World_FetchRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_FetchRole_Request& from);
  void MergeFrom(const World_FetchRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional bool bIsLogin = 2;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 2;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // optional int32 iReqID = 4;
  inline bool has_ireqid() const;
  inline void clear_ireqid();
  static const int kIReqIDFieldNumber = 4;
  inline ::google::protobuf::int32 ireqid() const;
  inline void set_ireqid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_FetchRole_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();
  inline void set_has_ireqid();
  inline void clear_has_ireqid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  bool bislogin_;
  ::google::protobuf::int32 ireqid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_FetchRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_FetchRole_Response : public ::google::protobuf::Message {
 public:
  World_FetchRole_Response();
  virtual ~World_FetchRole_Response();

  World_FetchRole_Response(const World_FetchRole_Response& from);

  inline World_FetchRole_Response& operator=(const World_FetchRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_FetchRole_Response& default_instance();

  void Swap(World_FetchRole_Response* other);

  // implements Message ----------------------------------------------

  World_FetchRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_FetchRole_Response& from);
  void MergeFrom(const World_FetchRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iResult = 2;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 2;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .GameUserInfo stUserInfo = 3;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 3;
  inline const ::GameUserInfo& stuserinfo() const;
  inline ::GameUserInfo* mutable_stuserinfo();
  inline ::GameUserInfo* release_stuserinfo();
  inline void set_allocated_stuserinfo(::GameUserInfo* stuserinfo);

  // optional bool bIsLogin = 4;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 4;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // @@protoc_insertion_point(class_scope:World_FetchRole_Response)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::GameUserInfo* stuserinfo_;
  ::google::protobuf::int32 iresult_;
  bool bislogin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_FetchRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRole_Request : public ::google::protobuf::Message {
 public:
  World_UpdateRole_Request();
  virtual ~World_UpdateRole_Request();

  World_UpdateRole_Request(const World_UpdateRole_Request& from);

  inline World_UpdateRole_Request& operator=(const World_UpdateRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRole_Request& default_instance();

  void Swap(World_UpdateRole_Request* other);

  // implements Message ----------------------------------------------

  World_UpdateRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRole_Request& from);
  void MergeFrom(const World_UpdateRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iReqID = 2;
  inline bool has_ireqid() const;
  inline void clear_ireqid();
  static const int kIReqIDFieldNumber = 2;
  inline ::google::protobuf::int32 ireqid() const;
  inline void set_ireqid(::google::protobuf::int32 value);

  // optional .GameUserInfo stUserInfo = 3;
  inline bool has_stuserinfo() const;
  inline void clear_stuserinfo();
  static const int kStUserInfoFieldNumber = 3;
  inline const ::GameUserInfo& stuserinfo() const;
  inline ::GameUserInfo* mutable_stuserinfo();
  inline ::GameUserInfo* release_stuserinfo();
  inline void set_allocated_stuserinfo(::GameUserInfo* stuserinfo);

  // optional bool bNeedResponse = 4;
  inline bool has_bneedresponse() const;
  inline void clear_bneedresponse();
  static const int kBNeedResponseFieldNumber = 4;
  inline bool bneedresponse() const;
  inline void set_bneedresponse(bool value);

  // @@protoc_insertion_point(class_scope:World_UpdateRole_Request)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_ireqid();
  inline void clear_has_ireqid();
  inline void set_has_stuserinfo();
  inline void clear_has_stuserinfo();
  inline void set_has_bneedresponse();
  inline void clear_has_bneedresponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::GameUserInfo* stuserinfo_;
  ::google::protobuf::int32 ireqid_;
  bool bneedresponse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_UpdateRole_Response : public ::google::protobuf::Message {
 public:
  World_UpdateRole_Response();
  virtual ~World_UpdateRole_Response();

  World_UpdateRole_Response(const World_UpdateRole_Response& from);

  inline World_UpdateRole_Response& operator=(const World_UpdateRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_UpdateRole_Response& default_instance();

  void Swap(World_UpdateRole_Response* other);

  // implements Message ----------------------------------------------

  World_UpdateRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_UpdateRole_Response& from);
  void MergeFrom(const World_UpdateRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoleID stRoleID = 1;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 1;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iResult = 2;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 2;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_UpdateRole_Response)
 private:
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_UpdateRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_KickRole_Request : public ::google::protobuf::Message {
 public:
  World_KickRole_Request();
  virtual ~World_KickRole_Request();

  World_KickRole_Request(const World_KickRole_Request& from);

  inline World_KickRole_Request& operator=(const World_KickRole_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_KickRole_Request& default_instance();

  void Swap(World_KickRole_Request* other);

  // implements Message ----------------------------------------------

  World_KickRole_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_KickRole_Request& from);
  void MergeFrom(const World_KickRole_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iFromWorldID = 1;
  inline bool has_ifromworldid() const;
  inline void clear_ifromworldid();
  static const int kIFromWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 ifromworldid() const;
  inline void set_ifromworldid(::google::protobuf::int32 value);

  // optional int32 iFromZoneID = 2;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional int32 iSessionID = 3;
  inline bool has_isessionid() const;
  inline void clear_isessionid();
  static const int kISessionIDFieldNumber = 3;
  inline ::google::protobuf::int32 isessionid() const;
  inline void set_isessionid(::google::protobuf::int32 value);

  // optional .RoleID stKickedRoleID = 4;
  inline bool has_stkickedroleid() const;
  inline void clear_stkickedroleid();
  static const int kStKickedRoleIDFieldNumber = 4;
  inline const ::RoleID& stkickedroleid() const;
  inline ::RoleID* mutable_stkickedroleid();
  inline ::RoleID* release_stkickedroleid();
  inline void set_allocated_stkickedroleid(::RoleID* stkickedroleid);

  // optional bool bIsLogin = 5;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 5;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // @@protoc_insertion_point(class_scope:World_KickRole_Request)
 private:
  inline void set_has_ifromworldid();
  inline void clear_has_ifromworldid();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_isessionid();
  inline void clear_has_isessionid();
  inline void set_has_stkickedroleid();
  inline void clear_has_stkickedroleid();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ifromworldid_;
  ::google::protobuf::int32 ifromzoneid_;
  ::RoleID* stkickedroleid_;
  ::google::protobuf::int32 isessionid_;
  bool bislogin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_KickRole_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_KickRole_Response : public ::google::protobuf::Message {
 public:
  World_KickRole_Response();
  virtual ~World_KickRole_Response();

  World_KickRole_Response(const World_KickRole_Response& from);

  inline World_KickRole_Response& operator=(const World_KickRole_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_KickRole_Response& default_instance();

  void Swap(World_KickRole_Response* other);

  // implements Message ----------------------------------------------

  World_KickRole_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_KickRole_Response& from);
  void MergeFrom(const World_KickRole_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional int32 iFromWorldID = 2;
  inline bool has_ifromworldid() const;
  inline void clear_ifromworldid();
  static const int kIFromWorldIDFieldNumber = 2;
  inline ::google::protobuf::int32 ifromworldid() const;
  inline void set_ifromworldid(::google::protobuf::int32 value);

  // optional int32 iFromZoneID = 3;
  inline bool has_ifromzoneid() const;
  inline void clear_ifromzoneid();
  static const int kIFromZoneIDFieldNumber = 3;
  inline ::google::protobuf::int32 ifromzoneid() const;
  inline void set_ifromzoneid(::google::protobuf::int32 value);

  // optional int32 iSessionID = 4;
  inline bool has_isessionid() const;
  inline void clear_isessionid();
  static const int kISessionIDFieldNumber = 4;
  inline ::google::protobuf::int32 isessionid() const;
  inline void set_isessionid(::google::protobuf::int32 value);

  // optional .RoleID stKickedRoleID = 5;
  inline bool has_stkickedroleid() const;
  inline void clear_stkickedroleid();
  static const int kStKickedRoleIDFieldNumber = 5;
  inline const ::RoleID& stkickedroleid() const;
  inline ::RoleID* mutable_stkickedroleid();
  inline ::RoleID* release_stkickedroleid();
  inline void set_allocated_stkickedroleid(::RoleID* stkickedroleid);

  // optional bool bIsLogin = 6;
  inline bool has_bislogin() const;
  inline void clear_bislogin();
  static const int kBIsLoginFieldNumber = 6;
  inline bool bislogin() const;
  inline void set_bislogin(bool value);

  // @@protoc_insertion_point(class_scope:World_KickRole_Response)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_ifromworldid();
  inline void clear_has_ifromworldid();
  inline void set_has_ifromzoneid();
  inline void clear_has_ifromzoneid();
  inline void set_has_isessionid();
  inline void clear_has_isessionid();
  inline void set_has_stkickedroleid();
  inline void clear_has_stkickedroleid();
  inline void set_has_bislogin();
  inline void clear_has_bislogin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;
  ::google::protobuf::int32 ifromworldid_;
  ::google::protobuf::int32 ifromzoneid_;
  ::google::protobuf::int32 isessionid_;
  ::RoleID* stkickedroleid_;
  bool bislogin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_KickRole_Response* default_instance_;
};
// -------------------------------------------------------------------

class ZoneOnlineInfo : public ::google::protobuf::Message {
 public:
  ZoneOnlineInfo();
  virtual ~ZoneOnlineInfo();

  ZoneOnlineInfo(const ZoneOnlineInfo& from);

  inline ZoneOnlineInfo& operator=(const ZoneOnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneOnlineInfo& default_instance();

  void Swap(ZoneOnlineInfo* other);

  // implements Message ----------------------------------------------

  ZoneOnlineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneOnlineInfo& from);
  void MergeFrom(const ZoneOnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iZoneID = 1;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 1;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional int32 iRoleNum = 2;
  inline bool has_irolenum() const;
  inline void clear_irolenum();
  static const int kIRoleNumFieldNumber = 2;
  inline ::google::protobuf::int32 irolenum() const;
  inline void set_irolenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZoneOnlineInfo)
 private:
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_irolenum();
  inline void clear_has_irolenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 izoneid_;
  ::google::protobuf::int32 irolenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static ZoneOnlineInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldOnlineInfo : public ::google::protobuf::Message {
 public:
  WorldOnlineInfo();
  virtual ~WorldOnlineInfo();

  WorldOnlineInfo(const WorldOnlineInfo& from);

  inline WorldOnlineInfo& operator=(const WorldOnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldOnlineInfo& default_instance();

  void Swap(WorldOnlineInfo* other);

  // implements Message ----------------------------------------------

  WorldOnlineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldOnlineInfo& from);
  void MergeFrom(const WorldOnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iOnlineRoleNum = 2;
  inline bool has_ionlinerolenum() const;
  inline void clear_ionlinerolenum();
  static const int kIOnlineRoleNumFieldNumber = 2;
  inline ::google::protobuf::int32 ionlinerolenum() const;
  inline void set_ionlinerolenum(::google::protobuf::int32 value);

  // optional int32 iRegisterNum = 3;
  inline bool has_iregisternum() const;
  inline void clear_iregisternum();
  static const int kIRegisterNumFieldNumber = 3;
  inline ::google::protobuf::int32 iregisternum() const;
  inline void set_iregisternum(::google::protobuf::int32 value);

  // optional int32 iMaxOnlineNum = 4;
  inline bool has_imaxonlinenum() const;
  inline void clear_imaxonlinenum();
  static const int kIMaxOnlineNumFieldNumber = 4;
  inline ::google::protobuf::int32 imaxonlinenum() const;
  inline void set_imaxonlinenum(::google::protobuf::int32 value);

  // optional int32 iMaxRegisterNum = 5;
  inline bool has_imaxregisternum() const;
  inline void clear_imaxregisternum();
  static const int kIMaxRegisterNumFieldNumber = 5;
  inline ::google::protobuf::int32 imaxregisternum() const;
  inline void set_imaxregisternum(::google::protobuf::int32 value);

  // optional int32 iActiveZoneNum = 6;
  inline bool has_iactivezonenum() const;
  inline void clear_iactivezonenum();
  static const int kIActiveZoneNumFieldNumber = 6;
  inline ::google::protobuf::int32 iactivezonenum() const;
  inline void set_iactivezonenum(::google::protobuf::int32 value);

  // repeated .ZoneOnlineInfo stZoneInfos = 7;
  inline int stzoneinfos_size() const;
  inline void clear_stzoneinfos();
  static const int kStZoneInfosFieldNumber = 7;
  inline const ::ZoneOnlineInfo& stzoneinfos(int index) const;
  inline ::ZoneOnlineInfo* mutable_stzoneinfos(int index);
  inline ::ZoneOnlineInfo* add_stzoneinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >&
      stzoneinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >*
      mutable_stzoneinfos();

  // @@protoc_insertion_point(class_scope:WorldOnlineInfo)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_ionlinerolenum();
  inline void clear_has_ionlinerolenum();
  inline void set_has_iregisternum();
  inline void clear_has_iregisternum();
  inline void set_has_imaxonlinenum();
  inline void clear_has_imaxonlinenum();
  inline void set_has_imaxregisternum();
  inline void clear_has_imaxregisternum();
  inline void set_has_iactivezonenum();
  inline void clear_has_iactivezonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 ionlinerolenum_;
  ::google::protobuf::int32 iregisternum_;
  ::google::protobuf::int32 imaxonlinenum_;
  ::google::protobuf::int32 imaxregisternum_;
  ::google::protobuf::int32 iactivezonenum_;
  ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo > stzoneinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static WorldOnlineInfo* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineStat_Request : public ::google::protobuf::Message {
 public:
  World_OnlineStat_Request();
  virtual ~World_OnlineStat_Request();

  World_OnlineStat_Request(const World_OnlineStat_Request& from);

  inline World_OnlineStat_Request& operator=(const World_OnlineStat_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineStat_Request& default_instance();

  void Swap(World_OnlineStat_Request* other);

  // implements Message ----------------------------------------------

  World_OnlineStat_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineStat_Request& from);
  void MergeFrom(const World_OnlineStat_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional .WorldOnlineInfo stWorldInfo = 2;
  inline bool has_stworldinfo() const;
  inline void clear_stworldinfo();
  static const int kStWorldInfoFieldNumber = 2;
  inline const ::WorldOnlineInfo& stworldinfo() const;
  inline ::WorldOnlineInfo* mutable_stworldinfo();
  inline ::WorldOnlineInfo* release_stworldinfo();
  inline void set_allocated_stworldinfo(::WorldOnlineInfo* stworldinfo);

  // optional int32 uRecordTime = 3;
  inline bool has_urecordtime() const;
  inline void clear_urecordtime();
  static const int kURecordTimeFieldNumber = 3;
  inline ::google::protobuf::int32 urecordtime() const;
  inline void set_urecordtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_OnlineStat_Request)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_stworldinfo();
  inline void clear_has_stworldinfo();
  inline void set_has_urecordtime();
  inline void clear_has_urecordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::WorldOnlineInfo* stworldinfo_;
  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 urecordtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineStat_Request* default_instance_;
};
// -------------------------------------------------------------------

class World_OnlineStat_Response : public ::google::protobuf::Message {
 public:
  World_OnlineStat_Response();
  virtual ~World_OnlineStat_Response();

  World_OnlineStat_Response(const World_OnlineStat_Response& from);

  inline World_OnlineStat_Response& operator=(const World_OnlineStat_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_OnlineStat_Response& default_instance();

  void Swap(World_OnlineStat_Response* other);

  // implements Message ----------------------------------------------

  World_OnlineStat_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_OnlineStat_Response& from);
  void MergeFrom(const World_OnlineStat_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // optional int32 iInstanceID = 2;
  inline bool has_iinstanceid() const;
  inline void clear_iinstanceid();
  static const int kIInstanceIDFieldNumber = 2;
  inline ::google::protobuf::int32 iinstanceid() const;
  inline void set_iinstanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:World_OnlineStat_Response)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_iinstanceid();
  inline void clear_has_iinstanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 iinstanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_OnlineStat_Response* default_instance_;
};
// -------------------------------------------------------------------

class World_Chat_Notify : public ::google::protobuf::Message {
 public:
  World_Chat_Notify();
  virtual ~World_Chat_Notify();

  World_Chat_Notify(const World_Chat_Notify& from);

  inline World_Chat_Notify& operator=(const World_Chat_Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const World_Chat_Notify& default_instance();

  void Swap(World_Chat_Notify* other);

  // implements Message ----------------------------------------------

  World_Chat_Notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const World_Chat_Notify& from);
  void MergeFrom(const World_Chat_Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
  inline bool has_ichannel() const;
  inline void clear_ichannel();
  static const int kIChannelFieldNumber = 1;
  inline ::ChatChannelType ichannel() const;
  inline void set_ichannel(::ChatChannelType value);

  // optional .RoleID stRoleID = 2;
  inline bool has_stroleid() const;
  inline void clear_stroleid();
  static const int kStRoleIDFieldNumber = 2;
  inline const ::RoleID& stroleid() const;
  inline ::RoleID* mutable_stroleid();
  inline ::RoleID* release_stroleid();
  inline void set_allocated_stroleid(::RoleID* stroleid);

  // optional int32 iZoneID = 4;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 4;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // optional .RoleID stTargetID = 5;
  inline bool has_sttargetid() const;
  inline void clear_sttargetid();
  static const int kStTargetIDFieldNumber = 5;
  inline const ::RoleID& sttargetid() const;
  inline ::RoleID* mutable_sttargetid();
  inline ::RoleID* release_sttargetid();
  inline void set_allocated_sttargetid(::RoleID* sttargetid);

  // optional string szMessage = 6;
  inline bool has_szmessage() const;
  inline void clear_szmessage();
  static const int kSzMessageFieldNumber = 6;
  inline const ::std::string& szmessage() const;
  inline void set_szmessage(const ::std::string& value);
  inline void set_szmessage(const char* value);
  inline void set_szmessage(const char* value, size_t size);
  inline ::std::string* mutable_szmessage();
  inline ::std::string* release_szmessage();
  inline void set_allocated_szmessage(::std::string* szmessage);

  // @@protoc_insertion_point(class_scope:World_Chat_Notify)
 private:
  inline void set_has_ichannel();
  inline void clear_has_ichannel();
  inline void set_has_stroleid();
  inline void clear_has_stroleid();
  inline void set_has_izoneid();
  inline void clear_has_izoneid();
  inline void set_has_sttargetid();
  inline void clear_has_sttargetid();
  inline void set_has_szmessage();
  inline void clear_has_szmessage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleID* stroleid_;
  int ichannel_;
  ::google::protobuf::int32 izoneid_;
  ::RoleID* sttargetid_;
  ::std::string* szmessage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_AssignDesc_GameProtocol_2eWorld_2eproto();
  friend void protobuf_ShutdownFile_GameProtocol_2eWorld_2eproto();

  void InitAsDefaultInstance();
  static World_Chat_Notify* default_instance_;
};
// ===================================================================


// ===================================================================

// World_ZoneChanged_Notify

// optional uint32 worldID = 1;
inline bool World_ZoneChanged_Notify::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_ZoneChanged_Notify::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_ZoneChanged_Notify::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_ZoneChanged_Notify::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 World_ZoneChanged_Notify::worldid() const {
  return worldid_;
}
inline void World_ZoneChanged_Notify::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional .ZoneList stZones = 2;
inline bool World_ZoneChanged_Notify::has_stzones() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_ZoneChanged_Notify::set_has_stzones() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_ZoneChanged_Notify::clear_has_stzones() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_ZoneChanged_Notify::clear_stzones() {
  if (stzones_ != NULL) stzones_->::ZoneList::Clear();
  clear_has_stzones();
}
inline const ::ZoneList& World_ZoneChanged_Notify::stzones() const {
  return stzones_ != NULL ? *stzones_ : *default_instance_->stzones_;
}
inline ::ZoneList* World_ZoneChanged_Notify::mutable_stzones() {
  set_has_stzones();
  if (stzones_ == NULL) stzones_ = new ::ZoneList;
  return stzones_;
}
inline ::ZoneList* World_ZoneChanged_Notify::release_stzones() {
  clear_has_stzones();
  ::ZoneList* temp = stzones_;
  stzones_ = NULL;
  return temp;
}
inline void World_ZoneChanged_Notify::set_allocated_stzones(::ZoneList* stzones) {
  delete stzones_;
  stzones_ = stzones;
  if (stzones) {
    set_has_stzones();
  } else {
    clear_has_stzones();
  }
}

// -------------------------------------------------------------------

// World_CreateRole_Request

// optional uint32 uin = 1;
inline bool World_CreateRole_Request::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_CreateRole_Request::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_CreateRole_Request::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_CreateRole_Request::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 World_CreateRole_Request::uin() const {
  return uin_;
}
inline void World_CreateRole_Request::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// optional uint32 world = 2;
inline bool World_CreateRole_Request::has_world() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_CreateRole_Request::set_has_world() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_CreateRole_Request::clear_has_world() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_CreateRole_Request::clear_world() {
  world_ = 0u;
  clear_has_world();
}
inline ::google::protobuf::uint32 World_CreateRole_Request::world() const {
  return world_;
}
inline void World_CreateRole_Request::set_world(::google::protobuf::uint32 value) {
  set_has_world();
  world_ = value;
}

// optional .GameUserInfo stBirthData = 4;
inline bool World_CreateRole_Request::has_stbirthdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_CreateRole_Request::set_has_stbirthdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_CreateRole_Request::clear_has_stbirthdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_CreateRole_Request::clear_stbirthdata() {
  if (stbirthdata_ != NULL) stbirthdata_->::GameUserInfo::Clear();
  clear_has_stbirthdata();
}
inline const ::GameUserInfo& World_CreateRole_Request::stbirthdata() const {
  return stbirthdata_ != NULL ? *stbirthdata_ : *default_instance_->stbirthdata_;
}
inline ::GameUserInfo* World_CreateRole_Request::mutable_stbirthdata() {
  set_has_stbirthdata();
  if (stbirthdata_ == NULL) stbirthdata_ = new ::GameUserInfo;
  return stbirthdata_;
}
inline ::GameUserInfo* World_CreateRole_Request::release_stbirthdata() {
  clear_has_stbirthdata();
  ::GameUserInfo* temp = stbirthdata_;
  stbirthdata_ = NULL;
  return temp;
}
inline void World_CreateRole_Request::set_allocated_stbirthdata(::GameUserInfo* stbirthdata) {
  delete stbirthdata_;
  stbirthdata_ = stbirthdata;
  if (stbirthdata) {
    set_has_stbirthdata();
  } else {
    clear_has_stbirthdata();
  }
}

// -------------------------------------------------------------------

// World_CreateRole_Response

// optional int32 iResult = 1;
inline bool World_CreateRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_CreateRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_CreateRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_CreateRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_CreateRole_Response::iresult() const {
  return iresult_;
}
inline void World_CreateRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool World_CreateRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_CreateRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_CreateRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_CreateRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_CreateRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_CreateRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_CreateRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_CreateRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// -------------------------------------------------------------------

// World_FetchRole_Request

// optional .RoleID stRoleID = 1;
inline bool World_FetchRole_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_FetchRole_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_FetchRole_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_FetchRole_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_FetchRole_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_FetchRole_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_FetchRole_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_FetchRole_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional bool bIsLogin = 2;
inline bool World_FetchRole_Request::has_bislogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_FetchRole_Request::set_has_bislogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_FetchRole_Request::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_FetchRole_Request::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_FetchRole_Request::bislogin() const {
  return bislogin_;
}
inline void World_FetchRole_Request::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// optional int32 iReqID = 4;
inline bool World_FetchRole_Request::has_ireqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_FetchRole_Request::set_has_ireqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_FetchRole_Request::clear_has_ireqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_FetchRole_Request::clear_ireqid() {
  ireqid_ = 0;
  clear_has_ireqid();
}
inline ::google::protobuf::int32 World_FetchRole_Request::ireqid() const {
  return ireqid_;
}
inline void World_FetchRole_Request::set_ireqid(::google::protobuf::int32 value) {
  set_has_ireqid();
  ireqid_ = value;
}

// -------------------------------------------------------------------

// World_FetchRole_Response

// optional .RoleID stRoleID = 1;
inline bool World_FetchRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_FetchRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_FetchRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_FetchRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_FetchRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_FetchRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_FetchRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_FetchRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iResult = 2;
inline bool World_FetchRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_FetchRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_FetchRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_FetchRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_FetchRole_Response::iresult() const {
  return iresult_;
}
inline void World_FetchRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .GameUserInfo stUserInfo = 3;
inline bool World_FetchRole_Response::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_FetchRole_Response::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_FetchRole_Response::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_FetchRole_Response::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::GameUserInfo::Clear();
  clear_has_stuserinfo();
}
inline const ::GameUserInfo& World_FetchRole_Response::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::GameUserInfo* World_FetchRole_Response::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::GameUserInfo;
  return stuserinfo_;
}
inline ::GameUserInfo* World_FetchRole_Response::release_stuserinfo() {
  clear_has_stuserinfo();
  ::GameUserInfo* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void World_FetchRole_Response::set_allocated_stuserinfo(::GameUserInfo* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// optional bool bIsLogin = 4;
inline bool World_FetchRole_Response::has_bislogin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_FetchRole_Response::set_has_bislogin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_FetchRole_Response::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_FetchRole_Response::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_FetchRole_Response::bislogin() const {
  return bislogin_;
}
inline void World_FetchRole_Response::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// -------------------------------------------------------------------

// World_UpdateRole_Request

// optional .RoleID stRoleID = 1;
inline bool World_UpdateRole_Request::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRole_Request::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRole_Request::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRole_Request::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_UpdateRole_Request::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_UpdateRole_Request::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_UpdateRole_Request::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_UpdateRole_Request::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iReqID = 2;
inline bool World_UpdateRole_Request::has_ireqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UpdateRole_Request::set_has_ireqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UpdateRole_Request::clear_has_ireqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UpdateRole_Request::clear_ireqid() {
  ireqid_ = 0;
  clear_has_ireqid();
}
inline ::google::protobuf::int32 World_UpdateRole_Request::ireqid() const {
  return ireqid_;
}
inline void World_UpdateRole_Request::set_ireqid(::google::protobuf::int32 value) {
  set_has_ireqid();
  ireqid_ = value;
}

// optional .GameUserInfo stUserInfo = 3;
inline bool World_UpdateRole_Request::has_stuserinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_UpdateRole_Request::set_has_stuserinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_UpdateRole_Request::clear_has_stuserinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_UpdateRole_Request::clear_stuserinfo() {
  if (stuserinfo_ != NULL) stuserinfo_->::GameUserInfo::Clear();
  clear_has_stuserinfo();
}
inline const ::GameUserInfo& World_UpdateRole_Request::stuserinfo() const {
  return stuserinfo_ != NULL ? *stuserinfo_ : *default_instance_->stuserinfo_;
}
inline ::GameUserInfo* World_UpdateRole_Request::mutable_stuserinfo() {
  set_has_stuserinfo();
  if (stuserinfo_ == NULL) stuserinfo_ = new ::GameUserInfo;
  return stuserinfo_;
}
inline ::GameUserInfo* World_UpdateRole_Request::release_stuserinfo() {
  clear_has_stuserinfo();
  ::GameUserInfo* temp = stuserinfo_;
  stuserinfo_ = NULL;
  return temp;
}
inline void World_UpdateRole_Request::set_allocated_stuserinfo(::GameUserInfo* stuserinfo) {
  delete stuserinfo_;
  stuserinfo_ = stuserinfo;
  if (stuserinfo) {
    set_has_stuserinfo();
  } else {
    clear_has_stuserinfo();
  }
}

// optional bool bNeedResponse = 4;
inline bool World_UpdateRole_Request::has_bneedresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_UpdateRole_Request::set_has_bneedresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_UpdateRole_Request::clear_has_bneedresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_UpdateRole_Request::clear_bneedresponse() {
  bneedresponse_ = false;
  clear_has_bneedresponse();
}
inline bool World_UpdateRole_Request::bneedresponse() const {
  return bneedresponse_;
}
inline void World_UpdateRole_Request::set_bneedresponse(bool value) {
  set_has_bneedresponse();
  bneedresponse_ = value;
}

// -------------------------------------------------------------------

// World_UpdateRole_Response

// optional .RoleID stRoleID = 1;
inline bool World_UpdateRole_Response::has_stroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_UpdateRole_Response::set_has_stroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_UpdateRole_Response::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_UpdateRole_Response::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_UpdateRole_Response::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_UpdateRole_Response::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_UpdateRole_Response::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_UpdateRole_Response::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iResult = 2;
inline bool World_UpdateRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_UpdateRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_UpdateRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_UpdateRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_UpdateRole_Response::iresult() const {
  return iresult_;
}
inline void World_UpdateRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// World_KickRole_Request

// optional int32 iFromWorldID = 1;
inline bool World_KickRole_Request::has_ifromworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_KickRole_Request::set_has_ifromworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_KickRole_Request::clear_has_ifromworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_KickRole_Request::clear_ifromworldid() {
  ifromworldid_ = 0;
  clear_has_ifromworldid();
}
inline ::google::protobuf::int32 World_KickRole_Request::ifromworldid() const {
  return ifromworldid_;
}
inline void World_KickRole_Request::set_ifromworldid(::google::protobuf::int32 value) {
  set_has_ifromworldid();
  ifromworldid_ = value;
}

// optional int32 iFromZoneID = 2;
inline bool World_KickRole_Request::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_KickRole_Request::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_KickRole_Request::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_KickRole_Request::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_KickRole_Request::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_KickRole_Request::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional int32 iSessionID = 3;
inline bool World_KickRole_Request::has_isessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_KickRole_Request::set_has_isessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_KickRole_Request::clear_has_isessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_KickRole_Request::clear_isessionid() {
  isessionid_ = 0;
  clear_has_isessionid();
}
inline ::google::protobuf::int32 World_KickRole_Request::isessionid() const {
  return isessionid_;
}
inline void World_KickRole_Request::set_isessionid(::google::protobuf::int32 value) {
  set_has_isessionid();
  isessionid_ = value;
}

// optional .RoleID stKickedRoleID = 4;
inline bool World_KickRole_Request::has_stkickedroleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_KickRole_Request::set_has_stkickedroleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_KickRole_Request::clear_has_stkickedroleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_KickRole_Request::clear_stkickedroleid() {
  if (stkickedroleid_ != NULL) stkickedroleid_->::RoleID::Clear();
  clear_has_stkickedroleid();
}
inline const ::RoleID& World_KickRole_Request::stkickedroleid() const {
  return stkickedroleid_ != NULL ? *stkickedroleid_ : *default_instance_->stkickedroleid_;
}
inline ::RoleID* World_KickRole_Request::mutable_stkickedroleid() {
  set_has_stkickedroleid();
  if (stkickedroleid_ == NULL) stkickedroleid_ = new ::RoleID;
  return stkickedroleid_;
}
inline ::RoleID* World_KickRole_Request::release_stkickedroleid() {
  clear_has_stkickedroleid();
  ::RoleID* temp = stkickedroleid_;
  stkickedroleid_ = NULL;
  return temp;
}
inline void World_KickRole_Request::set_allocated_stkickedroleid(::RoleID* stkickedroleid) {
  delete stkickedroleid_;
  stkickedroleid_ = stkickedroleid;
  if (stkickedroleid) {
    set_has_stkickedroleid();
  } else {
    clear_has_stkickedroleid();
  }
}

// optional bool bIsLogin = 5;
inline bool World_KickRole_Request::has_bislogin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_KickRole_Request::set_has_bislogin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_KickRole_Request::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_KickRole_Request::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_KickRole_Request::bislogin() const {
  return bislogin_;
}
inline void World_KickRole_Request::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// -------------------------------------------------------------------

// World_KickRole_Response

// optional int32 iResult = 1;
inline bool World_KickRole_Response::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_KickRole_Response::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_KickRole_Response::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_KickRole_Response::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 World_KickRole_Response::iresult() const {
  return iresult_;
}
inline void World_KickRole_Response::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional int32 iFromWorldID = 2;
inline bool World_KickRole_Response::has_ifromworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_KickRole_Response::set_has_ifromworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_KickRole_Response::clear_has_ifromworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_KickRole_Response::clear_ifromworldid() {
  ifromworldid_ = 0;
  clear_has_ifromworldid();
}
inline ::google::protobuf::int32 World_KickRole_Response::ifromworldid() const {
  return ifromworldid_;
}
inline void World_KickRole_Response::set_ifromworldid(::google::protobuf::int32 value) {
  set_has_ifromworldid();
  ifromworldid_ = value;
}

// optional int32 iFromZoneID = 3;
inline bool World_KickRole_Response::has_ifromzoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_KickRole_Response::set_has_ifromzoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_KickRole_Response::clear_has_ifromzoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_KickRole_Response::clear_ifromzoneid() {
  ifromzoneid_ = 0;
  clear_has_ifromzoneid();
}
inline ::google::protobuf::int32 World_KickRole_Response::ifromzoneid() const {
  return ifromzoneid_;
}
inline void World_KickRole_Response::set_ifromzoneid(::google::protobuf::int32 value) {
  set_has_ifromzoneid();
  ifromzoneid_ = value;
}

// optional int32 iSessionID = 4;
inline bool World_KickRole_Response::has_isessionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_KickRole_Response::set_has_isessionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_KickRole_Response::clear_has_isessionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_KickRole_Response::clear_isessionid() {
  isessionid_ = 0;
  clear_has_isessionid();
}
inline ::google::protobuf::int32 World_KickRole_Response::isessionid() const {
  return isessionid_;
}
inline void World_KickRole_Response::set_isessionid(::google::protobuf::int32 value) {
  set_has_isessionid();
  isessionid_ = value;
}

// optional .RoleID stKickedRoleID = 5;
inline bool World_KickRole_Response::has_stkickedroleid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_KickRole_Response::set_has_stkickedroleid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_KickRole_Response::clear_has_stkickedroleid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_KickRole_Response::clear_stkickedroleid() {
  if (stkickedroleid_ != NULL) stkickedroleid_->::RoleID::Clear();
  clear_has_stkickedroleid();
}
inline const ::RoleID& World_KickRole_Response::stkickedroleid() const {
  return stkickedroleid_ != NULL ? *stkickedroleid_ : *default_instance_->stkickedroleid_;
}
inline ::RoleID* World_KickRole_Response::mutable_stkickedroleid() {
  set_has_stkickedroleid();
  if (stkickedroleid_ == NULL) stkickedroleid_ = new ::RoleID;
  return stkickedroleid_;
}
inline ::RoleID* World_KickRole_Response::release_stkickedroleid() {
  clear_has_stkickedroleid();
  ::RoleID* temp = stkickedroleid_;
  stkickedroleid_ = NULL;
  return temp;
}
inline void World_KickRole_Response::set_allocated_stkickedroleid(::RoleID* stkickedroleid) {
  delete stkickedroleid_;
  stkickedroleid_ = stkickedroleid;
  if (stkickedroleid) {
    set_has_stkickedroleid();
  } else {
    clear_has_stkickedroleid();
  }
}

// optional bool bIsLogin = 6;
inline bool World_KickRole_Response::has_bislogin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void World_KickRole_Response::set_has_bislogin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void World_KickRole_Response::clear_has_bislogin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void World_KickRole_Response::clear_bislogin() {
  bislogin_ = false;
  clear_has_bislogin();
}
inline bool World_KickRole_Response::bislogin() const {
  return bislogin_;
}
inline void World_KickRole_Response::set_bislogin(bool value) {
  set_has_bislogin();
  bislogin_ = value;
}

// -------------------------------------------------------------------

// ZoneOnlineInfo

// optional int32 iZoneID = 1;
inline bool ZoneOnlineInfo::has_izoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneOnlineInfo::set_has_izoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneOnlineInfo::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneOnlineInfo::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 ZoneOnlineInfo::izoneid() const {
  return izoneid_;
}
inline void ZoneOnlineInfo::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional int32 iRoleNum = 2;
inline bool ZoneOnlineInfo::has_irolenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneOnlineInfo::set_has_irolenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneOnlineInfo::clear_has_irolenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneOnlineInfo::clear_irolenum() {
  irolenum_ = 0;
  clear_has_irolenum();
}
inline ::google::protobuf::int32 ZoneOnlineInfo::irolenum() const {
  return irolenum_;
}
inline void ZoneOnlineInfo::set_irolenum(::google::protobuf::int32 value) {
  set_has_irolenum();
  irolenum_ = value;
}

// -------------------------------------------------------------------

// WorldOnlineInfo

// optional int32 iWorldID = 1;
inline bool WorldOnlineInfo::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldOnlineInfo::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldOnlineInfo::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldOnlineInfo::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iworldid() const {
  return iworldid_;
}
inline void WorldOnlineInfo::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iOnlineRoleNum = 2;
inline bool WorldOnlineInfo::has_ionlinerolenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldOnlineInfo::set_has_ionlinerolenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldOnlineInfo::clear_has_ionlinerolenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldOnlineInfo::clear_ionlinerolenum() {
  ionlinerolenum_ = 0;
  clear_has_ionlinerolenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::ionlinerolenum() const {
  return ionlinerolenum_;
}
inline void WorldOnlineInfo::set_ionlinerolenum(::google::protobuf::int32 value) {
  set_has_ionlinerolenum();
  ionlinerolenum_ = value;
}

// optional int32 iRegisterNum = 3;
inline bool WorldOnlineInfo::has_iregisternum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldOnlineInfo::set_has_iregisternum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldOnlineInfo::clear_has_iregisternum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldOnlineInfo::clear_iregisternum() {
  iregisternum_ = 0;
  clear_has_iregisternum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iregisternum() const {
  return iregisternum_;
}
inline void WorldOnlineInfo::set_iregisternum(::google::protobuf::int32 value) {
  set_has_iregisternum();
  iregisternum_ = value;
}

// optional int32 iMaxOnlineNum = 4;
inline bool WorldOnlineInfo::has_imaxonlinenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldOnlineInfo::set_has_imaxonlinenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldOnlineInfo::clear_has_imaxonlinenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldOnlineInfo::clear_imaxonlinenum() {
  imaxonlinenum_ = 0;
  clear_has_imaxonlinenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::imaxonlinenum() const {
  return imaxonlinenum_;
}
inline void WorldOnlineInfo::set_imaxonlinenum(::google::protobuf::int32 value) {
  set_has_imaxonlinenum();
  imaxonlinenum_ = value;
}

// optional int32 iMaxRegisterNum = 5;
inline bool WorldOnlineInfo::has_imaxregisternum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldOnlineInfo::set_has_imaxregisternum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldOnlineInfo::clear_has_imaxregisternum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldOnlineInfo::clear_imaxregisternum() {
  imaxregisternum_ = 0;
  clear_has_imaxregisternum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::imaxregisternum() const {
  return imaxregisternum_;
}
inline void WorldOnlineInfo::set_imaxregisternum(::google::protobuf::int32 value) {
  set_has_imaxregisternum();
  imaxregisternum_ = value;
}

// optional int32 iActiveZoneNum = 6;
inline bool WorldOnlineInfo::has_iactivezonenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldOnlineInfo::set_has_iactivezonenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldOnlineInfo::clear_has_iactivezonenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldOnlineInfo::clear_iactivezonenum() {
  iactivezonenum_ = 0;
  clear_has_iactivezonenum();
}
inline ::google::protobuf::int32 WorldOnlineInfo::iactivezonenum() const {
  return iactivezonenum_;
}
inline void WorldOnlineInfo::set_iactivezonenum(::google::protobuf::int32 value) {
  set_has_iactivezonenum();
  iactivezonenum_ = value;
}

// repeated .ZoneOnlineInfo stZoneInfos = 7;
inline int WorldOnlineInfo::stzoneinfos_size() const {
  return stzoneinfos_.size();
}
inline void WorldOnlineInfo::clear_stzoneinfos() {
  stzoneinfos_.Clear();
}
inline const ::ZoneOnlineInfo& WorldOnlineInfo::stzoneinfos(int index) const {
  return stzoneinfos_.Get(index);
}
inline ::ZoneOnlineInfo* WorldOnlineInfo::mutable_stzoneinfos(int index) {
  return stzoneinfos_.Mutable(index);
}
inline ::ZoneOnlineInfo* WorldOnlineInfo::add_stzoneinfos() {
  return stzoneinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >&
WorldOnlineInfo::stzoneinfos() const {
  return stzoneinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ZoneOnlineInfo >*
WorldOnlineInfo::mutable_stzoneinfos() {
  return &stzoneinfos_;
}

// -------------------------------------------------------------------

// World_OnlineStat_Request

// optional int32 iWorldID = 1;
inline bool World_OnlineStat_Request::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineStat_Request::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineStat_Request::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineStat_Request::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 World_OnlineStat_Request::iworldid() const {
  return iworldid_;
}
inline void World_OnlineStat_Request::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional .WorldOnlineInfo stWorldInfo = 2;
inline bool World_OnlineStat_Request::has_stworldinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineStat_Request::set_has_stworldinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineStat_Request::clear_has_stworldinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineStat_Request::clear_stworldinfo() {
  if (stworldinfo_ != NULL) stworldinfo_->::WorldOnlineInfo::Clear();
  clear_has_stworldinfo();
}
inline const ::WorldOnlineInfo& World_OnlineStat_Request::stworldinfo() const {
  return stworldinfo_ != NULL ? *stworldinfo_ : *default_instance_->stworldinfo_;
}
inline ::WorldOnlineInfo* World_OnlineStat_Request::mutable_stworldinfo() {
  set_has_stworldinfo();
  if (stworldinfo_ == NULL) stworldinfo_ = new ::WorldOnlineInfo;
  return stworldinfo_;
}
inline ::WorldOnlineInfo* World_OnlineStat_Request::release_stworldinfo() {
  clear_has_stworldinfo();
  ::WorldOnlineInfo* temp = stworldinfo_;
  stworldinfo_ = NULL;
  return temp;
}
inline void World_OnlineStat_Request::set_allocated_stworldinfo(::WorldOnlineInfo* stworldinfo) {
  delete stworldinfo_;
  stworldinfo_ = stworldinfo;
  if (stworldinfo) {
    set_has_stworldinfo();
  } else {
    clear_has_stworldinfo();
  }
}

// optional int32 uRecordTime = 3;
inline bool World_OnlineStat_Request::has_urecordtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_OnlineStat_Request::set_has_urecordtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_OnlineStat_Request::clear_has_urecordtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_OnlineStat_Request::clear_urecordtime() {
  urecordtime_ = 0;
  clear_has_urecordtime();
}
inline ::google::protobuf::int32 World_OnlineStat_Request::urecordtime() const {
  return urecordtime_;
}
inline void World_OnlineStat_Request::set_urecordtime(::google::protobuf::int32 value) {
  set_has_urecordtime();
  urecordtime_ = value;
}

// -------------------------------------------------------------------

// World_OnlineStat_Response

// optional int32 iWorldID = 1;
inline bool World_OnlineStat_Response::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_OnlineStat_Response::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_OnlineStat_Response::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_OnlineStat_Response::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 World_OnlineStat_Response::iworldid() const {
  return iworldid_;
}
inline void World_OnlineStat_Response::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// optional int32 iInstanceID = 2;
inline bool World_OnlineStat_Response::has_iinstanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_OnlineStat_Response::set_has_iinstanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_OnlineStat_Response::clear_has_iinstanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_OnlineStat_Response::clear_iinstanceid() {
  iinstanceid_ = 0;
  clear_has_iinstanceid();
}
inline ::google::protobuf::int32 World_OnlineStat_Response::iinstanceid() const {
  return iinstanceid_;
}
inline void World_OnlineStat_Response::set_iinstanceid(::google::protobuf::int32 value) {
  set_has_iinstanceid();
  iinstanceid_ = value;
}

// -------------------------------------------------------------------

// World_Chat_Notify

// optional .ChatChannelType iChannel = 1 [default = CHAT_CHANNEL_INVALID];
inline bool World_Chat_Notify::has_ichannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void World_Chat_Notify::set_has_ichannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void World_Chat_Notify::clear_has_ichannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void World_Chat_Notify::clear_ichannel() {
  ichannel_ = 0;
  clear_has_ichannel();
}
inline ::ChatChannelType World_Chat_Notify::ichannel() const {
  return static_cast< ::ChatChannelType >(ichannel_);
}
inline void World_Chat_Notify::set_ichannel(::ChatChannelType value) {
  assert(::ChatChannelType_IsValid(value));
  set_has_ichannel();
  ichannel_ = value;
}

// optional .RoleID stRoleID = 2;
inline bool World_Chat_Notify::has_stroleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void World_Chat_Notify::set_has_stroleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void World_Chat_Notify::clear_has_stroleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void World_Chat_Notify::clear_stroleid() {
  if (stroleid_ != NULL) stroleid_->::RoleID::Clear();
  clear_has_stroleid();
}
inline const ::RoleID& World_Chat_Notify::stroleid() const {
  return stroleid_ != NULL ? *stroleid_ : *default_instance_->stroleid_;
}
inline ::RoleID* World_Chat_Notify::mutable_stroleid() {
  set_has_stroleid();
  if (stroleid_ == NULL) stroleid_ = new ::RoleID;
  return stroleid_;
}
inline ::RoleID* World_Chat_Notify::release_stroleid() {
  clear_has_stroleid();
  ::RoleID* temp = stroleid_;
  stroleid_ = NULL;
  return temp;
}
inline void World_Chat_Notify::set_allocated_stroleid(::RoleID* stroleid) {
  delete stroleid_;
  stroleid_ = stroleid;
  if (stroleid) {
    set_has_stroleid();
  } else {
    clear_has_stroleid();
  }
}

// optional int32 iZoneID = 4;
inline bool World_Chat_Notify::has_izoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void World_Chat_Notify::set_has_izoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void World_Chat_Notify::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void World_Chat_Notify::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 World_Chat_Notify::izoneid() const {
  return izoneid_;
}
inline void World_Chat_Notify::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// optional .RoleID stTargetID = 5;
inline bool World_Chat_Notify::has_sttargetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void World_Chat_Notify::set_has_sttargetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void World_Chat_Notify::clear_has_sttargetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void World_Chat_Notify::clear_sttargetid() {
  if (sttargetid_ != NULL) sttargetid_->::RoleID::Clear();
  clear_has_sttargetid();
}
inline const ::RoleID& World_Chat_Notify::sttargetid() const {
  return sttargetid_ != NULL ? *sttargetid_ : *default_instance_->sttargetid_;
}
inline ::RoleID* World_Chat_Notify::mutable_sttargetid() {
  set_has_sttargetid();
  if (sttargetid_ == NULL) sttargetid_ = new ::RoleID;
  return sttargetid_;
}
inline ::RoleID* World_Chat_Notify::release_sttargetid() {
  clear_has_sttargetid();
  ::RoleID* temp = sttargetid_;
  sttargetid_ = NULL;
  return temp;
}
inline void World_Chat_Notify::set_allocated_sttargetid(::RoleID* sttargetid) {
  delete sttargetid_;
  sttargetid_ = sttargetid;
  if (sttargetid) {
    set_has_sttargetid();
  } else {
    clear_has_sttargetid();
  }
}

// optional string szMessage = 6;
inline bool World_Chat_Notify::has_szmessage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void World_Chat_Notify::set_has_szmessage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void World_Chat_Notify::clear_has_szmessage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void World_Chat_Notify::clear_szmessage() {
  if (szmessage_ != &::google::protobuf::internal::kEmptyString) {
    szmessage_->clear();
  }
  clear_has_szmessage();
}
inline const ::std::string& World_Chat_Notify::szmessage() const {
  return *szmessage_;
}
inline void World_Chat_Notify::set_szmessage(const ::std::string& value) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(value);
}
inline void World_Chat_Notify::set_szmessage(const char* value) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(value);
}
inline void World_Chat_Notify::set_szmessage(const char* value, size_t size) {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  szmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* World_Chat_Notify::mutable_szmessage() {
  set_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    szmessage_ = new ::std::string;
  }
  return szmessage_;
}
inline ::std::string* World_Chat_Notify::release_szmessage() {
  clear_has_szmessage();
  if (szmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szmessage_;
    szmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void World_Chat_Notify::set_allocated_szmessage(::std::string* szmessage) {
  if (szmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete szmessage_;
  }
  if (szmessage) {
    set_has_szmessage();
    szmessage_ = szmessage;
  } else {
    clear_has_szmessage();
    szmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameProtocol_2eWorld_2eproto__INCLUDED
